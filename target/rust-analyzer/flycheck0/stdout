{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.103","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.103/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.103/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro","span-locations"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/proc-macro2-621e8564265e8e79/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.103","linked_libs":[],"linked_paths":[],"cfgs":["span_locations","wrap_proc_macro","proc_macro_span","proc_macro_span_location","proc_macro_span_file"],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/proc-macro2-af6039601e804d76/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#quote@1.0.41","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.41/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.41/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/quote-04579cb0d0f5f749/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.20","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-ident-1.0.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"unicode_ident","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-ident-1.0.20/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libunicode_ident-b44cf12886db8ed6.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libunicode_ident-b44cf12886db8ed6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/version_check-0.9.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"version_check","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/version_check-0.9.5/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libversion_check-860bb0733ba36c13.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libversion_check-860bb0733ba36c13.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.177","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.177/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.177/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/libc-21df296edf7906d8/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#typenum@1.19.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.19.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.19.0/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/typenum-6a6941c26de36425/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_core@1.0.228","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_core-1.0.228/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_core-1.0.228/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","rc","result","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/serde_core-d5d5fa9a6e45272a/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde@1.0.228","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.228/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.228/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","derive","rc","serde_derive","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/serde-dac71494c3b5a24c/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#quote@1.0.41","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/quote-2b66e1d902dd9b41/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.103","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.103/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"proc_macro2","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.103/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro","span-locations"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libproc_macro2-6800262f291c539a.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libproc_macro2-6800262f291c539a.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.177","linked_libs":[],"linked_paths":[],"cfgs":["freebsd12"],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/libc-725f43f395fd7727/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#typenum@1.19.0","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/typenum-9ef6629bf71a589d/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.9","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.9/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.9/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["more_lengths"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/generic-array-ca26c0b952c882c0/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_core@1.0.228","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/serde_core-de1891acc047ff48/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde@1.0.228","linked_libs":[],"linked_paths":[],"cfgs":["if_docsrs_then_no_serde_core"],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/serde-0bade302ec2280ac/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg-if-1.0.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cfg_if","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg-if-1.0.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcfg_if-021372985cd5d88d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#quote@1.0.41","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.41/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"quote","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.41/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libquote-5b1067c60b1a81c7.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libquote-5b1067c60b1a81c7.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.9","linked_libs":[],"linked_paths":[],"cfgs":["relaxed_coherence","ga_is_deprecated"],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/generic-array-caeafef00f41cb69/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_core@1.0.228","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_core-1.0.228/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde_core","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_core-1.0.228/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","rc","result","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libserde_core-888bc150d442db5e.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libserde_core-888bc150d442db5e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.177","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.177/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.177/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/liblibc-344a63254b011004.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#typenum@1.19.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.19.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"typenum","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.19.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libtypenum-23246b1d57e58811.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_core@1.0.228","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_core-1.0.228/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_core-1.0.228/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["rc","result","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/serde_core-2c2d88eb8081c0bb/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["clone-impls","default","derive","extra-traits","fold","full","parsing","printing","proc-macro","quote"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/syn-a93362832af26e8e/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.8.27","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.27/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.27/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["simd"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/zerocopy-3611ad01554ec088/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#syn@2.0.108","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.108/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"syn","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.108/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["clone-impls","default","derive","extra-traits","fold","full","parsing","printing","proc-macro","visit","visit-mut"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsyn-ace9b3ccc15b0c30.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsyn-ace9b3ccc15b0c30.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.9","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"generic_array","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.9/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["more_lengths"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libgeneric_array-68595bb8e62febb2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.16","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"getrandom","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libgetrandom-372d2ce766ee538d.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_core@1.0.228","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/serde_core-372c50a6a1ff88cb/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"autocfg","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.5.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libautocfg-19f8b634138c1320.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libautocfg-19f8b634138c1320.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/syn-dd657aba44b6209c/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.8.27","linked_libs":[],"linked_paths":[],"cfgs":["zerocopy_core_error_1_81_0","zerocopy_diagnostic_on_unimplemented_1_78_0","zerocopy_generic_bounds_in_const_fn_1_61_0","zerocopy_target_has_atomics_1_60_0","zerocopy_aarch64_simd_1_59_0","zerocopy_panic_in_const_and_vec_try_reserve_1_57_0"],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/zerocopy-c83249a1c8810ad3/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/subtle-2.6.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"subtle","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/subtle-2.6.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","i128","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsubtle-1854b041281278bd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.228","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_derive-1.0.228/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"serde_derive","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_derive-1.0.228/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libserde_derive-a837dc5157ad85b1.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_core","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","getrandom","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librand_core-7335ac0fee26c740.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_core@1.0.228","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_core-1.0.228/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde_core","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_core-1.0.228/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["rc","result","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libserde_core-d06a74a930f141a7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"syn","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["clone-impls","default","derive","extra-traits","fold","full","parsing","printing","proc-macro","quote"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsyn-36d359885ff73ddd.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsyn-36d359885ff73ddd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","i128","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/num-traits-0fbc16157da24883/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.16.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.16.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hashbrown","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.16.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libhashbrown-6459f0112635324e.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libhashbrown-6459f0112635324e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/equivalent-1.0.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"equivalent","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/equivalent-1.0.2/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libequivalent-0a4e0de06dcb4144.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libequivalent-0a4e0de06dcb4144.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#semver@1.0.27","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/semver-1.0.27/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"semver","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/semver-1.0.27/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","serde","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsemver-47e60bef20526d4f.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsemver-47e60bef20526d4f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde@1.0.228","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.228/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.228/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","derive","rc","serde_derive","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libserde-b4aa2a6edd4b9dbe.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libserde-b4aa2a6edd4b9dbe.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crypto-common-0.1.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crypto_common","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crypto-common-0.1.6/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["getrandom","rand_core","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcrypto_common-bb3b7fe554ae9724.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde@1.0.228","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.228/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.228/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","derive","rc","serde_derive","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libserde-615b0648ad2454b8.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19","linked_libs":[],"linked_paths":[],"cfgs":["has_total_cmp"],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/num-traits-1440e1677f14d73b/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#indexmap@2.12.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.12.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"indexmap","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.12.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","serde","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libindexmap-5890548eacc4f442.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libindexmap-5890548eacc4f442.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.17","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cpufeatures-0.2.17/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cpufeatures","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cpufeatures-0.2.17/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcpufeatures-a359d068608b5923.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#block-buffer@0.10.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-buffer-0.10.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"block_buffer","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-buffer-0.10.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libblock_buffer-723d1a2289d38920.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.8.27","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.27/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"zerocopy","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.27/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["simd"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libzerocopy-dc14fffd3ec8abe8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.10.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"digest","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.10.7/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","block-buffer","core-api","default","mac","std","subtle"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libdigest-b06b68497a825f72.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustc_version@0.4.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc_version-0.4.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rustc_version","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc_version-0.4.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librustc_version-9471ed1ffae20024.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librustc_version-9471ed1ffae20024.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"once_cell","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","race","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libonce_cell-082742b7a8d17567.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libonce_cell-082742b7a8d17567.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#winnow@0.7.13","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/winnow-0.7.13/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"winnow","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/winnow-0.7.13/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libwinnow-ecef026f0141868d.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libwinnow-ecef026f0141868d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#toml_datetime@0.7.3","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/toml_datetime-0.7.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"toml_datetime","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/toml_datetime-0.7.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libtoml_datetime-7d29d5d403f59e02.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libtoml_datetime-7d29d5d403f59e02.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zeroize_derive@1.4.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize_derive-1.4.2/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"zeroize_derive","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize_derive-1.4.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libzeroize_derive-77cf74573c105cad.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_traits","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","i128","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libnum_traits-2e53679020aff140.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"once_cell","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","race","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libonce_cell-480b3e6efc28c90f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#toml_parser@1.0.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/toml_parser-1.0.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"toml_parser","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/toml_parser-1.0.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libtoml_parser-fe1d458df1ca415a.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libtoml_parser-fe1d458df1ca415a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize-1.8.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"zeroize","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize-1.8.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","zeroize_derive"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libzeroize-a98bd4faa8de3fec.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#curve25519-dalek@4.1.3","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-4.1.3/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-4.1.3/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","digest","precomputed-tables","rand_core","serde","zeroize"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/curve25519-dalek-3fbecfc945216895/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cfg_aliases@0.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg_aliases-0.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cfg_aliases","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg_aliases-0.2.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcfg_aliases-34e2afb5792ed4cf.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcfg_aliases-34e2afb5792ed4cf.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha2-0.10.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"sha2","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha2-0.10.9/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsha2-5c94ab898a709107.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#five8_core@0.1.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/five8_core-0.1.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"five8_core","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/five8_core-0.1.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libfive8_core-499ac31b2c1bd7fb.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bytemuck_derive@1.10.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytemuck_derive-1.10.2/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"bytemuck_derive","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytemuck_derive-1.10.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbytemuck_derive-d53c168c3b3dd7f8.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.12","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/ahash-e531e0b8f5182082/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#toml_edit@0.23.7","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/toml_edit-0.23.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"toml_edit","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/toml_edit-0.23.7/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["parse"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libtoml_edit-3a5bc5507de1ef2b.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libtoml_edit-3a5bc5507de1ef2b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#borsh@1.5.7","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["borsh-derive","default","derive","std","unstable__schema"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/borsh-3595a089090f6223/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#curve25519-dalek@4.1.3","linked_libs":[],"linked_paths":[],"cfgs":["curve25519_dalek_bits=\"64\"","nightly","curve25519_dalek_backend=\"serial\""],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/curve25519-dalek-8414ac130d3e4108/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#five8@0.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/five8-0.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"five8","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/five8-0.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libfive8-4c100921c3bf93f7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bytemuck@1.24.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytemuck-1.24.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bytemuck","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytemuck-1.24.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bytemuck_derive","derive","min_const_generics"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbytemuck-b77acc5ddf208b45.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-sanitize@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-sanitize-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_sanitize","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-sanitize-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_sanitize-d0a5b4722fc29b2a.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.12","linked_libs":[],"linked_paths":[],"cfgs":["specialize","folded_multiply"],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/ahash-98305824ed50e360/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#toml@0.5.11","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/toml-0.5.11/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"toml","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/toml-0.5.11/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libtoml-7a59f50e1a8d2b8c.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libtoml-7a59f50e1a8d2b8c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro-crate@3.4.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro-crate-3.4.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"proc_macro_crate","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro-crate-3.4.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libproc_macro_crate-05f15e71a03e30d9.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libproc_macro_crate-05f15e71a03e30d9.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#borsh@1.5.7","linked_libs":[],"linked_paths":[],"cfgs":["hash_collections"],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/borsh-868a82a97b88885b/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#curve25519-dalek@4.1.3","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-4.1.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"curve25519_dalek","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-4.1.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","digest","precomputed-tables","rand_core","serde","zeroize"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcurve25519_dalek-5702971c437cac2d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#borsh-derive-internal@0.10.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-derive-internal-0.10.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"borsh_derive_internal","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-derive-internal-0.10.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libborsh_derive_internal-de9941a0e4ec5535.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libborsh_derive_internal-de9941a0e4ec5535.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-atomic-u64@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-atomic-u64-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_atomic_u64","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-atomic-u64-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_atomic_u64-c59ffe452a8233e7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.12","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ahash","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libahash-89ab8d26aaed3b6e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro-crate@0.1.5","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro-crate-0.1.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"proc_macro_crate","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro-crate-0.1.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libproc_macro_crate-fe9ab603cef965d4.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libproc_macro_crate-fe9ab603cef965d4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#borsh-schema-derive-internal@0.10.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-schema-derive-internal-0.10.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"borsh_schema_derive_internal","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-schema-derive-internal-0.10.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libborsh_schema_derive_internal-bf81f7e031a5fc6c.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libborsh_schema_derive_internal-bf81f7e031a5fc6c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#borsh-derive@1.5.7","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-derive-1.5.7/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"borsh_derive","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-derive-1.5.7/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","schema"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libborsh_derive-46f897e79a969a1d.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.13.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.13.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hashbrown","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.13.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["ahash","default","inline-more"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libhashbrown-8827b75491694ac5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#borsh-derive@0.10.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-derive-0.10.4/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"borsh_derive","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-derive-0.10.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libborsh_derive-c1995c5fe22d4320.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#five8_const@0.1.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/five8_const-0.1.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"five8_const","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/five8_const-0.1.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libfive8_const-45646e7666e611b2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-decode-error@2.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-decode-error-2.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_decode_error","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-decode-error-2.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_decode_error-2854fe5d1c12ff53.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#typenum@1.19.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.19.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"typenum","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.19.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libtypenum-828ff32703614153.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libtypenum-828ff32703614153.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.145","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.145/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.145/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/serde_json-6d28bbe585fdfb44/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.15","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itoa-1.0.15/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"itoa","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itoa-1.0.15/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libitoa-6b9cef7439bd5e89.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#borsh@1.5.7","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"borsh","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["borsh-derive","default","derive","std","unstable__schema"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libborsh-7bb7ef2d833c36c9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#borsh@0.10.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"borsh","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libborsh-1289444777651f19.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.9","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"generic_array","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.9/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["more_lengths"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libgeneric_array-3ade274d1f2335d5.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libgeneric_array-3ade274d1f2335d5.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.145","linked_libs":[],"linked_paths":[],"cfgs":["fast_arithmetic=\"64\""],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/serde_json-f520fabac5b7b242/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.20","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ryu-1.0.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ryu","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ryu-1.0.20/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libryu-5f61f105a3e1360a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.6","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memchr","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.6/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libmemchr-f7831bf02ccc3856.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bincode@1.3.3","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bincode-1.3.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bincode","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bincode-1.3.3/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbincode-a19979e7923f64c2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg-if-1.0.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cfg_if","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg-if-1.0.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcfg_if-be2c2d413d2dee86.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcfg_if-be2c2d413d2dee86.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-hash@2.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-hash-2.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_hash","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-hash-2.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["borsh","bytemuck","serde","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_hash-592463e07b78abe6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.145","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.145/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde_json","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.145/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libserde_json-605669afe43ef2e3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.177","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.177/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.177/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/liblibc-bb28474768cdd9ed.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/liblibc-bb28474768cdd9ed.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crypto-common-0.1.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crypto_common","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crypto-common-0.1.6/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcrypto_common-5092c77b781f6ad8.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcrypto_common-5092c77b781f6ad8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#block-buffer@0.10.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-buffer-0.10.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"block_buffer","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-buffer-0.10.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libblock_buffer-4eb1c7eb6bb588c5.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libblock_buffer-4eb1c7eb6bb588c5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bs58@0.5.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bs58-0.5.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bs58","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bs58-0.5.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbs58-191b56cad2f3133d.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbs58-191b56cad2f3133d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ppv-lite86@0.2.21","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ppv-lite86-0.2.21/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ppv_lite86","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ppv-lite86-0.2.21/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["simd","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libppv_lite86-15c7c08e6c8cb9d8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.17","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.17/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.17/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/thiserror-fdc60f13e20fe84a/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-sha256-hasher@2.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-sha256-hasher-2.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_sha256_hasher","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-sha256-hasher-2.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["sha2"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_sha256_hasher-3dc4ca528c9e44cd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.17","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cpufeatures-0.2.17/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cpufeatures","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cpufeatures-0.2.17/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcpufeatures-72fe8db66de9bdec.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcpufeatures-72fe8db66de9bdec.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.10.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"digest","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.10.7/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","block-buffer","core-api","default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libdigest-7e5ab17ba9874b1f.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libdigest-7e5ab17ba9874b1f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#lazy_static@1.5.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lazy_static-1.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"lazy_static","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lazy_static-1.5.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/liblazy_static-0f5af0f2172e3ebd.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.17","linked_libs":[],"linked_paths":[],"cfgs":["error_generic_member_access"],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/thiserror-abbe42de752da47d/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@2.0.17","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.17/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"thiserror_impl","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.17/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libthiserror_impl-d39a4203487a004c.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/subtle-2.6.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"subtle","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/subtle-2.6.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["i128","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsubtle-84427e5343b7c62c.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsubtle-84427e5343b7c62c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-msg@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-msg-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_msg","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-msg-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_msg-bb15972e8ff94c9b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-pubkey@2.4.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-pubkey-2.4.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_pubkey","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-pubkey-2.4.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["borsh","bytemuck","curve25519","default","serde","sha2","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_pubkey-8073242705c16ee1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha2-0.10.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"sha2","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha2-0.10.9/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsha2-149982de1692847f.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsha2-149982de1692847f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/thiserror-234c3a899086c8d5/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#keccak@0.1.5","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/keccak-0.1.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"keccak","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/keccak-0.1.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libkeccak-f9c262595191aa28.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@1.0.69","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-1.0.69/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"thiserror_impl","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-1.0.69/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libthiserror_impl-81e281c6eff32b13.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.3.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_chacha-0.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_chacha","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_chacha-0.3.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","serde","serde1","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librand_chacha-2f1986d7a126bc68.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-sdk-macro@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-sdk-macro-2.2.1/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"solana_sdk_macro","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-sdk-macro-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_sdk_macro-a1b0fc978c3e5c1e.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#opaque-debug@0.3.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/opaque-debug-0.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"opaque_debug","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/opaque-debug-0.3.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libopaque_debug-d0aa9eb6f398883e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-instruction@2.3.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-instruction-2.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_instruction","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-instruction-2.3.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bincode","borsh","default","serde","std","syscalls"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_instruction-2f3fde19d6f031f1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-sdk-ids@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-sdk-ids-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_sdk_ids","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-sdk-ids-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_sdk_ids-58ec34488aa25f86.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69","linked_libs":[],"linked_paths":[],"cfgs":["error_generic_member_access"],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/thiserror-f10e78885de2b70b/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#sha3@0.10.8","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha3-0.10.8/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"sha3","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha3-0.10.8/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsha3-bf654b068783c286.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","getrandom","libc","rand_chacha","std","std_rng"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librand-4eb11e0e0ec446e0.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.145","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.145/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.145/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std","unbounded_depth"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/serde_json-b2e2be89ceef6f0a/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crunchy@0.2.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crunchy-0.2.4/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crunchy-0.2.4/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","limit_128"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/crunchy-8f3d677623ae294c/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.15","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itoa-1.0.15/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"itoa","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itoa-1.0.15/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libitoa-58f9458b97ea15bc.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libitoa-58f9458b97ea15bc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-program-error@2.2.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-error-2.2.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_program_error","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-error-2.2.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["borsh","serde"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_program_error-c8f0767396383fc1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-sysvar-id@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-sysvar-id-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_sysvar_id","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-sysvar-id-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_sysvar_id-223a2daa724bc2e7.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.145","linked_libs":[],"linked_paths":[],"cfgs":["fast_arithmetic=\"64\""],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/serde_json-412cfdbd00aa6d74/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-program-memory@2.3.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-memory-2.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_program_memory","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-memory-2.3.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_program_memory-10898061eadeb7fd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.20","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ryu-1.0.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ryu","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ryu-1.0.20/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libryu-49bb07f7ccc1bf3f.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libryu-49bb07f7ccc1bf3f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.6","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memchr","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.6/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libmemchr-41b21cd23d4d4b54.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libmemchr-41b21cd23d4d4b54.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-transaction-error@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-transaction-error-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_transaction_error","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-transaction-error-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_transaction_error-b899e157b4c4e6f0.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#crunchy@0.2.4","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[["CRUNCHY_LIB_SUFFIX","/lib.rs"]],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/crunchy-86234250400691db/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.145","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.145/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde_json","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.145/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std","unbounded_depth"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libserde_json-23f7c087d3d912c9.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libserde_json-23f7c087d3d912c9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-account-info@2.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-account-info-2.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_account_info","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-account-info-2.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bincode"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_account_info-ee318532aabc9fe3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"thiserror","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libthiserror-0030316364e6d3ad.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libthiserror-0030316364e6d3ad.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.17","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.17/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"thiserror","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.17/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libthiserror-b171e8abb7cd5837.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#inout@0.1.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/inout-0.1.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"inout","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/inout-0.1.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libinout-e3031b4f85a5cdf8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-system-interface@1.0.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-system-interface-1.0.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_system_interface","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-system-interface-1.0.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bincode","serde"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_system_interface-52c01f838edabce4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-derive@0.4.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-derive-0.4.2/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"num_derive","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-derive-0.4.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libnum_derive-edfc6a0d43c66f1d.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"byteorder","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbyteorder-4c292550826dcf05.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cipher-0.4.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cipher","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cipher-0.4.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcipher-cca3e8b61f76bbe9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#either@1.15.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/either-1.15.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"either","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/either-1.15.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std","use_std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libeither-bbcd56132a99411f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.22.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"base64","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.22.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbase64-1eabae73d0623fda.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crunchy@0.2.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crunchy-0.2.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crunchy","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crunchy-0.2.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","limit_128"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcrunchy-943f0c9125d27c33.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcrunchy-943f0c9125d27c33.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-clock@2.2.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-clock-2.2.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_clock","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-clock-2.2.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde","sysvar"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_clock-31a7327d4ac49e9b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#digest@0.9.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.9.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"digest","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.9.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libdigest-a56e957a388bd5c1.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libdigest-a56e957a388bd5c1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#find-msvc-tools@0.1.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/find-msvc-tools-0.1.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"find_msvc_tools","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/find-msvc-tools-0.1.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libfind_msvc_tools-1afb6d7bcea1cb26.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libfind_msvc_tools-1afb6d7bcea1cb26.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#shlex@1.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/shlex-1.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"shlex","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/shlex-1.3.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libshlex-f19a3843566fc779.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libshlex-f19a3843566fc779.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#aes@0.8.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"aes","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libaes-a5df814b1905a5b7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.1.16","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.1.16/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.1.16/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/getrandom-2d69ba7f1da75d99/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libsecp256k1-core@0.2.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsecp256k1-core-0.2.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libsecp256k1_core","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsecp256k1-core-0.2.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/liblibsecp256k1_core-2e7bfd22619872d6.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/liblibsecp256k1_core-2e7bfd22619872d6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cc@1.2.43","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.43/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cc","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.43/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcc-3f84d757d98483ac.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcc-3f84d757d98483ac.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.46","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-integer-0.1.46/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_integer","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-integer-0.1.46/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["i128","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libnum_integer-5c25ff4cf76217b3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#arrayref@0.3.9","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arrayref-0.3.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"arrayref","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arrayref-0.3.9/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarrayref-0bfc4093874e69ef.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/percent-encoding-2.3.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"percent_encoding","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/percent-encoding-2.3.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libpercent_encoding-04904b08858ebe4b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fnv-1.0.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fnv","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fnv-1.0.7/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libfnv-f322da825a7e55ae.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.1.16","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/getrandom-ac86d0dad99969e7/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.4.6","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-bigint-0.4.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_bigint","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-bigint-0.4.6/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","rand","serde","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libnum_bigint-304880943c2c7240.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#blake3@1.8.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blake3-1.8.2/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blake3-1.8.2/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std","traits-preview"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/blake3-2ed523b355a82bec/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#feature-probe@0.1.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/feature-probe-0.1.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"feature_probe","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/feature-probe-0.1.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libfeature_probe-e24c5e8b59897013.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libfeature_probe-e24c5e8b59897013.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/crossbeam-utils-b4f1117e647b8c69/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#qstring@0.7.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/qstring-0.7.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"qstring","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/qstring-0.7.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libqstring-30131ddea49484ba.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libsecp256k1-gen-genmult@0.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsecp256k1-gen-genmult-0.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libsecp256k1_gen_genmult","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsecp256k1-gen-genmult-0.2.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/liblibsecp256k1_gen_genmult-35fc13e302622efa.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/liblibsecp256k1_gen_genmult-35fc13e302622efa.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#uriparse@0.6.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/uriparse-0.6.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"uriparse","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/uriparse-0.6.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/liburiparse-9b3762609315ba46.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.1.16","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.1.16/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"getrandom","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.1.16/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libgetrandom-c2ab3b07adced9a5.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/crossbeam-utils-e3f9604ecedce19b/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#blake3@1.8.2","linked_libs":["static=blake3_neon"],"linked_paths":["native=/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/blake3-bedd009df0affe86/out"],"cfgs":["blake3_neon"],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/blake3-bedd009df0affe86/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bv@0.11.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bv-0.11.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bv-0.11.1/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/bv-45df4690b0a9b79d/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libsecp256k1-gen-ecmult@0.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsecp256k1-gen-ecmult-0.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libsecp256k1_gen_ecmult","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsecp256k1-gen-ecmult-0.2.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/liblibsecp256k1_gen_ecmult-3aa8a18359b7ca18.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/liblibsecp256k1_gen_ecmult-3aa8a18359b7ca18.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#universal-hash@0.5.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/universal-hash-0.5.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"universal_hash","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/universal-hash-0.5.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libuniversal_hash-dabe8a9ee5d9b976.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#digest@0.9.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.9.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"digest","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.9.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libdigest-ec13edd944a41759.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#derivation-path@0.2.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/derivation-path-0.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"derivation_path","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/derivation-path-0.2.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libderivation_path-551db790477d8213.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_core@0.5.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.5.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_core","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.5.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","getrandom","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librand_core-290b564ef51fe09f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#log@0.4.28","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"log","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/liblog-b7186002c9038ba8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#arrayvec@0.7.6","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arrayvec-0.7.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"arrayvec","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arrayvec-0.7.6/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarrayvec-1047182aa3621fc8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#constant_time_eq@0.3.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/constant_time_eq-0.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"constant_time_eq","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/constant_time_eq-0.3.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libconstant_time_eq-3fb8524186232f68.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-program-option@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-option-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_program_option","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-option-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_program_option-128f6e114de8a549.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#unicode-segmentation@1.12.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-segmentation-1.12.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"unicode_segmentation","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-segmentation-1.12.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libunicode_segmentation-9c434ff2d30cc239.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libunicode_segmentation-9c434ff2d30cc239.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.100","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.100/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.100/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/anyhow-1f8f876e6925bba4/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-derivation-path@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-derivation-path-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_derivation_path","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-derivation-path-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_derivation_path-6cdce566038ee47e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.2.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_chacha-0.2.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_chacha","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_chacha-0.2.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librand_chacha-0df53f8346de5149.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.100","linked_libs":[],"linked_paths":[],"cfgs":["std_backtrace","error_generic_member_access"],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/anyhow-9edcfa9c3517f51c/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-fee-calculator@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-fee-calculator-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_fee_calculator","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-fee-calculator-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_fee_calculator-300e174131f82499.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#blake3@1.8.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blake3-1.8.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"blake3","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blake3-1.8.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std","traits-preview"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libblake3-36b78ec6272c7cc5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#polyval@0.6.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyval-0.6.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"polyval","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyval-0.6.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libpolyval-7bba0c358d5b72e3.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#bv@0.11.1","linked_libs":[],"linked_paths":[],"cfgs":["int_128","inclusive_range"],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/bv-c72d8f2eebb886e5/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libsecp256k1@0.6.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsecp256k1-0.6.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsecp256k1-0.6.0/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["sha2","static-context","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/libsecp256k1-ace2ec70abe27bc7/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ctr@0.9.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ctr-0.9.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ctr","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ctr-0.9.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libctr-08c8833a4a85c268.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crunchy@0.2.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crunchy-0.2.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crunchy","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crunchy-0.2.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","limit_128"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcrunchy-9e28c68b12aa9f71.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-rent@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-rent-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_rent","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-rent-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde","sysvar"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_rent-036973de94ffb9bc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-slot-hashes@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-slot-hashes-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_slot_hashes","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-slot-hashes-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde","sysvar"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_slot_hashes-86f4d31036bcd5f3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-serialize-utils@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-serialize-utils-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_serialize_utils","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-serialize-utils-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_serialize_utils-3a23fb6f2f16f96c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-signature@2.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-signature-2.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_signature","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-signature-2.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_signature-32364780c83e0c28.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hmac@0.12.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hmac-0.12.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hmac","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hmac-0.12.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libhmac-aec7f14b21aa2837.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pbkdf2@0.11.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pbkdf2-0.11.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pbkdf2","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pbkdf2-0.11.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libpbkdf2-cbe71f8dd8e38f4b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#aead@0.5.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aead-0.5.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"aead","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aead-0.5.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","getrandom","rand_core"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libaead-2c031ae3fe6c5331.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-short-vec@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-short-vec-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_short_vec","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-short-vec-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_short_vec-6af2fec9daa36104.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_bytes@0.11.19","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_bytes-0.11.19/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde_bytes","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_bytes-0.11.19/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libserde_bytes-6dfbedf3a07501fe.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#block-buffer@0.9.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-buffer-0.9.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"block_buffer","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-buffer-0.9.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libblock_buffer-7e56bdc55d340fca.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libsecp256k1-core@0.2.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsecp256k1-core-0.2.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libsecp256k1_core","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsecp256k1-core-0.2.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/liblibsecp256k1_core-1fb4876fb5603768.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-signer@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-signer-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_signer","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-signer-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_signer-5f1f0a96ba9cb26a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#aes-gcm-siv@0.11.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-gcm-siv-0.11.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"aes_gcm_siv","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-gcm-siv-0.11.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["aes","alloc","default","getrandom"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libaes_gcm_siv-dde713158c26f2a1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-seed-phrase@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-seed-phrase-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_seed_phrase","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-seed-phrase-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_seed_phrase-36f11935b1b12113.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.100","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.100/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"anyhow","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.100/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanyhow-39b81fa88211c06d.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanyhow-39b81fa88211c06d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#sha2@0.9.9","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha2-0.9.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"sha2","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha2-0.9.9/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsha2-574eb5e581dd8735.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand@0.7.3","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.7.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.7.3/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","getrandom","getrandom_package","libc","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librand-d035d90ac0339d02.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bv@0.11.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bv-0.11.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bv","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bv-0.11.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbv-38213dadedb1951d.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#libsecp256k1@0.6.0","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/libsecp256k1-34a02a2f9d3f6876/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-seed-derivable@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-seed-derivable-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_seed_derivable","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-seed-derivable-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_seed_derivable-d55ee5f783e9aade.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#itertools@0.12.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-0.12.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"itertools","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-0.12.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","use_alloc","use_std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libitertools-fa04296b5119bd73.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-cpi@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-cpi-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_cpi","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-cpi-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_cpi-9183d0f0263fe5be.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#merlin@3.0.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/merlin-3.0.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"merlin","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/merlin-3.0.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libmerlin-ef73004a898aa20a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-program-entrypoint@2.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_program_entrypoint","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_program_entrypoint-4bd08e5a3e55f9dc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-bincode@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-bincode-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_bincode","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-bincode-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_bincode-43606bfc0bcacb41.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#memoffset@0.9.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.9.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.9.1/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/memoffset-45d9951728ceeb32/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bitflags@2.10.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-2.10.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bitflags","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-2.10.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbitflags-bf964dfae52b14d0.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#base64@0.12.3","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.12.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"base64","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.12.3/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbase64-3120633635acdf61.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-stake-interface@1.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-stake-interface-1.2.1/Cargo.toml","target":{"kind":["rlib"],"crate_types":["rlib"],"name":"solana_stake_interface","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-stake-interface-1.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bincode","borsh","serde"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_stake_interface-24c271104c94e201.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-slot-history@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-slot-history-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_slot_history","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-slot-history-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde","sysvar"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_slot_history-bc684bdcc7611b83.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-zk-sdk@2.3.13","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-zk-sdk-2.3.13/Cargo.toml","target":{"kind":["cdylib","rlib"],"crate_types":["cdylib","rlib"],"name":"solana_zk_sdk","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-zk-sdk-2.3.13/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_zk_sdk-4603b174e4caccdb.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libsecp256k1@0.6.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsecp256k1-0.6.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libsecp256k1","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsecp256k1-0.6.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["sha2","static-context","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/liblibsecp256k1-7ea54d6ae2e5de86.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#memoffset@0.9.1","linked_libs":[],"linked_paths":[],"cfgs":["tuple_ty","allow_clippy","maybe_uninit","doctests","raw_ref_macros","stable_const","stable_offset_of"],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/memoffset-8d70a3a71464c0e8/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-message@2.4.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-message-2.4.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_message","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-message-2.4.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bincode","blake3","serde"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_message-ef550eaa1157f30e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-instructions-sysvar@2.2.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-instructions-sysvar-2.2.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_instructions_sysvar","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-instructions-sysvar-2.2.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_instructions_sysvar-2d41c754ff94fc60.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-address-lookup-table-interface@2.2.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-address-lookup-table-interface-2.2.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_address_lookup_table_interface","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-address-lookup-table-interface-2.2.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bincode","bytemuck","serde"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_address_lookup_table_interface-b1548df2a807ec0c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-nonce@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-nonce-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_nonce","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-nonce-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_nonce-ec5db138223e7e14.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#heck@0.3.3","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/heck-0.3.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"heck","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/heck-0.3.3/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libheck-7dc3fb96a94201a3.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libheck-7dc3fb96a94201a3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-account@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-account-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_account","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-account-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_account-f061124b3bacae6a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-epoch-schedule@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-epoch-schedule-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_epoch_schedule","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-epoch-schedule-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde","sysvar"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_epoch_schedule-9367b2efa10fc67f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-epoch-rewards@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-epoch-rewards-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_epoch_rewards","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-epoch-rewards-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde","sysvar"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_epoch_rewards-7882a50796530d07.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-last-restart-slot@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-last-restart-slot-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_last_restart_slot","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-last-restart-slot-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde","sysvar"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_last_restart_slot-3d97c85300dc7844.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"thiserror","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libthiserror-580792305d010e25.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-keccak-hasher@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-keccak-hasher-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_keccak_hasher","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-keccak-hasher-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["sha3"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_keccak_hasher-1cb19c519ed21178.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-borsh@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-borsh-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_borsh","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-borsh-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_borsh-d5b8ff306f867943.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-serde-varint@2.2.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-serde-varint-2.2.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_serde_varint","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-serde-varint-2.2.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_serde_varint-c107d547de3c9e11.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_traits","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","i128","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libnum_traits-5e21960c10b3e4a4.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libnum_traits-5e21960c10b3e4a4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#radium@0.7.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/radium-0.7.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/radium-0.7.0/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/radium-420a712c9acc5d67/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.46","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-integer-0.1.46/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_integer","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-integer-0.1.46/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","i128","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libnum_integer-ef48c20f63ff051b.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libnum_integer-ef48c20f63ff051b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-vote-interface@2.2.6","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-vote-interface-2.2.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_vote_interface","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-vote-interface-2.2.6/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bincode","serde"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_vote_interface-f0f743d5b8a181d6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-example-mocks@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-example-mocks-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_example_mocks","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-example-mocks-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_example_mocks-35bc4ab2f10dcb58.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-sysvar@2.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-sysvar-2.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_sysvar","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-sysvar-2.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bincode","bytemuck","serde"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_sysvar-8c8efd496b0afd0c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-feature-gate-interface@2.2.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-feature-gate-interface-2.2.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_feature_gate_interface","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-feature-gate-interface-2.2.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bincode","serde"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_feature_gate_interface-f15694417ad3c16e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-secp256k1-recover@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-secp256k1-recover-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_secp256k1_recover","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-secp256k1-recover-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_secp256k1_recover-c4c40328a4d4e2a7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#memoffset@0.9.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.9.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memoffset","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.9.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libmemoffset-bf1b3de6e4239e08.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#radium@0.7.0","linked_libs":[],"linked_paths":[],"cfgs":["radium_atomic_8","radium_atomic_16","radium_atomic_32","radium_atomic_64","radium_atomic_ptr"],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/radium-33e22c42992db2cf/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-loader-v4-interface@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-loader-v4-interface-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_loader_v4_interface","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-loader-v4-interface-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bincode","serde"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_loader_v4_interface-4c1aaa005c4b5b9c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-loader-v2-interface@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-loader-v2-interface-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_loader_v2_interface","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-loader-v2-interface-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bincode","serde"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_loader_v2_interface-029117764f563829.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-loader-v3-interface@5.0.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-loader-v3-interface-5.0.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_loader_v3_interface","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-loader-v3-interface-5.0.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bincode","serde"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_loader_v3_interface-c90c9678f3a15e60.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-blake3-hasher@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-blake3-hasher-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_blake3_hasher","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-blake3-hasher-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["blake3"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_blake3_hasher-c3df3af5d3899133.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-big-mod-exp@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-big-mod-exp-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_big_mod_exp","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-big-mod-exp-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_big_mod_exp-853aec8d9b857c7d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-program-pack@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-pack-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_program_pack","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-pack-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_program_pack-5e3dd507d6fdb969.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-stable-layout@2.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-stable-layout-2.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_stable_layout","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-stable-layout-2.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_stable_layout-494a18c984567d8c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.3.3","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-bigint-0.3.3/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-bigint-0.3.3/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/num-bigint-cfd990ded453c9ed/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bs58@0.5.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bs58-0.5.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bs58","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bs58-0.5.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbs58-8f499168ba4aea61.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-native-token@2.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-native-token-2.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_native_token","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-native-token-2.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_native_token-8a6a82b28d86ed8a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anchor-syn@0.31.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-syn-0.31.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"anchor_syn","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-syn-0.31.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["hash","init-if-needed"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanchor_syn-31f2b3aebd8c779e.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanchor_syn-31f2b3aebd8c779e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.16","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"getrandom","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libgetrandom-0853ecc085ce757b.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libgetrandom-0853ecc085ce757b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.13.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.13.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.13.0/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/rayon-core-9acb47506f277c85/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-pod@0.5.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-pod-0.5.1/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"spl_pod","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-pod-0.5.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["borsh"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_pod-6d7717263ebad2b1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-discriminator-syn@0.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-discriminator-syn-0.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"spl_discriminator_syn","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-discriminator-syn-0.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_discriminator_syn-f2b060e1c03c88a4.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_discriminator_syn-f2b060e1c03c88a4.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.3.3","linked_libs":[],"linked_paths":[],"cfgs":["u64_digit","has_try_from"],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/num-bigint-c986c21619d757f2/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-program@2.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-2.3.0/Cargo.toml","target":{"kind":["cdylib","rlib"],"crate_types":["cdylib","rlib"],"name":"solana_program","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-2.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["borsh","default"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_program-87d8befda769aa7a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_core","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","getrandom","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librand_core-4be3e57bdb24eb44.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librand_core-4be3e57bdb24eb44.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.13.0","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/rayon-core-5c4c4f2fa61b238f/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-discriminator-derive@0.2.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-discriminator-derive-0.2.0/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"spl_discriminator_derive","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-discriminator-derive-0.2.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_discriminator_derive-7ae287ad4f25258a.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_utils","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcrossbeam_utils-135ba1dca91f6664.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcrossbeam_utils-135ba1dca91f6664.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.8.27","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.27/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"zerocopy","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.27/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["simd"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libzerocopy-117c8b2cb95a3ea0.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libzerocopy-117c8b2cb95a3ea0.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#curve25519-dalek@4.1.3","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-4.1.3/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-4.1.3/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","digest","precomputed-tables","zeroize"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/curve25519-dalek-73fd69ab194e5679/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.3.3","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-bigint-0.3.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_bigint","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-bigint-0.3.3/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libnum_bigint-d1cc0aeeb0ac971f.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libnum_bigint-d1cc0aeeb0ac971f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ppv-lite86@0.2.21","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ppv-lite86-0.2.21/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ppv_lite86","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ppv-lite86-0.2.21/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["simd","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libppv_lite86-e333e30f1ab09e3b.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libppv_lite86-e333e30f1ab09e3b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.18","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_epoch","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcrossbeam_epoch-34b6106a7472d76c.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcrossbeam_epoch-34b6106a7472d76c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-discriminator@0.4.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-discriminator-0.4.1/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"spl_discriminator","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-discriminator-0.4.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_discriminator-259e0a77ec12af5e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/paste-1.0.15/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/paste-1.0.15/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/paste-a789838cd6764aa1/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tap@1.0.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tap-1.0.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tap","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tap-1.0.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libtap-9c48342a01abc8dc.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libtap-9c48342a01abc8dc.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#curve25519-dalek@4.1.3","linked_libs":[],"linked_paths":[],"cfgs":["curve25519_dalek_bits=\"64\"","nightly","curve25519_dalek_backend=\"serial\""],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/curve25519-dalek-ced85f4af43bfff7/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#radium@0.7.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/radium-0.7.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"radium","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/radium-0.7.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libradium-839b6816e2efca0e.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libradium-839b6816e2efca0e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#addchain-arcium-fork@0.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addchain-arcium-fork-0.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"addchain_arcium_fork","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addchain-arcium-fork-0.2.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libaddchain_arcium_fork-ddafd0ae59259df5.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libaddchain_arcium_fork-ddafd0ae59259df5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.3.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_chacha-0.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_chacha","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_chacha-0.3.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","serde","serde1","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librand_chacha-4112360bcce2aca6.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librand_chacha-4112360bcce2aca6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#wyz@0.5.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/wyz-0.5.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"wyz","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/wyz-0.5.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libwyz-48e83df8d0eb4dd5.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libwyz-48e83df8d0eb4dd5.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/paste-f3497bb3be105dcf/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-deque@0.8.6","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-deque-0.8.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_deque","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-deque-0.8.6/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcrossbeam_deque-3bc671bccaa0b6b5.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcrossbeam_deque-3bc671bccaa0b6b5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_utils","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcrossbeam_utils-340506be3ca46336.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#arcis-interface@0.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-interface-0.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"arcis_interface","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-interface-0.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarcis_interface-14c4f2caf6ca7a41.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarcis_interface-14c4f2caf6ca7a41.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#inout@0.1.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/inout-0.1.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"inout","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/inout-0.1.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libinout-fca4052826173eda.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libinout-fca4052826173eda.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ff-derive-arcium-fork@0.13.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ff-derive-arcium-fork-0.13.2/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"ff_derive_arcium_fork","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ff-derive-arcium-fork-0.13.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libff_derive_arcium_fork-52aa101d8a7f3767.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize-1.8.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"zeroize","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize-1.8.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libzeroize-3f4acbaac7eef05a.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libzeroize-3f4acbaac7eef05a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#lazy_static@1.5.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lazy_static-1.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"lazy_static","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lazy_static-1.5.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/liblazy_static-e2ff1c0689bd34a1.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/liblazy_static-e2ff1c0689bd34a1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#camino@1.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/camino-1.2.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/camino-1.2.1/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde1"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/camino-949c69c9ec8085a6/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustc-hash@2.1.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-hash-2.1.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rustc_hash","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-hash-2.1.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librustc_hash-de5c645a1e283d12.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librustc_hash-de5c645a1e283d12.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#signature@2.2.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/signature-2.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"signature","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/signature-2.2.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsignature-7d2258c006502f91.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsignature-7d2258c006502f91.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.22","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustversion-1.0.22/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustversion-1.0.22/build/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/rustversion-db17f6a48087af6f/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#funty@2.0.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/funty-2.0.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"funty","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/funty-2.0.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libfunty-fa194b283a440a51.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libfunty-fa194b283a440a51.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bitvec@1.0.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitvec-1.0.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bitvec","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitvec-1.0.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbitvec-3b3a899956618a49.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbitvec-3b3a899956618a49.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#colored@2.2.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/colored-2.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"colored","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/colored-2.2.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcolored-1b4419a5babe6184.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcolored-1b4419a5babe6184.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#arcis-internal-expr-macro@0.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-internal-expr-macro-0.3.0/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"arcis_internal_expr_macro","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-internal-expr-macro-0.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarcis_internal_expr_macro-6c38115f657f38b5.dylib"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#camino@1.2.1","linked_libs":[],"linked_paths":[],"cfgs":["try_reserve_2","path_buf_deref_mut","os_str_bytes","absolute_path","os_string_pathbuf_leak"],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/camino-e235b53572f99b50/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.22","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/build/rustversion-a026d588d353db36/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ed25519@2.2.3","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ed25519-2.2.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ed25519","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ed25519-2.2.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libed25519-6efbe3ad11de2f11.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libed25519-6efbe3ad11de2f11.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#curve25519-dalek@4.1.3","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-4.1.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"curve25519_dalek","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-4.1.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","digest","precomputed-tables","zeroize"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcurve25519_dalek-6b6d2cc7a654b86c.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcurve25519_dalek-6b6d2cc7a654b86c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/paste-1.0.15/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"paste","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/paste-1.0.15/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libpaste-d9c218838e46bddd.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cipher-0.4.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cipher","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cipher-0.4.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcipher-e68a6ff14af92adf.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcipher-e68a6ff14af92adf.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.18","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_epoch","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcrossbeam_epoch-d013c51bffdd2ade.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","getrandom","libc","rand_chacha","std","std_rng"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librand-c2f63aa8a98d5729.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librand-c2f63aa8a98d5729.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.13.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.13.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rayon_core","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.13.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librayon_core-527652c89c74a654.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librayon_core-527652c89c74a654.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-type-length-value@0.7.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-type-length-value-0.7.0/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"spl_type_length_value","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-type-length-value-0.7.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_type_length_value-044e70243c399817.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-curve25519@2.3.13","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-curve25519-2.3.13/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_curve25519","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-curve25519-2.3.13/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_curve25519-de820582bb568e8c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-program-error-derive@0.4.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-program-error-derive-0.4.1/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"spl_program_error_derive","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-program-error-derive-0.4.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_program_error_derive-6e035276e2be1fcd.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#keccak@0.1.5","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/keccak-0.1.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"keccak","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/keccak-0.1.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libkeccak-d1c3a1899155de6e.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libkeccak-d1c3a1899155de6e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tap@1.0.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tap-1.0.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tap","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tap-1.0.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libtap-5ae27ad10df6e080.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"byteorder","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbyteorder-51d6a7c09a85b7a9.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbyteorder-51d6a7c09a85b7a9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#either@1.15.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/either-1.15.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"either","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/either-1.15.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libeither-9cc291e9b314b00b.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libeither-9cc291e9b314b00b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-program-error@0.6.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-program-error-0.6.0/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"spl_program_error","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-program-error-0.6.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_program_error-611a03866c40489c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#sha3@0.10.8","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha3-0.10.8/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"sha3","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha3-0.10.8/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsha3-5174682cf1f190b2.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsha3-5174682cf1f190b2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.4.6","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-bigint-0.4.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_bigint","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-bigint-0.4.6/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","rand","serde","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libnum_bigint-b2cd77e70618eee1.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libnum_bigint-b2cd77e70618eee1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#aes@0.8.4","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"aes","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libaes-3fc7dd4845dc2c3f.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libaes-3fc7dd4845dc2c3f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-deque@0.8.6","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-deque-0.8.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_deque","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-deque-0.8.6/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcrossbeam_deque-cbbf41836199c6e1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ff-arcium-fork@0.13.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ff-arcium-fork-0.13.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ff_arcium_fork","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ff-arcium-fork-0.13.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","bits","bitvec","byteorder","default","derive","ff_derive","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libff_arcium_fork-e455dd29a28df61f.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libff_arcium_fork-e455dd29a28df61f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#wyz@0.5.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/wyz-0.5.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"wyz","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/wyz-0.5.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libwyz-0e8620c4db010245.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rayon@1.11.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-1.11.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rayon","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-1.11.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librayon-9fc880c863e7388a.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librayon-9fc880c863e7388a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ed25519-dalek@2.2.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ed25519-dalek-2.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ed25519_dalek","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ed25519-dalek-2.2.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","fast","hazmat","std","zeroize"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libed25519_dalek-3511f583b7a57a76.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libed25519_dalek-3511f583b7a57a76.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#camino@1.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/camino-1.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"camino","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/camino-1.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde1"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcamino-5318f5d328d31267.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcamino-5318f5d328d31267.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#arcis-diagnostics@0.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-diagnostics-0.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"arcis_diagnostics","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-diagnostics-0.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarcis_diagnostics-af8c4caa6eed83e1.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarcis_diagnostics-af8c4caa6eed83e1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.22","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustversion-1.0.22/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"rustversion","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustversion-1.0.22/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librustversion-fb9a472f134ab155.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_seeder@0.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_seeder-0.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_seeder","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_seeder-0.3.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librand_seeder-42ea972db303fbd8.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librand_seeder-42ea972db303fbd8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#radium@0.7.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/radium-0.7.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"radium","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/radium-0.7.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libradium-0648bdd75820b9c7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anchor-lang-idl-spec@0.1.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-idl-spec-0.1.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"anchor_lang_idl_spec","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-idl-spec-0.1.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanchor_lang_idl_spec-357e160d50abd404.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanchor_lang_idl_spec-357e160d50abd404.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.17","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.17/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"thiserror","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.17/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libthiserror-e6911a4f6600132f.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libthiserror-e6911a4f6600132f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num_enum_derive@0.7.5","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num_enum_derive-0.7.5/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"num_enum_derive","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num_enum_derive-0.7.5/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["proc-macro-crate","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libnum_enum_derive-328639662dd44564.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bincode@1.3.3","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bincode-1.3.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bincode","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bincode-1.3.3/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbincode-b4a5943fe4dcdf76.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbincode-b4a5943fe4dcdf76.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cargo-platform@0.1.9","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-platform-0.1.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cargo_platform","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-platform-0.1.9/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcargo_platform-56106b599906fc7b.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcargo_platform-56106b599906fc7b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#signature@2.2.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/signature-2.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"signature","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/signature-2.2.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsignature-d6b506072d4d1adc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#funty@2.0.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/funty-2.0.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"funty","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/funty-2.0.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libfunty-9e7d7566b2722984.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ed25519@2.2.3","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ed25519-2.2.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ed25519","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ed25519-2.2.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libed25519-d44f4140f6243efe.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anchor-lang-idl@0.1.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-idl-0.1.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"anchor_lang_idl","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-idl-0.1.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["convert","heck","sha2"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanchor_lang_idl-1de475fb79f57b77.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanchor_lang_idl-1de475fb79f57b77.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#arcis@0.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-0.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"arcis","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-0.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["internals"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarcis-5adc0a9b9746bed3.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarcis-5adc0a9b9746bed3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num_enum@0.7.5","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num_enum-0.7.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_enum","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num_enum-0.7.5/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libnum_enum-68c5160bec15b669.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bitvec@1.0.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitvec-1.0.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bitvec","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitvec-1.0.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbitvec-ce84183fec8019ea.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cargo_metadata@0.19.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo_metadata-0.19.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cargo_metadata","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo_metadata-0.19.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcargo_metadata-b9c0f91ffb42f64d.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcargo_metadata-b9c0f91ffb42f64d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-tlv-account-resolution@0.9.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-tlv-account-resolution-0.9.0/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"spl_tlv_account_resolution","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-tlv-account-resolution-0.9.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_tlv_account_resolution-48aacefd6a257805.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.13.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.13.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rayon_core","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.13.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librayon_core-0d3dea8848b229ef.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-token-confidential-transfer-proof-extraction@0.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-token-confidential-transfer-proof-extraction-0.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"spl_token_confidential_transfer_proof_extraction","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-token-confidential-transfer-proof-extraction-0.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_token_confidential_transfer_proof_extraction-2988a9eb3a9a8463.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#colored@2.2.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/colored-2.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"colored","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/colored-2.2.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libcolored-66854cd479e0507a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/equivalent-1.0.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"equivalent","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/equivalent-1.0.2/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libequivalent-db1e28139ffcffd8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.16.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.16.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hashbrown","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.16.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libhashbrown-1f8fa2b67473f470.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-token@7.0.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-token-7.0.0/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"spl_token","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-token-7.0.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["no-entrypoint"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_token-cf1b4af755973c50.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ff-arcium-fork@0.13.2","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ff-arcium-fork-0.13.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ff_arcium_fork","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ff-arcium-fork-0.13.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","bits","bitvec","byteorder","default","derive","ff_derive","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libff_arcium_fork-4ce0bd66d22fb42e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anchor-attribute-program@0.31.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"anchor_attribute_program","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanchor_attribute_program-dc33938f33f33c30.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#arcis-interpreter@0.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-interpreter-0.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"arcis_interpreter","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-interpreter-0.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarcis_interpreter-1a75799e44956669.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarcis_interpreter-1a75799e44956669.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#indexmap@2.12.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.12.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"indexmap","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.12.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","serde","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libindexmap-1329687f9a6d8fa9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#arcis-diagnostics@0.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-diagnostics-0.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"arcis_diagnostics","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-diagnostics-0.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarcis_diagnostics-ef179b50009832d3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-elgamal-registry@0.1.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-elgamal-registry-0.1.1/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"spl_elgamal_registry","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-elgamal-registry-0.1.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["no-entrypoint"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_elgamal_registry-b36d4687dbded0b5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rayon@1.11.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-1.11.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rayon","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-1.11.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librayon-f1317669192e9a52.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ed25519-dalek@2.2.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ed25519-dalek-2.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ed25519_dalek","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ed25519-dalek-2.2.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","fast","hazmat","std","zeroize"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libed25519_dalek-a34360516a35fc42.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-transfer-hook-interface@0.9.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-transfer-hook-interface-0.9.0/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"spl_transfer_hook_interface","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-transfer-hook-interface-0.9.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_transfer_hook_interface-f691966d26910bbb.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-token-confidential-transfer-ciphertext-arithmetic@0.2.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-token-confidential-transfer-ciphertext-arithmetic-0.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"spl_token_confidential_transfer_ciphertext_arithmetic","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-token-confidential-transfer-ciphertext-arithmetic-0.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_token_confidential_transfer_ciphertext_arithmetic-bad48b5a1237fa41.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-token-metadata-interface@0.6.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-token-metadata-interface-0.6.0/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"spl_token_metadata_interface","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-token-metadata-interface-0.6.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_token_metadata_interface-bc2a9722c1e50d9e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-token-group-interface@0.5.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-token-group-interface-0.5.0/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"spl_token_group_interface","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-token-group-interface-0.5.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_token_group_interface-967c77575f097d9c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anchor-attribute-error@0.31.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-error-0.31.1/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"anchor_attribute_error","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-error-0.31.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanchor_attribute_error-0dc92df3c9c73fe6.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anchor-attribute-account@0.31.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-account-0.31.1/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"anchor_attribute_account","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-account-0.31.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanchor_attribute_account-067ea105bc43063c.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anchor-attribute-constant@0.31.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-constant-0.31.1/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"anchor_attribute_constant","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-constant-0.31.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanchor_attribute_constant-3f8233434c410c08.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anchor-derive-accounts@0.31.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"anchor_derive_accounts","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["init-if-needed"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanchor_derive_accounts-8e526fc3fc4fd9b6.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anchor-attribute-event@0.31.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-event-0.31.1/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"anchor_attribute_event","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-event-0.31.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanchor_attribute_event-18ebe17afd00aea5.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anchor-derive-serde@0.31.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-serde-0.31.1/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"anchor_derive_serde","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-serde-0.31.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanchor_derive_serde-15ae3795caedc1f2.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anchor-attribute-access-control@0.31.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-access-control-0.31.1/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"anchor_attribute_access_control","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-access-control-0.31.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanchor_attribute_access_control-12ec0177e66f0fbf.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-token-confidential-transfer-proof-generation@0.2.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-token-confidential-transfer-proof-generation-0.2.0/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"spl_token_confidential_transfer_proof_generation","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-token-confidential-transfer-proof-generation-0.2.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_token_confidential_transfer_proof_generation-8d9e88148a0ee87b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-memo@6.0.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-memo-6.0.0/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"spl_memo","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-memo-6.0.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["no-entrypoint"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_memo-d7071efa923c138d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#arcis-interface@0.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-interface-0.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"arcis_interface","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-interface-0.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarcis_interface-1e68e24d47b5382f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_seeder@0.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_seeder-0.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_seeder","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_seeder-0.3.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librand_seeder-5e41350e00834299.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anchor-derive-space@0.31.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-space-0.31.1/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"anchor_derive_space","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-space-0.31.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanchor_derive_space-0eff9e71158e7325.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#solana-security-txt@1.1.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-security-txt-1.1.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"solana_security_txt","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-security-txt-1.1.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsolana_security_txt-195036f17dbf3904.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustc-hash@2.1.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-hash-2.1.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rustc_hash","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-hash-2.1.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/librustc_hash-a585ae7d05942665.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#base64@0.21.7","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.21.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"base64","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.21.7/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbase64-c96b49ce0953ce93.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#arcis@0.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-0.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"arcis","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-0.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarcis-cc1db5b5a69ed416.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-token-2022@6.0.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-token-2022-6.0.0/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"spl_token_2022","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-token-2022-6.0.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","no-entrypoint","zk-ops"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_token_2022-4b30c9a59bc57c7b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anchor-lang@0.31.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"anchor_lang","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["derive","init-if-needed"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanchor_lang-7a73ddeaa03fc48b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#arcis-interpreter-proc-macros@0.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-interpreter-proc-macros-0.3.0/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"arcis_interpreter_proc_macros","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-interpreter-proc-macros-0.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarcis_interpreter_proc_macros-a10202378f523a81.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-associated-token-account-client@2.0.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-associated-token-account-client-2.0.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"spl_associated_token_account_client","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-associated-token-account-client-2.0.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_associated_token_account_client-17a23357d778fa8e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#convert_case@0.8.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/convert_case-0.8.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"convert_case","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/convert_case-0.8.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libconvert_case-bccfb22eb11681e7.rlib","/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libconvert_case-bccfb22eb11681e7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#sha2-const-stable@0.1.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha2-const-stable-0.1.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"sha2_const_stable","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha2-const-stable-0.1.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libsha2_const_stable-99fa56a1a42c5f9d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#base64ct@1.6.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64ct-1.6.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"base64ct","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64ct-1.6.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libbase64ct-14a462311456cfbd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#arcis-imports@0.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-imports-0.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"arcis_imports","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcis-imports-0.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarcis_imports-5182b560573d27f8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#spl-associated-token-account@6.0.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-associated-token-account-6.0.0/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"spl_associated_token_account","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spl-associated-token-account-6.0.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["no-entrypoint"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libspl_associated_token_account-d77045b7dd846fad.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#arcium-client@0.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcium-client-0.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"arcium_client","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcium-client-0.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarcium_client-a35542f29722f3cf.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#arcium-macros@0.3.0","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcium-macros-0.3.0/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"arcium_macros","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcium-macros-0.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarcium_macros-bcfaaf134e800e27.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anchor-spl@0.31.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-spl-0.31.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"anchor_spl","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-spl-0.31.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["associated_token","default","mint","spl-associated-token-account","spl-pod","spl-token","spl-token-2022","spl-token-group-interface","spl-token-metadata-interface","token","token_2022","token_2022_extensions"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libanchor_spl-6908c0107b9f0eb9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"encrypted_ixs","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libencrypted_ixs-861c2b2980a882a6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"encrypted_ixs","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libencrypted_ixs-99f9f42c7e22366e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#arcium-anchor@0.3.1","manifest_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcium-anchor-0.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"arcium_anchor","src_path":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arcium-anchor-0.3.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/target/debug/deps/libarcium_anchor-1dbefb5bab8ed9bb.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the payer specified for an init constraint must be mutable.","code":null,"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":36682,"byte_end":36693,"line_start":1206,"line_end":1206,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    pub mpc_request: Account<'info, MpcRequest>,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror\u001b[0m\u001b[1m: the payer specified for an init constraint must be mutable.\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1206:9\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1206\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub mpc_request: Account<'info, MpcRequest>,\n     \u001b[1m\u001b[94m|\u001b[0m         \u001b[1m\u001b[91m^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the payer specified for an init constraint must be mutable.","code":null,"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":36682,"byte_end":36693,"line_start":1206,"line_end":1206,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    pub mpc_request: Account<'info, MpcRequest>,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror\u001b[0m\u001b[1m: the payer specified for an init constraint must be mutable.\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1206:9\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1206\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub mpc_request: Account<'info, MpcRequest>,\n     \u001b[1m\u001b[94m|\u001b[0m         \u001b[1m\u001b[91m^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the payer specified for an init constraint must be mutable.","code":null,"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":39261,"byte_end":39272,"line_start":1300,"line_end":1300,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    pub mpc_request: Account<'info, MpcRequest>,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror\u001b[0m\u001b[1m: the payer specified for an init constraint must be mutable.\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1300:9\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1300\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub mpc_request: Account<'info, MpcRequest>,\n     \u001b[1m\u001b[94m|\u001b[0m         \u001b[1m\u001b[91m^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the payer specified for an init constraint must be mutable.","code":null,"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":39261,"byte_end":39272,"line_start":1300,"line_end":1300,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    pub mpc_request: Account<'info, MpcRequest>,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror\u001b[0m\u001b[1m: the payer specified for an init constraint must be mutable.\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1300:9\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1300\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub mpc_request: Account<'info, MpcRequest>,\n     \u001b[1m\u001b[94m|\u001b[0m         \u001b[1m\u001b[91m^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unresolved import `arcium_client::prelude`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":360,"byte_end":367,"line_start":12,"line_end":12,"column_start":20,"column_end":27,"is_primary":true,"text":[{"text":"use arcium_client::prelude::*;","highlight_start":20,"highlight_end":27}],"label":"could not find `prelude` in `arcium_client`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror[E0432]\u001b[0m\u001b[1m: unresolved import `arcium_client::prelude`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:12:20\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m12\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use arcium_client::prelude::*;\n   \u001b[1m\u001b[94m|\u001b[0m                    \u001b[1m\u001b[91m^^^^^^^\u001b[0m \u001b[1m\u001b[91mcould not find `prelude` in `arcium_client`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unresolved import `arcium_client::prelude`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":360,"byte_end":367,"line_start":12,"line_end":12,"column_start":20,"column_end":27,"is_primary":true,"text":[{"text":"use arcium_client::prelude::*;","highlight_start":20,"highlight_end":27}],"label":"could not find `prelude` in `arcium_client`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror[E0432]\u001b[0m\u001b[1m: unresolved import `arcium_client::prelude`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:12:20\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m12\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use arcium_client::prelude::*;\n   \u001b[1m\u001b[94m|\u001b[0m                    \u001b[1m\u001b[91m^^^^^^^\u001b[0m \u001b[1m\u001b[91mcould not find `prelude` in `arcium_client`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unresolved imports `encrypted_ixs::circuits::AggregateInput`, `encrypted_ixs::circuits::AggregateStats`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":532,"byte_end":546,"line_start":17,"line_end":17,"column_start":36,"column_end":50,"is_primary":true,"text":[{"text":"    TransferInput, TransferResult, AggregateInput, AggregateStats,","highlight_start":36,"highlight_end":50}],"label":"no `AggregateInput` in `circuits`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":548,"byte_end":562,"line_start":17,"line_end":17,"column_start":52,"column_end":66,"is_primary":true,"text":[{"text":"    TransferInput, TransferResult, AggregateInput, AggregateStats,","highlight_start":52,"highlight_end":66}],"label":"no `AggregateStats` in `circuits`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror[E0432]\u001b[0m\u001b[1m: unresolved imports `encrypted_ixs::circuits::AggregateInput`, `encrypted_ixs::circuits::AggregateStats`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:17:36\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m17\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     TransferInput, TransferResult, AggregateInput, AggregateStats,\n   \u001b[1m\u001b[94m|\u001b[0m                                    \u001b[1m\u001b[91m^^^^^^^^^^^^^^\u001b[0m  \u001b[1m\u001b[91m^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mno `AggregateStats` in `circuits`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m                                    \u001b[1m\u001b[91m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m                                    \u001b[1m\u001b[91mno `AggregateInput` in `circuits`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unresolved imports `encrypted_ixs::circuits::AggregateInput`, `encrypted_ixs::circuits::AggregateStats`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":532,"byte_end":546,"line_start":17,"line_end":17,"column_start":36,"column_end":50,"is_primary":true,"text":[{"text":"    TransferInput, TransferResult, AggregateInput, AggregateStats,","highlight_start":36,"highlight_end":50}],"label":"no `AggregateInput` in `circuits`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":548,"byte_end":562,"line_start":17,"line_end":17,"column_start":52,"column_end":66,"is_primary":true,"text":[{"text":"    TransferInput, TransferResult, AggregateInput, AggregateStats,","highlight_start":52,"highlight_end":66}],"label":"no `AggregateStats` in `circuits`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror[E0432]\u001b[0m\u001b[1m: unresolved imports `encrypted_ixs::circuits::AggregateInput`, `encrypted_ixs::circuits::AggregateStats`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:17:36\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m17\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     TransferInput, TransferResult, AggregateInput, AggregateStats,\n   \u001b[1m\u001b[94m|\u001b[0m                                    \u001b[1m\u001b[91m^^^^^^^^^^^^^^\u001b[0m  \u001b[1m\u001b[91m^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mno `AggregateStats` in `circuits`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m                                    \u001b[1m\u001b[91m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m                                    \u001b[1m\u001b[91mno `AggregateInput` in `circuits`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unresolved import `crate`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"could not find `__client_accounts_confidential_release_to_group` in the crate root","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[1m\u001b[91merror[E0432]\u001b[0m\u001b[1m: unresolved import `crate`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mcould not find `__client_accounts_confidential_release_to_group` in the crate root\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unresolved import `crate`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"could not find `__client_accounts_confidential_release_to_group` in the crate root","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[1m\u001b[91merror[E0432]\u001b[0m\u001b[1m: unresolved import `crate`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mcould not find `__client_accounts_confidential_release_to_group` in the crate root\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"failed to resolve: use of unresolved module or unlinked crate `solana_program`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":786,"byte_end":800,"line_start":24,"line_end":24,"column_start":38,"column_end":52,"is_primary":true,"text":[{"text":"const ARCIUM_MPC_AUTHORITY: Pubkey = solana_program::pubkey!(\"11111111111111111111111111111111\");","highlight_start":38,"highlight_end":52}],"label":"use of unresolved module or unlinked crate `solana_program`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror[E0433]\u001b[0m\u001b[1m: failed to resolve: use of unresolved module or unlinked crate `solana_program`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:24:38\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m24\u001b[0m \u001b[1m\u001b[94m|\u001b[0m const ARCIUM_MPC_AUTHORITY: Pubkey = solana_program::pubkey!(\"11111111111111111111111111111111\");\n   \u001b[1m\u001b[94m|\u001b[0m                                      \u001b[1m\u001b[91m^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91muse of unresolved module or unlinked crate `solana_program`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"failed to resolve: use of unresolved module or unlinked crate `solana_program`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":786,"byte_end":800,"line_start":24,"line_end":24,"column_start":38,"column_end":52,"is_primary":true,"text":[{"text":"const ARCIUM_MPC_AUTHORITY: Pubkey = solana_program::pubkey!(\"11111111111111111111111111111111\");","highlight_start":38,"highlight_end":52}],"label":"use of unresolved module or unlinked crate `solana_program`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror[E0433]\u001b[0m\u001b[1m: failed to resolve: use of unresolved module or unlinked crate `solana_program`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:24:38\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m24\u001b[0m \u001b[1m\u001b[94m|\u001b[0m const ARCIUM_MPC_AUTHORITY: Pubkey = solana_program::pubkey!(\"11111111111111111111111111111111\");\n   \u001b[1m\u001b[94m|\u001b[0m                                      \u001b[1m\u001b[91m^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91muse of unresolved module or unlinked crate `solana_program`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find attribute `arcium_instruction` in this scope","code":null,"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":20012,"byte_end":20030,"line_start":576,"line_end":576,"column_start":7,"column_end":25,"is_primary":true,"text":[{"text":"    #[arcium_instruction(circuits::confidential_transfer_from_pool)]","highlight_start":7,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror\u001b[0m\u001b[1m: cannot find attribute `arcium_instruction` in this scope\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:576:7\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m576\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     #[arcium_instruction(circuits::confidential_transfer_from_pool)]\n    \u001b[1m\u001b[94m|\u001b[0m       \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find attribute `arcium_instruction` in this scope","code":null,"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":20012,"byte_end":20030,"line_start":576,"line_end":576,"column_start":7,"column_end":25,"is_primary":true,"text":[{"text":"    #[arcium_instruction(circuits::confidential_transfer_from_pool)]","highlight_start":7,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror\u001b[0m\u001b[1m: cannot find attribute `arcium_instruction` in this scope\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:576:7\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m576\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     #[arcium_instruction(circuits::confidential_transfer_from_pool)]\n    \u001b[1m\u001b[94m|\u001b[0m       \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find attribute `arcium_instruction` in this scope","code":null,"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":16566,"byte_end":16584,"line_start":475,"line_end":475,"column_start":7,"column_end":25,"is_primary":true,"text":[{"text":"    #[arcium_instruction(circuits::confidential_transfer_to_pool)]","highlight_start":7,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror\u001b[0m\u001b[1m: cannot find attribute `arcium_instruction` in this scope\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:475:7\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m475\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     #[arcium_instruction(circuits::confidential_transfer_to_pool)]\n    \u001b[1m\u001b[94m|\u001b[0m       \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find attribute `arcium_instruction` in this scope","code":null,"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":16566,"byte_end":16584,"line_start":475,"line_end":475,"column_start":7,"column_end":25,"is_primary":true,"text":[{"text":"    #[arcium_instruction(circuits::confidential_transfer_to_pool)]","highlight_start":7,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror\u001b[0m\u001b[1m: cannot find attribute `arcium_instruction` in this scope\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:475:7\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m475\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     #[arcium_instruction(circuits::confidential_transfer_to_pool)]\n    \u001b[1m\u001b[94m|\u001b[0m       \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find attribute `arcium_instruction` in this scope","code":null,"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":12743,"byte_end":12761,"line_start":365,"line_end":365,"column_start":7,"column_end":25,"is_primary":true,"text":[{"text":"    #[arcium_instruction(circuits::subtract_from_balance)]","highlight_start":7,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror\u001b[0m\u001b[1m: cannot find attribute `arcium_instruction` in this scope\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:365:7\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m365\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     #[arcium_instruction(circuits::subtract_from_balance)]\n    \u001b[1m\u001b[94m|\u001b[0m       \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find attribute `arcium_instruction` in this scope","code":null,"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":12743,"byte_end":12761,"line_start":365,"line_end":365,"column_start":7,"column_end":25,"is_primary":true,"text":[{"text":"    #[arcium_instruction(circuits::subtract_from_balance)]","highlight_start":7,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror\u001b[0m\u001b[1m: cannot find attribute `arcium_instruction` in this scope\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:365:7\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m365\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     #[arcium_instruction(circuits::subtract_from_balance)]\n    \u001b[1m\u001b[94m|\u001b[0m       \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find attribute `arcium_instruction` in this scope","code":null,"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":10491,"byte_end":10509,"line_start":299,"line_end":299,"column_start":7,"column_end":25,"is_primary":true,"text":[{"text":"    #[arcium_instruction(circuits::add_to_balance)]","highlight_start":7,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror\u001b[0m\u001b[1m: cannot find attribute `arcium_instruction` in this scope\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:299:7\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m299\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     #[arcium_instruction(circuits::add_to_balance)]\n    \u001b[1m\u001b[94m|\u001b[0m       \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find attribute `arcium_instruction` in this scope","code":null,"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":10491,"byte_end":10509,"line_start":299,"line_end":299,"column_start":7,"column_end":25,"is_primary":true,"text":[{"text":"    #[arcium_instruction(circuits::add_to_balance)]","highlight_start":7,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror\u001b[0m\u001b[1m: cannot find attribute `arcium_instruction` in this scope\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:299:7\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m299\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     #[arcium_instruction(circuits::add_to_balance)]\n    \u001b[1m\u001b[94m|\u001b[0m       \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `custom-heap`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":8894,"byte_end":8917,"line_start":224,"line_end":224,"column_start":23,"column_end":46,"is_primary":true,"text":[{"text":"        #[cfg(all(not(feature = \"custom-heap\"), target_os = \"solana\"))]","highlight_start":23,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":5320,"byte_end":5350,"line_start":139,"line_end":139,"column_start":9,"column_end":39,"is_primary":false,"text":[{"text":"        $crate::custom_heap_default!();","highlight_start":9,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"anchor_lang::solana_program::entrypoint!","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":4846,"byte_end":4869,"line_start":128,"line_end":128,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! entrypoint {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::custom_heap_default!","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":8825,"byte_end":8857,"line_start":222,"line_end":222,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"macro_rules! custom_heap_default {","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `$crate::custom_heap_default` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `$crate::custom_heap_default` may come from an old version of the `solana_program_entrypoint` crate, try updating your dependency with `cargo update -p solana_program_entrypoint`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `custom-heap`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `$crate::custom_heap_default` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the macro `$crate::custom_heap_default` may come from an old version of the `solana_program_entrypoint` crate, try updating your dependency with `cargo update -p solana_program_entrypoint`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the macro `$crate::custom_heap_default` which comes from the expansion of the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `custom-heap`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":8894,"byte_end":8917,"line_start":224,"line_end":224,"column_start":23,"column_end":46,"is_primary":true,"text":[{"text":"        #[cfg(all(not(feature = \"custom-heap\"), target_os = \"solana\"))]","highlight_start":23,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":5320,"byte_end":5350,"line_start":139,"line_end":139,"column_start":9,"column_end":39,"is_primary":false,"text":[{"text":"        $crate::custom_heap_default!();","highlight_start":9,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"anchor_lang::solana_program::entrypoint!","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":4846,"byte_end":4869,"line_start":128,"line_end":128,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! entrypoint {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::custom_heap_default!","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":8825,"byte_end":8857,"line_start":222,"line_end":222,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"macro_rules! custom_heap_default {","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `$crate::custom_heap_default` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `$crate::custom_heap_default` may come from an old version of the `solana_program_entrypoint` crate, try updating your dependency with `cargo update -p solana_program_entrypoint`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `custom-heap`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `$crate::custom_heap_default` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the macro `$crate::custom_heap_default` may come from an old version of the `solana_program_entrypoint` crate, try updating your dependency with `cargo update -p solana_program_entrypoint`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the macro `$crate::custom_heap_default` which comes from the expansion of the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `solana`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":8920,"byte_end":8940,"line_start":224,"line_end":224,"column_start":49,"column_end":69,"is_primary":true,"text":[{"text":"        #[cfg(all(not(feature = \"custom-heap\"), target_os = \"solana\"))]","highlight_start":49,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":5320,"byte_end":5350,"line_start":139,"line_end":139,"column_start":9,"column_end":39,"is_primary":false,"text":[{"text":"        $crate::custom_heap_default!();","highlight_start":9,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"anchor_lang::solana_program::entrypoint!","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":4846,"byte_end":4869,"line_start":128,"line_end":128,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! entrypoint {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::custom_heap_default!","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":8825,"byte_end":8857,"line_start":222,"line_end":222,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"macro_rules! custom_heap_default {","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `lynxos178`, `macos`, `managarm`, `motor`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, and `trusty` and 12 more","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `$crate::custom_heap_default` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `$crate::custom_heap_default` may come from an old version of the `solana_program_entrypoint` crate, try updating your dependency with `cargo update -p solana_program_entrypoint`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `solana`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `lynxos178`, `macos`, `managarm`, `motor`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, and `trusty` and 12 more\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `$crate::custom_heap_default` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the macro `$crate::custom_heap_default` may come from an old version of the `solana_program_entrypoint` crate, try updating your dependency with `cargo update -p solana_program_entrypoint`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the macro `$crate::custom_heap_default` which comes from the expansion of the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `solana`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":8920,"byte_end":8940,"line_start":224,"line_end":224,"column_start":49,"column_end":69,"is_primary":true,"text":[{"text":"        #[cfg(all(not(feature = \"custom-heap\"), target_os = \"solana\"))]","highlight_start":49,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":5320,"byte_end":5350,"line_start":139,"line_end":139,"column_start":9,"column_end":39,"is_primary":false,"text":[{"text":"        $crate::custom_heap_default!();","highlight_start":9,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"anchor_lang::solana_program::entrypoint!","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":4846,"byte_end":4869,"line_start":128,"line_end":128,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! entrypoint {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::custom_heap_default!","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":8825,"byte_end":8857,"line_start":222,"line_end":222,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"macro_rules! custom_heap_default {","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `lynxos178`, `macos`, `managarm`, `motor`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, and `trusty` and 12 more","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `$crate::custom_heap_default` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `$crate::custom_heap_default` may come from an old version of the `solana_program_entrypoint` crate, try updating your dependency with `cargo update -p solana_program_entrypoint`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `solana`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `lynxos178`, `macos`, `managarm`, `motor`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, and `trusty` and 12 more\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `$crate::custom_heap_default` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the macro `$crate::custom_heap_default` may come from an old version of the `solana_program_entrypoint` crate, try updating your dependency with `cargo update -p solana_program_entrypoint`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the macro `$crate::custom_heap_default` which comes from the expansion of the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `custom-panic`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":11084,"byte_end":11108,"line_start":281,"line_end":281,"column_start":23,"column_end":47,"is_primary":true,"text":[{"text":"        #[cfg(all(not(feature = \"custom-panic\"), target_os = \"solana\"))]","highlight_start":23,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":5360,"byte_end":5391,"line_start":140,"line_end":140,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        $crate::custom_panic_default!();","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"anchor_lang::solana_program::entrypoint!","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":4846,"byte_end":4869,"line_start":128,"line_end":128,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! entrypoint {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::custom_panic_default!","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":11014,"byte_end":11047,"line_start":279,"line_end":279,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! custom_panic_default {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `$crate::custom_panic_default` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `$crate::custom_panic_default` may come from an old version of the `solana_program_entrypoint` crate, try updating your dependency with `cargo update -p solana_program_entrypoint`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `custom-panic`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `$crate::custom_panic_default` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the macro `$crate::custom_panic_default` may come from an old version of the `solana_program_entrypoint` crate, try updating your dependency with `cargo update -p solana_program_entrypoint`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the macro `$crate::custom_panic_default` which comes from the expansion of the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `custom-panic`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":11084,"byte_end":11108,"line_start":281,"line_end":281,"column_start":23,"column_end":47,"is_primary":true,"text":[{"text":"        #[cfg(all(not(feature = \"custom-panic\"), target_os = \"solana\"))]","highlight_start":23,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":5360,"byte_end":5391,"line_start":140,"line_end":140,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        $crate::custom_panic_default!();","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"anchor_lang::solana_program::entrypoint!","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":4846,"byte_end":4869,"line_start":128,"line_end":128,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! entrypoint {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::custom_panic_default!","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":11014,"byte_end":11047,"line_start":279,"line_end":279,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! custom_panic_default {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `$crate::custom_panic_default` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `$crate::custom_panic_default` may come from an old version of the `solana_program_entrypoint` crate, try updating your dependency with `cargo update -p solana_program_entrypoint`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `custom-panic`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `$crate::custom_panic_default` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the macro `$crate::custom_panic_default` may come from an old version of the `solana_program_entrypoint` crate, try updating your dependency with `cargo update -p solana_program_entrypoint`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the macro `$crate::custom_panic_default` which comes from the expansion of the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `solana`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":11111,"byte_end":11131,"line_start":281,"line_end":281,"column_start":50,"column_end":70,"is_primary":true,"text":[{"text":"        #[cfg(all(not(feature = \"custom-panic\"), target_os = \"solana\"))]","highlight_start":50,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":5360,"byte_end":5391,"line_start":140,"line_end":140,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        $crate::custom_panic_default!();","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"anchor_lang::solana_program::entrypoint!","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":4846,"byte_end":4869,"line_start":128,"line_end":128,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! entrypoint {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::custom_panic_default!","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":11014,"byte_end":11047,"line_start":279,"line_end":279,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! custom_panic_default {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `lynxos178`, `macos`, `managarm`, `motor`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, and `trusty` and 12 more","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `$crate::custom_panic_default` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `$crate::custom_panic_default` may come from an old version of the `solana_program_entrypoint` crate, try updating your dependency with `cargo update -p solana_program_entrypoint`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `solana`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `lynxos178`, `macos`, `managarm`, `motor`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, and `trusty` and 12 more\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `$crate::custom_panic_default` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the macro `$crate::custom_panic_default` may come from an old version of the `solana_program_entrypoint` crate, try updating your dependency with `cargo update -p solana_program_entrypoint`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the macro `$crate::custom_panic_default` which comes from the expansion of the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `solana`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":11111,"byte_end":11131,"line_start":281,"line_end":281,"column_start":50,"column_end":70,"is_primary":true,"text":[{"text":"        #[cfg(all(not(feature = \"custom-panic\"), target_os = \"solana\"))]","highlight_start":50,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":5360,"byte_end":5391,"line_start":140,"line_end":140,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        $crate::custom_panic_default!();","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"anchor_lang::solana_program::entrypoint!","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":4846,"byte_end":4869,"line_start":128,"line_end":128,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! entrypoint {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::custom_panic_default!","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-entrypoint-2.3.0/src/lib.rs","byte_start":11014,"byte_end":11047,"line_start":279,"line_end":279,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! custom_panic_default {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `lynxos178`, `macos`, `managarm`, `motor`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, and `trusty` and 12 more","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `$crate::custom_panic_default` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `$crate::custom_panic_default` may come from an old version of the `solana_program_entrypoint` crate, try updating your dependency with `cargo update -p solana_program_entrypoint`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `solana`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `lynxos178`, `macos`, `managarm`, `motor`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, and `trusty` and 12 more\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `$crate::custom_panic_default` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the macro `$crate::custom_panic_default` may come from an old version of the `solana_program_entrypoint` crate, try updating your dependency with `cargo update -p solana_program_entrypoint`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the macro `$crate::custom_panic_default` which comes from the expansion of the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a attribute macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `program` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the attribute macro `program` may come from an old version of the `anchor_attribute_program` crate, try updating your dependency with `cargo update -p anchor_attribute_program`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a attribute macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `program` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the attribute macro `program` may come from an old version of the `anchor_attribute_program` crate, try updating your dependency with `cargo update -p anchor_attribute_program`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a attribute macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `program` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the attribute macro `program` may come from an old version of the `anchor_attribute_program` crate, try updating your dependency with `cargo update -p anchor_attribute_program`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a attribute macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `program` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the attribute macro `program` may come from an old version of the `anchor_attribute_program` crate, try updating your dependency with `cargo update -p anchor_attribute_program`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":25999,"byte_end":26007,"line_start":782,"line_end":782,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":25999,"byte_end":26007,"line_start":782,"line_end":782,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:782:10\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m782\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":26445,"byte_end":26453,"line_start":802,"line_end":802,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":26445,"byte_end":26453,"line_start":802,"line_end":802,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:802:10\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m802\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":25999,"byte_end":26007,"line_start":782,"line_end":782,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":25999,"byte_end":26007,"line_start":782,"line_end":782,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:782:10\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m782\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":26749,"byte_end":26757,"line_start":815,"line_end":815,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":26749,"byte_end":26757,"line_start":815,"line_end":815,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:815:10\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m815\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":27123,"byte_end":27131,"line_start":832,"line_end":832,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":27123,"byte_end":27131,"line_start":832,"line_end":832,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:832:10\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m832\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":27828,"byte_end":27836,"line_start":861,"line_end":861,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":27828,"byte_end":27836,"line_start":861,"line_end":861,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:861:10\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m861\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":26445,"byte_end":26453,"line_start":802,"line_end":802,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":26445,"byte_end":26453,"line_start":802,"line_end":802,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:802:10\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m802\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":26749,"byte_end":26757,"line_start":815,"line_end":815,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":26749,"byte_end":26757,"line_start":815,"line_end":815,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:815:10\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m815\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":27123,"byte_end":27131,"line_start":832,"line_end":832,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":27123,"byte_end":27131,"line_start":832,"line_end":832,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:832:10\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m832\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":27828,"byte_end":27836,"line_start":861,"line_end":861,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":27828,"byte_end":27836,"line_start":861,"line_end":861,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:861:10\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m861\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":28682,"byte_end":28690,"line_start":896,"line_end":896,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":28682,"byte_end":28690,"line_start":896,"line_end":896,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:896:10\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m896\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":29093,"byte_end":29101,"line_start":914,"line_end":914,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":29093,"byte_end":29101,"line_start":914,"line_end":914,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:914:10\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m914\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":30110,"byte_end":30118,"line_start":956,"line_end":956,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":30110,"byte_end":30118,"line_start":956,"line_end":956,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:956:10\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m956\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":28682,"byte_end":28690,"line_start":896,"line_end":896,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":28682,"byte_end":28690,"line_start":896,"line_end":896,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:896:10\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m896\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":29093,"byte_end":29101,"line_start":914,"line_end":914,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":29093,"byte_end":29101,"line_start":914,"line_end":914,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:914:10\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m914\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":30110,"byte_end":30118,"line_start":956,"line_end":956,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":30110,"byte_end":30118,"line_start":956,"line_end":956,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:956:10\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m956\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":31307,"byte_end":31315,"line_start":1002,"line_end":1002,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":31307,"byte_end":31315,"line_start":1002,"line_end":1002,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1002:10\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1002\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n     \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":31726,"byte_end":31734,"line_start":1019,"line_end":1019,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":31726,"byte_end":31734,"line_start":1019,"line_end":1019,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1019:10\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1019\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n     \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":31307,"byte_end":31315,"line_start":1002,"line_end":1002,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":31307,"byte_end":31315,"line_start":1002,"line_end":1002,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1002:10\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1002\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n     \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":31726,"byte_end":31734,"line_start":1019,"line_end":1019,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":31726,"byte_end":31734,"line_start":1019,"line_end":1019,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1019:10\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1019\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n     \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":32637,"byte_end":32645,"line_start":1054,"line_end":1054,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":32637,"byte_end":32645,"line_start":1054,"line_end":1054,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1054:10\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1054\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n     \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":33085,"byte_end":33093,"line_start":1070,"line_end":1070,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":33085,"byte_end":33093,"line_start":1070,"line_end":1070,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1070:10\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1070\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n     \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":32637,"byte_end":32645,"line_start":1054,"line_end":1054,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":32637,"byte_end":32645,"line_start":1054,"line_end":1054,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1054:10\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1054\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n     \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":33085,"byte_end":33093,"line_start":1070,"line_end":1070,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":33085,"byte_end":33093,"line_start":1070,"line_end":1070,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1070:10\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1070\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n     \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":34143,"byte_end":34151,"line_start":1111,"line_end":1111,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":34143,"byte_end":34151,"line_start":1111,"line_end":1111,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1111:10\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1111\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n     \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":34944,"byte_end":34952,"line_start":1142,"line_end":1142,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":34944,"byte_end":34952,"line_start":1142,"line_end":1142,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1142:10\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1142\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n     \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":34143,"byte_end":34151,"line_start":1111,"line_end":1111,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":34143,"byte_end":34151,"line_start":1111,"line_end":1111,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1111:10\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1111\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n     \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":36830,"byte_end":36838,"line_start":1212,"line_end":1212,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":36830,"byte_end":36838,"line_start":1212,"line_end":1212,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1212:10\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1212\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n     \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":39409,"byte_end":39417,"line_start":1306,"line_end":1306,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":39409,"byte_end":39417,"line_start":1306,"line_end":1306,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1306:10\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1306\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n     \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":34944,"byte_end":34952,"line_start":1142,"line_end":1142,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":34944,"byte_end":34952,"line_start":1142,"line_end":1142,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1142:10\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1142\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n     \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":36830,"byte_end":36838,"line_start":1212,"line_end":1212,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":36830,"byte_end":36838,"line_start":1212,"line_end":1212,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1212:10\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1212\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n     \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `anchor-debug`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":39409,"byte_end":39417,"line_start":1306,"line_end":1306,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":39409,"byte_end":39417,"line_start":1306,"line_end":1306,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-accounts-0.31.1/src/lib.rs","byte_start":29173,"byte_end":29229,"line_start":632,"line_end":632,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub fn derive_accounts(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `Accounts` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: unexpected `cfg` condition value: `anchor-debug`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1306:10\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1306\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[derive(Accounts)]\n     \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: expected values for `feature` are: `cpi`, `default`, `idl-build`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: try referring to `Accounts` crate for guidance on how handle this unexpected cfg\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the derive macro `Accounts` may come from an old version of the `anchor_derive_accounts` crate, try updating your dependency with `cargo update -p anchor_derive_accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseToGroup<'_>: Bumps` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":16682,"byte_end":16717,"line_start":477,"line_end":477,"column_start":14,"column_end":49,"is_primary":true,"text":[{"text":"        ctx: Context<ConfidentialReleaseToGroup>,","highlight_start":14,"highlight_end":49}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `Bumps` is not implemented for `ConfidentialReleaseToGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":35413,"byte_end":35457,"line_start":1161,"line_end":1161,"column_start":1,"column_end":45,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseToGroup<'info> {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `Bumps`:\n  ConfidentialDeposit<'info>\n  ConfidentialDepositCallback<'info>\n  ConfidentialTransferCallback<'info>\n  ConfidentialTransferFromPoolCallback<'info>\n  ConfidentialWithdraw<'info>\n  ConfidentialWithdrawCallback<'info>\n  CreateConfidentialGroupPool<'info>\n  CreateGroupPool<'info>\nand 95 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `anchor_lang::context::Context`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs","byte_start":826,"byte_end":831,"line_start":24,"line_end":24,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"pub struct Context<'a, 'b, 'c, 'info, T: Bumps> {","highlight_start":42,"highlight_end":47}],"label":"required by this bound in `Context`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseToGroup<'_>: Bumps` is not satisfied\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:477:14\n     \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m477\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx: Context<ConfidentialReleaseToGroup>,\n     \u001b[1m\u001b[94m|\u001b[0m              \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: the trait `Bumps` is not implemented for `ConfidentialReleaseToGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1161:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1161\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseToGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `Bumps`:\n               ConfidentialDeposit<'info>\n               ConfidentialDepositCallback<'info>\n               ConfidentialTransferCallback<'info>\n               ConfidentialTransferFromPoolCallback<'info>\n               ConfidentialWithdraw<'info>\n               ConfidentialWithdrawCallback<'info>\n               CreateConfidentialGroupPool<'info>\n               CreateGroupPool<'info>\n             and 95 others\n\u001b[1m\u001b[92mnote\u001b[0m: required by a bound in `anchor_lang::context::Context`\n    \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs:24:42\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m24\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct Context<'a, 'b, 'c, 'info, T: Bumps> {\n     \u001b[1m\u001b[94m|\u001b[0m                                          \u001b[1m\u001b[92m^^^^^\u001b[0m \u001b[1m\u001b[92mrequired by this bound in `Context`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseToGroup<'_>: Bumps` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":16682,"byte_end":16717,"line_start":477,"line_end":477,"column_start":14,"column_end":49,"is_primary":true,"text":[{"text":"        ctx: Context<ConfidentialReleaseToGroup>,","highlight_start":14,"highlight_end":49}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `Bumps` is not implemented for `ConfidentialReleaseToGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":35413,"byte_end":35457,"line_start":1161,"line_end":1161,"column_start":1,"column_end":45,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseToGroup<'info> {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `Bumps`:\n  ConfidentialDeposit<'info>\n  ConfidentialDepositCallback<'info>\n  ConfidentialTransferCallback<'info>\n  ConfidentialTransferFromPoolCallback<'info>\n  ConfidentialWithdraw<'info>\n  ConfidentialWithdrawCallback<'info>\n  CreateConfidentialGroupPool<'info>\n  CreateGroupPool<'info>\nand 95 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `anchor_lang::context::Context`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs","byte_start":826,"byte_end":831,"line_start":24,"line_end":24,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"pub struct Context<'a, 'b, 'c, 'info, T: Bumps> {","highlight_start":42,"highlight_end":47}],"label":"required by this bound in `Context`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseToGroup<'_>: Bumps` is not satisfied\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:477:14\n     \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m477\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx: Context<ConfidentialReleaseToGroup>,\n     \u001b[1m\u001b[94m|\u001b[0m              \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: the trait `Bumps` is not implemented for `ConfidentialReleaseToGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1161:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1161\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseToGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `Bumps`:\n               ConfidentialDeposit<'info>\n               ConfidentialDepositCallback<'info>\n               ConfidentialTransferCallback<'info>\n               ConfidentialTransferFromPoolCallback<'info>\n               ConfidentialWithdraw<'info>\n               ConfidentialWithdrawCallback<'info>\n               CreateConfidentialGroupPool<'info>\n               CreateGroupPool<'info>\n             and 95 others\n\u001b[1m\u001b[92mnote\u001b[0m: required by a bound in `anchor_lang::context::Context`\n    \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs:24:42\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m24\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct Context<'a, 'b, 'c, 'info, T: Bumps> {\n     \u001b[1m\u001b[94m|\u001b[0m                                          \u001b[1m\u001b[92m^^^^^\u001b[0m \u001b[1m\u001b[92mrequired by this bound in `Context`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseFromGroup<'_>: Bumps` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":20132,"byte_end":20169,"line_start":578,"line_end":578,"column_start":14,"column_end":51,"is_primary":true,"text":[{"text":"        ctx: Context<ConfidentialReleaseFromGroup>,","highlight_start":14,"highlight_end":51}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `Bumps` is not implemented for `ConfidentialReleaseFromGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":38002,"byte_end":38048,"line_start":1255,"line_end":1255,"column_start":1,"column_end":47,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseFromGroup<'info> {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `Bumps`:\n  ConfidentialDeposit<'info>\n  ConfidentialDepositCallback<'info>\n  ConfidentialTransferCallback<'info>\n  ConfidentialTransferFromPoolCallback<'info>\n  ConfidentialWithdraw<'info>\n  ConfidentialWithdrawCallback<'info>\n  CreateConfidentialGroupPool<'info>\n  CreateGroupPool<'info>\nand 95 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `anchor_lang::context::Context`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs","byte_start":826,"byte_end":831,"line_start":24,"line_end":24,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"pub struct Context<'a, 'b, 'c, 'info, T: Bumps> {","highlight_start":42,"highlight_end":47}],"label":"required by this bound in `Context`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseFromGroup<'_>: Bumps` is not satisfied\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:578:14\n     \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m578\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx: Context<ConfidentialReleaseFromGroup>,\n     \u001b[1m\u001b[94m|\u001b[0m              \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: the trait `Bumps` is not implemented for `ConfidentialReleaseFromGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1255:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1255\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseFromGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `Bumps`:\n               ConfidentialDeposit<'info>\n               ConfidentialDepositCallback<'info>\n               ConfidentialTransferCallback<'info>\n               ConfidentialTransferFromPoolCallback<'info>\n               ConfidentialWithdraw<'info>\n               ConfidentialWithdrawCallback<'info>\n               CreateConfidentialGroupPool<'info>\n               CreateGroupPool<'info>\n             and 95 others\n\u001b[1m\u001b[92mnote\u001b[0m: required by a bound in `anchor_lang::context::Context`\n    \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs:24:42\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m24\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct Context<'a, 'b, 'c, 'info, T: Bumps> {\n     \u001b[1m\u001b[94m|\u001b[0m                                          \u001b[1m\u001b[92m^^^^^\u001b[0m \u001b[1m\u001b[92mrequired by this bound in `Context`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseFromGroup<'_>: Bumps` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":20132,"byte_end":20169,"line_start":578,"line_end":578,"column_start":14,"column_end":51,"is_primary":true,"text":[{"text":"        ctx: Context<ConfidentialReleaseFromGroup>,","highlight_start":14,"highlight_end":51}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `Bumps` is not implemented for `ConfidentialReleaseFromGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":38002,"byte_end":38048,"line_start":1255,"line_end":1255,"column_start":1,"column_end":47,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseFromGroup<'info> {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `Bumps`:\n  ConfidentialDeposit<'info>\n  ConfidentialDepositCallback<'info>\n  ConfidentialTransferCallback<'info>\n  ConfidentialTransferFromPoolCallback<'info>\n  ConfidentialWithdraw<'info>\n  ConfidentialWithdrawCallback<'info>\n  CreateConfidentialGroupPool<'info>\n  CreateGroupPool<'info>\nand 95 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `anchor_lang::context::Context`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs","byte_start":826,"byte_end":831,"line_start":24,"line_end":24,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"pub struct Context<'a, 'b, 'c, 'info, T: Bumps> {","highlight_start":42,"highlight_end":47}],"label":"required by this bound in `Context`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseFromGroup<'_>: Bumps` is not satisfied\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:578:14\n     \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m578\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx: Context<ConfidentialReleaseFromGroup>,\n     \u001b[1m\u001b[94m|\u001b[0m              \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: the trait `Bumps` is not implemented for `ConfidentialReleaseFromGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1255:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1255\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseFromGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `Bumps`:\n               ConfidentialDeposit<'info>\n               ConfidentialDepositCallback<'info>\n               ConfidentialTransferCallback<'info>\n               ConfidentialTransferFromPoolCallback<'info>\n               ConfidentialWithdraw<'info>\n               ConfidentialWithdrawCallback<'info>\n               CreateConfidentialGroupPool<'info>\n               CreateGroupPool<'info>\n             and 95 others\n\u001b[1m\u001b[92mnote\u001b[0m: required by a bound in `anchor_lang::context::Context`\n    \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs:24:42\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m24\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct Context<'a, 'b, 'c, 'info, T: Bumps> {\n     \u001b[1m\u001b[94m|\u001b[0m                                          \u001b[1m\u001b[92m^^^^^\u001b[0m \u001b[1m\u001b[92mrequired by this bound in `Context`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::DepositResult: anchor_lang::AnchorSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"the trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::DepositResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs","byte_start":1280,"byte_end":1304,"line_start":44,"line_end":44,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait BorshSerialize {","highlight_start":1,"highlight_end":25}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1061,"byte_end":1085,"line_start":35,"line_end":35,"column_start":5,"column_end":29,"is_primary":false,"text":[{"text":"    pub struct DepositResult {","highlight_start":5,"highlight_end":29}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see issue #48214","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"add `#![feature(trivial_bounds)]` to the crate attributes to enable","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":173,"byte_end":173,"line_start":7,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#![feature(trivial_bounds)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::DepositResult: anchor_lang::AnchorSerialize` is not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::DepositResult`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n  \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs:44:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m44\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshSerialize {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:35:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m35\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct DepositResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: see issue #48214\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\u001b[1m\u001b[96mhelp\u001b[0m: add `#![feature(trivial_bounds)]` to the crate attributes to enable\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[92m+ #![feature(trivial_bounds)]\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::DepositResult: anchor_lang::AnchorSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"the trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::DepositResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs","byte_start":1280,"byte_end":1304,"line_start":44,"line_end":44,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait BorshSerialize {","highlight_start":1,"highlight_end":25}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1061,"byte_end":1085,"line_start":35,"line_end":35,"column_start":5,"column_end":29,"is_primary":false,"text":[{"text":"    pub struct DepositResult {","highlight_start":5,"highlight_end":29}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see issue #48214","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"add `#![feature(trivial_bounds)]` to the crate attributes to enable","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":173,"byte_end":173,"line_start":7,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#![feature(trivial_bounds)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::DepositResult: anchor_lang::AnchorSerialize` is not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::DepositResult`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n  \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs:44:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m44\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshSerialize {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:35:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m35\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct DepositResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: see issue #48214\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\u001b[1m\u001b[96mhelp\u001b[0m: add `#![feature(trivial_bounds)]` to the crate attributes to enable\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[92m+ #![feature(trivial_bounds)]\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::DepositResult: anchor_lang::AnchorDeserialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"the trait `anchor_lang::AnchorDeserialize` is not implemented for `encrypted_ixs::circuits::DepositResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/de/mod.rs","byte_start":1062,"byte_end":1095,"line_start":35,"line_end":35,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1061,"byte_end":1085,"line_start":35,"line_end":35,"column_start":5,"column_end":29,"is_primary":false,"text":[{"text":"    pub struct DepositResult {","highlight_start":5,"highlight_end":29}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see issue #48214","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"add `#![feature(trivial_bounds)]` to the crate attributes to enable","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":173,"byte_end":173,"line_start":7,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#![feature(trivial_bounds)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::DepositResult: anchor_lang::AnchorDeserialize` is not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorDeserialize` is not implemented for `encrypted_ixs::circuits::DepositResult`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n  \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/de/mod.rs:35:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m35\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:35:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m35\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct DepositResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: see issue #48214\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\u001b[1m\u001b[96mhelp\u001b[0m: add `#![feature(trivial_bounds)]` to the crate attributes to enable\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[92m+ #![feature(trivial_bounds)]\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::DepositResult: anchor_lang::AnchorDeserialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"the trait `anchor_lang::AnchorDeserialize` is not implemented for `encrypted_ixs::circuits::DepositResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/de/mod.rs","byte_start":1062,"byte_end":1095,"line_start":35,"line_end":35,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1061,"byte_end":1085,"line_start":35,"line_end":35,"column_start":5,"column_end":29,"is_primary":false,"text":[{"text":"    pub struct DepositResult {","highlight_start":5,"highlight_end":29}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see issue #48214","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"add `#![feature(trivial_bounds)]` to the crate attributes to enable","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":173,"byte_end":173,"line_start":7,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#![feature(trivial_bounds)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::DepositResult: anchor_lang::AnchorDeserialize` is not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorDeserialize` is not implemented for `encrypted_ixs::circuits::DepositResult`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n  \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/de/mod.rs:35:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m35\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:35:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m35\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct DepositResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: see issue #48214\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\u001b[1m\u001b[96mhelp\u001b[0m: add `#![feature(trivial_bounds)]` to the crate attributes to enable\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[92m+ #![feature(trivial_bounds)]\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::DepositResult: anchor_lang::AnchorSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":11917,"byte_end":11946,"line_start":342,"line_end":342,"column_start":12,"column_end":41,"is_primary":true,"text":[{"text":"    pub fn confidential_deposit_callback(","highlight_start":12,"highlight_end":41}],"label":"the trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::DepositResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs","byte_start":1280,"byte_end":1304,"line_start":44,"line_end":44,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait BorshSerialize {","highlight_start":1,"highlight_end":25}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1061,"byte_end":1085,"line_start":35,"line_end":35,"column_start":5,"column_end":29,"is_primary":false,"text":[{"text":"    pub struct DepositResult {","highlight_start":5,"highlight_end":29}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `instruction::ConfidentialDepositCallback` to implement `anchor_lang::AnchorSerialize`","code":null,"level":"note","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(AnchorSerialize)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-serde-0.31.1/src/lib.rs","byte_start":848,"byte_end":906,"line_start":30,"line_end":30,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"pub fn anchor_serialize(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":11917,"byte_end":11946,"line_start":342,"line_end":342,"column_start":12,"column_end":41,"is_primary":true,"text":[{"text":"    pub fn confidential_deposit_callback(","highlight_start":12,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"required by a bound in `InstructionData`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/lib.rs","byte_start":10617,"byte_end":10632,"line_start":281,"line_end":281,"column_start":44,"column_end":59,"is_primary":true,"text":[{"text":"pub trait InstructionData: Discriminator + AnchorSerialize {","highlight_start":44,"highlight_end":59}],"label":"required by this bound in `InstructionData`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::DepositResult: anchor_lang::AnchorSerialize` is not satisfied\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:342:12\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m342\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn confidential_deposit_callback(\n    \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::DepositResult`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n   \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs:44:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m44\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshSerialize {\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n    \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:35:5\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m35\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct DepositResult {\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n\u001b[1m\u001b[92mnote\u001b[0m: required for `instruction::ConfidentialDepositCallback` to implement `anchor_lang::AnchorSerialize`\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92munsatisfied trait bound introduced in this `derive` macro\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m342\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn confidential_deposit_callback(\n    \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: required by a bound in `InstructionData`\n   \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/lib.rs:281:44\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m281\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait InstructionData: Discriminator + AnchorSerialize {\n    \u001b[1m\u001b[94m|\u001b[0m                                            \u001b[1m\u001b[92m^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mrequired by this bound in `InstructionData`\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the derive macro `AnchorSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::DepositResult: anchor_lang::AnchorSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":11917,"byte_end":11946,"line_start":342,"line_end":342,"column_start":12,"column_end":41,"is_primary":true,"text":[{"text":"    pub fn confidential_deposit_callback(","highlight_start":12,"highlight_end":41}],"label":"the trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::DepositResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs","byte_start":1280,"byte_end":1304,"line_start":44,"line_end":44,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait BorshSerialize {","highlight_start":1,"highlight_end":25}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1061,"byte_end":1085,"line_start":35,"line_end":35,"column_start":5,"column_end":29,"is_primary":false,"text":[{"text":"    pub struct DepositResult {","highlight_start":5,"highlight_end":29}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `instruction::ConfidentialDepositCallback` to implement `anchor_lang::AnchorSerialize`","code":null,"level":"note","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(AnchorSerialize)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-serde-0.31.1/src/lib.rs","byte_start":848,"byte_end":906,"line_start":30,"line_end":30,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"pub fn anchor_serialize(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":11917,"byte_end":11946,"line_start":342,"line_end":342,"column_start":12,"column_end":41,"is_primary":true,"text":[{"text":"    pub fn confidential_deposit_callback(","highlight_start":12,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"required by a bound in `InstructionData`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/lib.rs","byte_start":10617,"byte_end":10632,"line_start":281,"line_end":281,"column_start":44,"column_end":59,"is_primary":true,"text":[{"text":"pub trait InstructionData: Discriminator + AnchorSerialize {","highlight_start":44,"highlight_end":59}],"label":"required by this bound in `InstructionData`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::DepositResult: anchor_lang::AnchorSerialize` is not satisfied\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:342:12\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m342\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn confidential_deposit_callback(\n    \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::DepositResult`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n   \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs:44:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m44\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshSerialize {\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n    \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:35:5\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m35\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct DepositResult {\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n\u001b[1m\u001b[92mnote\u001b[0m: required for `instruction::ConfidentialDepositCallback` to implement `anchor_lang::AnchorSerialize`\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92munsatisfied trait bound introduced in this `derive` macro\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m342\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn confidential_deposit_callback(\n    \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: required by a bound in `InstructionData`\n   \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/lib.rs:281:44\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m281\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait InstructionData: Discriminator + AnchorSerialize {\n    \u001b[1m\u001b[94m|\u001b[0m                                            \u001b[1m\u001b[92m^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mrequired by this bound in `InstructionData`\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the derive macro `AnchorSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::WithdrawResult: anchor_lang::AnchorSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"the trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::WithdrawResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs","byte_start":1280,"byte_end":1304,"line_start":44,"line_end":44,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait BorshSerialize {","highlight_start":1,"highlight_end":25}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1262,"byte_end":1287,"line_start":45,"line_end":45,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct WithdrawResult {","highlight_start":5,"highlight_end":30}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see issue #48214","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"add `#![feature(trivial_bounds)]` to the crate attributes to enable","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":173,"byte_end":173,"line_start":7,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#![feature(trivial_bounds)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::WithdrawResult: anchor_lang::AnchorSerialize` is not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::WithdrawResult`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n  \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs:44:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m44\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshSerialize {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:45:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m45\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct WithdrawResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: see issue #48214\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\u001b[1m\u001b[96mhelp\u001b[0m: add `#![feature(trivial_bounds)]` to the crate attributes to enable\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[92m+ #![feature(trivial_bounds)]\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::WithdrawResult: anchor_lang::AnchorSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"the trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::WithdrawResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs","byte_start":1280,"byte_end":1304,"line_start":44,"line_end":44,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait BorshSerialize {","highlight_start":1,"highlight_end":25}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1262,"byte_end":1287,"line_start":45,"line_end":45,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct WithdrawResult {","highlight_start":5,"highlight_end":30}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see issue #48214","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"add `#![feature(trivial_bounds)]` to the crate attributes to enable","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":173,"byte_end":173,"line_start":7,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#![feature(trivial_bounds)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::WithdrawResult: anchor_lang::AnchorSerialize` is not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::WithdrawResult`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n  \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs:44:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m44\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshSerialize {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:45:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m45\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct WithdrawResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: see issue #48214\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\u001b[1m\u001b[96mhelp\u001b[0m: add `#![feature(trivial_bounds)]` to the crate attributes to enable\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[92m+ #![feature(trivial_bounds)]\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::WithdrawResult: anchor_lang::AnchorDeserialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"the trait `anchor_lang::AnchorDeserialize` is not implemented for `encrypted_ixs::circuits::WithdrawResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/de/mod.rs","byte_start":1062,"byte_end":1095,"line_start":35,"line_end":35,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1262,"byte_end":1287,"line_start":45,"line_end":45,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct WithdrawResult {","highlight_start":5,"highlight_end":30}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see issue #48214","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"add `#![feature(trivial_bounds)]` to the crate attributes to enable","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":173,"byte_end":173,"line_start":7,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#![feature(trivial_bounds)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::WithdrawResult: anchor_lang::AnchorDeserialize` is not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorDeserialize` is not implemented for `encrypted_ixs::circuits::WithdrawResult`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n  \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/de/mod.rs:35:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m35\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:45:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m45\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct WithdrawResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: see issue #48214\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\u001b[1m\u001b[96mhelp\u001b[0m: add `#![feature(trivial_bounds)]` to the crate attributes to enable\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[92m+ #![feature(trivial_bounds)]\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::WithdrawResult: anchor_lang::AnchorDeserialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"the trait `anchor_lang::AnchorDeserialize` is not implemented for `encrypted_ixs::circuits::WithdrawResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/de/mod.rs","byte_start":1062,"byte_end":1095,"line_start":35,"line_end":35,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1262,"byte_end":1287,"line_start":45,"line_end":45,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct WithdrawResult {","highlight_start":5,"highlight_end":30}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see issue #48214","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"add `#![feature(trivial_bounds)]` to the crate attributes to enable","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":173,"byte_end":173,"line_start":7,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#![feature(trivial_bounds)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::WithdrawResult: anchor_lang::AnchorDeserialize` is not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorDeserialize` is not implemented for `encrypted_ixs::circuits::WithdrawResult`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n  \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/de/mod.rs:35:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m35\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:45:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m45\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct WithdrawResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: see issue #48214\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\u001b[1m\u001b[96mhelp\u001b[0m: add `#![feature(trivial_bounds)]` to the crate attributes to enable\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[92m+ #![feature(trivial_bounds)]\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::WithdrawResult: anchor_lang::AnchorSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":14059,"byte_end":14089,"line_start":407,"line_end":407,"column_start":12,"column_end":42,"is_primary":true,"text":[{"text":"    pub fn confidential_withdraw_callback(","highlight_start":12,"highlight_end":42}],"label":"the trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::WithdrawResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs","byte_start":1280,"byte_end":1304,"line_start":44,"line_end":44,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait BorshSerialize {","highlight_start":1,"highlight_end":25}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1262,"byte_end":1287,"line_start":45,"line_end":45,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct WithdrawResult {","highlight_start":5,"highlight_end":30}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `instruction::ConfidentialWithdrawCallback` to implement `anchor_lang::AnchorSerialize`","code":null,"level":"note","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(AnchorSerialize)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-serde-0.31.1/src/lib.rs","byte_start":848,"byte_end":906,"line_start":30,"line_end":30,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"pub fn anchor_serialize(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":14059,"byte_end":14089,"line_start":407,"line_end":407,"column_start":12,"column_end":42,"is_primary":true,"text":[{"text":"    pub fn confidential_withdraw_callback(","highlight_start":12,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"required by a bound in `InstructionData`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/lib.rs","byte_start":10617,"byte_end":10632,"line_start":281,"line_end":281,"column_start":44,"column_end":59,"is_primary":true,"text":[{"text":"pub trait InstructionData: Discriminator + AnchorSerialize {","highlight_start":44,"highlight_end":59}],"label":"required by this bound in `InstructionData`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::WithdrawResult: anchor_lang::AnchorSerialize` is not satisfied\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:407:12\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m407\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn confidential_withdraw_callback(\n    \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::WithdrawResult`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n   \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs:44:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m44\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshSerialize {\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n    \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:45:5\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m45\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct WithdrawResult {\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n\u001b[1m\u001b[92mnote\u001b[0m: required for `instruction::ConfidentialWithdrawCallback` to implement `anchor_lang::AnchorSerialize`\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92munsatisfied trait bound introduced in this `derive` macro\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m407\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn confidential_withdraw_callback(\n    \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: required by a bound in `InstructionData`\n   \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/lib.rs:281:44\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m281\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait InstructionData: Discriminator + AnchorSerialize {\n    \u001b[1m\u001b[94m|\u001b[0m                                            \u001b[1m\u001b[92m^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mrequired by this bound in `InstructionData`\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the derive macro `AnchorSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::WithdrawResult: anchor_lang::AnchorSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":14059,"byte_end":14089,"line_start":407,"line_end":407,"column_start":12,"column_end":42,"is_primary":true,"text":[{"text":"    pub fn confidential_withdraw_callback(","highlight_start":12,"highlight_end":42}],"label":"the trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::WithdrawResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs","byte_start":1280,"byte_end":1304,"line_start":44,"line_end":44,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait BorshSerialize {","highlight_start":1,"highlight_end":25}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1262,"byte_end":1287,"line_start":45,"line_end":45,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct WithdrawResult {","highlight_start":5,"highlight_end":30}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `instruction::ConfidentialWithdrawCallback` to implement `anchor_lang::AnchorSerialize`","code":null,"level":"note","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(AnchorSerialize)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-serde-0.31.1/src/lib.rs","byte_start":848,"byte_end":906,"line_start":30,"line_end":30,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"pub fn anchor_serialize(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":14059,"byte_end":14089,"line_start":407,"line_end":407,"column_start":12,"column_end":42,"is_primary":true,"text":[{"text":"    pub fn confidential_withdraw_callback(","highlight_start":12,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"required by a bound in `InstructionData`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/lib.rs","byte_start":10617,"byte_end":10632,"line_start":281,"line_end":281,"column_start":44,"column_end":59,"is_primary":true,"text":[{"text":"pub trait InstructionData: Discriminator + AnchorSerialize {","highlight_start":44,"highlight_end":59}],"label":"required by this bound in `InstructionData`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::WithdrawResult: anchor_lang::AnchorSerialize` is not satisfied\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:407:12\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m407\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn confidential_withdraw_callback(\n    \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::WithdrawResult`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n   \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs:44:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m44\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshSerialize {\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n    \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:45:5\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m45\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct WithdrawResult {\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n\u001b[1m\u001b[92mnote\u001b[0m: required for `instruction::ConfidentialWithdrawCallback` to implement `anchor_lang::AnchorSerialize`\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92munsatisfied trait bound introduced in this `derive` macro\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m407\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn confidential_withdraw_callback(\n    \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: required by a bound in `InstructionData`\n   \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/lib.rs:281:44\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m281\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait InstructionData: Discriminator + AnchorSerialize {\n    \u001b[1m\u001b[94m|\u001b[0m                                            \u001b[1m\u001b[92m^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mrequired by this bound in `InstructionData`\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the derive macro `AnchorSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"the trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::TransferResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs","byte_start":1280,"byte_end":1304,"line_start":44,"line_end":44,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait BorshSerialize {","highlight_start":1,"highlight_end":25}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1520,"byte_end":1545,"line_start":57,"line_end":57,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct TransferResult {","highlight_start":5,"highlight_end":30}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see issue #48214","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"add `#![feature(trivial_bounds)]` to the crate attributes to enable","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":173,"byte_end":173,"line_start":7,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#![feature(trivial_bounds)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorSerialize` is not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::TransferResult`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n  \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs:44:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m44\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshSerialize {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:57:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct TransferResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: see issue #48214\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\u001b[1m\u001b[96mhelp\u001b[0m: add `#![feature(trivial_bounds)]` to the crate attributes to enable\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[92m+ #![feature(trivial_bounds)]\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"the trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::TransferResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs","byte_start":1280,"byte_end":1304,"line_start":44,"line_end":44,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait BorshSerialize {","highlight_start":1,"highlight_end":25}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1520,"byte_end":1545,"line_start":57,"line_end":57,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct TransferResult {","highlight_start":5,"highlight_end":30}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see issue #48214","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"add `#![feature(trivial_bounds)]` to the crate attributes to enable","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":173,"byte_end":173,"line_start":7,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#![feature(trivial_bounds)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorSerialize` is not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::TransferResult`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n  \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs:44:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m44\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshSerialize {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:57:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct TransferResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: see issue #48214\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\u001b[1m\u001b[96mhelp\u001b[0m: add `#![feature(trivial_bounds)]` to the crate attributes to enable\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[92m+ #![feature(trivial_bounds)]\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorDeserialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"the trait `anchor_lang::AnchorDeserialize` is not implemented for `encrypted_ixs::circuits::TransferResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/de/mod.rs","byte_start":1062,"byte_end":1095,"line_start":35,"line_end":35,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1520,"byte_end":1545,"line_start":57,"line_end":57,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct TransferResult {","highlight_start":5,"highlight_end":30}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see issue #48214","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"add `#![feature(trivial_bounds)]` to the crate attributes to enable","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":173,"byte_end":173,"line_start":7,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#![feature(trivial_bounds)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorDeserialize` is not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorDeserialize` is not implemented for `encrypted_ixs::circuits::TransferResult`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n  \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/de/mod.rs:35:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m35\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:57:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct TransferResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: see issue #48214\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\u001b[1m\u001b[96mhelp\u001b[0m: add `#![feature(trivial_bounds)]` to the crate attributes to enable\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[92m+ #![feature(trivial_bounds)]\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorDeserialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"the trait `anchor_lang::AnchorDeserialize` is not implemented for `encrypted_ixs::circuits::TransferResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/de/mod.rs","byte_start":1062,"byte_end":1095,"line_start":35,"line_end":35,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1520,"byte_end":1545,"line_start":57,"line_end":57,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct TransferResult {","highlight_start":5,"highlight_end":30}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see issue #48214","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"add `#![feature(trivial_bounds)]` to the crate attributes to enable","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":173,"byte_end":173,"line_start":7,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#![feature(trivial_bounds)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorDeserialize` is not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorDeserialize` is not implemented for `encrypted_ixs::circuits::TransferResult`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n  \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/de/mod.rs:35:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m35\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:57:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct TransferResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: see issue #48214\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\u001b[1m\u001b[96mhelp\u001b[0m: add `#![feature(trivial_bounds)]` to the crate attributes to enable\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[92m+ #![feature(trivial_bounds)]\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":18211,"byte_end":18249,"line_start":526,"line_end":526,"column_start":12,"column_end":50,"is_primary":true,"text":[{"text":"    pub fn confidential_transfer_to_pool_callback(","highlight_start":12,"highlight_end":50}],"label":"the trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::TransferResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs","byte_start":1280,"byte_end":1304,"line_start":44,"line_end":44,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait BorshSerialize {","highlight_start":1,"highlight_end":25}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1520,"byte_end":1545,"line_start":57,"line_end":57,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct TransferResult {","highlight_start":5,"highlight_end":30}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `ConfidentialTransferToPoolCallback` to implement `anchor_lang::AnchorSerialize`","code":null,"level":"note","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(AnchorSerialize)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-serde-0.31.1/src/lib.rs","byte_start":848,"byte_end":906,"line_start":30,"line_end":30,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"pub fn anchor_serialize(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":18211,"byte_end":18249,"line_start":526,"line_end":526,"column_start":12,"column_end":50,"is_primary":true,"text":[{"text":"    pub fn confidential_transfer_to_pool_callback(","highlight_start":12,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"required by a bound in `InstructionData`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/lib.rs","byte_start":10617,"byte_end":10632,"line_start":281,"line_end":281,"column_start":44,"column_end":59,"is_primary":true,"text":[{"text":"pub trait InstructionData: Discriminator + AnchorSerialize {","highlight_start":44,"highlight_end":59}],"label":"required by this bound in `InstructionData`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorSerialize` is not satisfied\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:526:12\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m526\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn confidential_transfer_to_pool_callback(\n    \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::TransferResult`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n   \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs:44:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m44\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshSerialize {\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n    \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:57:5\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct TransferResult {\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n\u001b[1m\u001b[92mnote\u001b[0m: required for `ConfidentialTransferToPoolCallback` to implement `anchor_lang::AnchorSerialize`\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92munsatisfied trait bound introduced in this `derive` macro\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m526\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn confidential_transfer_to_pool_callback(\n    \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: required by a bound in `InstructionData`\n   \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/lib.rs:281:44\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m281\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait InstructionData: Discriminator + AnchorSerialize {\n    \u001b[1m\u001b[94m|\u001b[0m                                            \u001b[1m\u001b[92m^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mrequired by this bound in `InstructionData`\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the derive macro `AnchorSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":18211,"byte_end":18249,"line_start":526,"line_end":526,"column_start":12,"column_end":50,"is_primary":true,"text":[{"text":"    pub fn confidential_transfer_to_pool_callback(","highlight_start":12,"highlight_end":50}],"label":"the trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::TransferResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs","byte_start":1280,"byte_end":1304,"line_start":44,"line_end":44,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait BorshSerialize {","highlight_start":1,"highlight_end":25}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1520,"byte_end":1545,"line_start":57,"line_end":57,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct TransferResult {","highlight_start":5,"highlight_end":30}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `ConfidentialTransferToPoolCallback` to implement `anchor_lang::AnchorSerialize`","code":null,"level":"note","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(AnchorSerialize)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-serde-0.31.1/src/lib.rs","byte_start":848,"byte_end":906,"line_start":30,"line_end":30,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"pub fn anchor_serialize(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":18211,"byte_end":18249,"line_start":526,"line_end":526,"column_start":12,"column_end":50,"is_primary":true,"text":[{"text":"    pub fn confidential_transfer_to_pool_callback(","highlight_start":12,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"required by a bound in `InstructionData`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/lib.rs","byte_start":10617,"byte_end":10632,"line_start":281,"line_end":281,"column_start":44,"column_end":59,"is_primary":true,"text":[{"text":"pub trait InstructionData: Discriminator + AnchorSerialize {","highlight_start":44,"highlight_end":59}],"label":"required by this bound in `InstructionData`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorSerialize` is not satisfied\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:526:12\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m526\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn confidential_transfer_to_pool_callback(\n    \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::TransferResult`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n   \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs:44:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m44\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshSerialize {\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n    \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:57:5\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct TransferResult {\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n\u001b[1m\u001b[92mnote\u001b[0m: required for `ConfidentialTransferToPoolCallback` to implement `anchor_lang::AnchorSerialize`\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92munsatisfied trait bound introduced in this `derive` macro\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m526\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn confidential_transfer_to_pool_callback(\n    \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: required by a bound in `InstructionData`\n   \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/lib.rs:281:44\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m281\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait InstructionData: Discriminator + AnchorSerialize {\n    \u001b[1m\u001b[94m|\u001b[0m                                            \u001b[1m\u001b[92m^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mrequired by this bound in `InstructionData`\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the derive macro `AnchorSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"the trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::TransferResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs","byte_start":1280,"byte_end":1304,"line_start":44,"line_end":44,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait BorshSerialize {","highlight_start":1,"highlight_end":25}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1520,"byte_end":1545,"line_start":57,"line_end":57,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct TransferResult {","highlight_start":5,"highlight_end":30}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see issue #48214","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"add `#![feature(trivial_bounds)]` to the crate attributes to enable","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":173,"byte_end":173,"line_start":7,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#![feature(trivial_bounds)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorSerialize` is not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::TransferResult`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n  \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs:44:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m44\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshSerialize {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:57:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct TransferResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: see issue #48214\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\u001b[1m\u001b[96mhelp\u001b[0m: add `#![feature(trivial_bounds)]` to the crate attributes to enable\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[92m+ #![feature(trivial_bounds)]\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"the trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::TransferResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs","byte_start":1280,"byte_end":1304,"line_start":44,"line_end":44,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait BorshSerialize {","highlight_start":1,"highlight_end":25}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1520,"byte_end":1545,"line_start":57,"line_end":57,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct TransferResult {","highlight_start":5,"highlight_end":30}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see issue #48214","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"add `#![feature(trivial_bounds)]` to the crate attributes to enable","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":173,"byte_end":173,"line_start":7,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#![feature(trivial_bounds)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorSerialize` is not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::TransferResult`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n  \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs:44:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m44\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshSerialize {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:57:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct TransferResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: see issue #48214\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\u001b[1m\u001b[96mhelp\u001b[0m: add `#![feature(trivial_bounds)]` to the crate attributes to enable\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[92m+ #![feature(trivial_bounds)]\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorDeserialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"the trait `anchor_lang::AnchorDeserialize` is not implemented for `encrypted_ixs::circuits::TransferResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/de/mod.rs","byte_start":1062,"byte_end":1095,"line_start":35,"line_end":35,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1520,"byte_end":1545,"line_start":57,"line_end":57,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct TransferResult {","highlight_start":5,"highlight_end":30}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see issue #48214","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"add `#![feature(trivial_bounds)]` to the crate attributes to enable","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":173,"byte_end":173,"line_start":7,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#![feature(trivial_bounds)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorDeserialize` is not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorDeserialize` is not implemented for `encrypted_ixs::circuits::TransferResult`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n  \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/de/mod.rs:35:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m35\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:57:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct TransferResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: see issue #48214\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\u001b[1m\u001b[96mhelp\u001b[0m: add `#![feature(trivial_bounds)]` to the crate attributes to enable\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[92m+ #![feature(trivial_bounds)]\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorDeserialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"the trait `anchor_lang::AnchorDeserialize` is not implemented for `encrypted_ixs::circuits::TransferResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/de/mod.rs","byte_start":1062,"byte_end":1095,"line_start":35,"line_end":35,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1520,"byte_end":1545,"line_start":57,"line_end":57,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct TransferResult {","highlight_start":5,"highlight_end":30}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see issue #48214","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"add `#![feature(trivial_bounds)]` to the crate attributes to enable","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":173,"byte_end":173,"line_start":7,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#![feature(trivial_bounds)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorDeserialize` is not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorDeserialize` is not implemented for `encrypted_ixs::circuits::TransferResult`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n  \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/de/mod.rs:35:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m35\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:57:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct TransferResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: see issue #48214\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\u001b[1m\u001b[96mhelp\u001b[0m: add `#![feature(trivial_bounds)]` to the crate attributes to enable\n   \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m7\u001b[0m \u001b[92m+ #![feature(trivial_bounds)]\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":21583,"byte_end":21623,"line_start":626,"line_end":626,"column_start":12,"column_end":52,"is_primary":true,"text":[{"text":"    pub fn confidential_transfer_from_pool_callback(","highlight_start":12,"highlight_end":52}],"label":"the trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::TransferResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs","byte_start":1280,"byte_end":1304,"line_start":44,"line_end":44,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait BorshSerialize {","highlight_start":1,"highlight_end":25}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1520,"byte_end":1545,"line_start":57,"line_end":57,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct TransferResult {","highlight_start":5,"highlight_end":30}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `instruction::ConfidentialTransferFromPoolCallback` to implement `anchor_lang::AnchorSerialize`","code":null,"level":"note","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(AnchorSerialize)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-serde-0.31.1/src/lib.rs","byte_start":848,"byte_end":906,"line_start":30,"line_end":30,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"pub fn anchor_serialize(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":21583,"byte_end":21623,"line_start":626,"line_end":626,"column_start":12,"column_end":52,"is_primary":true,"text":[{"text":"    pub fn confidential_transfer_from_pool_callback(","highlight_start":12,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"required by a bound in `InstructionData`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/lib.rs","byte_start":10617,"byte_end":10632,"line_start":281,"line_end":281,"column_start":44,"column_end":59,"is_primary":true,"text":[{"text":"pub trait InstructionData: Discriminator + AnchorSerialize {","highlight_start":44,"highlight_end":59}],"label":"required by this bound in `InstructionData`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorSerialize` is not satisfied\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:626:12\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m626\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn confidential_transfer_from_pool_callback(\n    \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::TransferResult`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n   \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs:44:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m44\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshSerialize {\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n    \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:57:5\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct TransferResult {\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n\u001b[1m\u001b[92mnote\u001b[0m: required for `instruction::ConfidentialTransferFromPoolCallback` to implement `anchor_lang::AnchorSerialize`\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92munsatisfied trait bound introduced in this `derive` macro\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m626\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn confidential_transfer_from_pool_callback(\n    \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: required by a bound in `InstructionData`\n   \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/lib.rs:281:44\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m281\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait InstructionData: Discriminator + AnchorSerialize {\n    \u001b[1m\u001b[94m|\u001b[0m                                            \u001b[1m\u001b[92m^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mrequired by this bound in `InstructionData`\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the derive macro `AnchorSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorSerialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":21583,"byte_end":21623,"line_start":626,"line_end":626,"column_start":12,"column_end":52,"is_primary":true,"text":[{"text":"    pub fn confidential_transfer_from_pool_callback(","highlight_start":12,"highlight_end":52}],"label":"the trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::TransferResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there are multiple different versions of crate `borsh` in the dependency graph","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs","byte_start":1280,"byte_end":1304,"line_start":44,"line_end":44,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait BorshSerialize {","highlight_start":1,"highlight_end":25}],"label":"this is the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":177,"byte_end":188,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"use anchor_lang::prelude::*;","highlight_start":5,"highlight_end":16}],"label":"one version of crate `borsh` used here, as a dependency of crate `solana_pubkey`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1520,"byte_end":1545,"line_start":57,"line_end":57,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct TransferResult {","highlight_start":5,"highlight_end":30}],"label":"this type doesn't implement the required trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs","byte_start":1096,"byte_end":1129,"line_start":36,"line_end":36,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"pub trait BorshDeserialize: Sized {","highlight_start":1,"highlight_end":34}],"label":"this is the found trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `instruction::ConfidentialTransferFromPoolCallback` to implement `anchor_lang::AnchorSerialize`","code":null,"level":"note","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(AnchorSerialize)]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-derive-serde-0.31.1/src/lib.rs","byte_start":848,"byte_end":906,"line_start":30,"line_end":30,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"pub fn anchor_serialize(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":21583,"byte_end":21623,"line_start":626,"line_end":626,"column_start":12,"column_end":52,"is_primary":true,"text":[{"text":"    pub fn confidential_transfer_from_pool_callback(","highlight_start":12,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"required by a bound in `InstructionData`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/lib.rs","byte_start":10617,"byte_end":10632,"line_start":281,"line_end":281,"column_start":44,"column_end":59,"is_primary":true,"text":[{"text":"pub trait InstructionData: Discriminator + AnchorSerialize {","highlight_start":44,"highlight_end":59}],"label":"required by this bound in `InstructionData`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorSerialize` is not satisfied\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:626:12\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m626\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn confidential_transfer_from_pool_callback(\n    \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mthe trait `anchor_lang::AnchorSerialize` is not implemented for `encrypted_ixs::circuits::TransferResult`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: there are \u001b[1m\u001b[35mmultiple different versions\u001b[0m of crate `\u001b[1m\u001b[35mborsh\u001b[0m` in the dependency graph\n   \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.10.4/src/ser/mod.rs:44:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m44\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshSerialize {\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mthis is the required trait\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0mprograms/solcircle_arcium/src/lib.rs:7:5\n    \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m7\u001b[0m \u001b[1m\u001b[94m|\u001b[0m use anchor_lang::prelude::*;\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-----------\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m|\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94mone version of crate `borsh` used here, as a dependency of crate `solana_pubkey`\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:57:5\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct TransferResult {\n    \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mthis type doesn't implement the required trait\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m36\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait BorshDeserialize: Sized {\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m---------------------------------\u001b[0m \u001b[1m\u001b[94mthis is the found trait\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: you can use `\u001b[1m\u001b[35mcargo tree\u001b[0m` to explore your dependency tree\n\u001b[1m\u001b[92mnote\u001b[0m: required for `instruction::ConfidentialTransferFromPoolCallback` to implement `anchor_lang::AnchorSerialize`\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n    \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n    \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92munsatisfied trait bound introduced in this `derive` macro\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m626\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn confidential_transfer_from_pool_callback(\n    \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[1m\u001b[92mnote\u001b[0m: required by a bound in `InstructionData`\n   \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/lib.rs:281:44\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m281\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub trait InstructionData: Discriminator + AnchorSerialize {\n    \u001b[1m\u001b[94m|\u001b[0m                                            \u001b[1m\u001b[92m^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mrequired by this bound in `InstructionData`\u001b[0m\n    \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the derive macro `AnchorSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"use of deprecated method `anchor_lang::prelude::AccountInfo::<'a>::realloc`: Use AccountInfo::resize() instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[warn(deprecated)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: use of deprecated method `anchor_lang::prelude::AccountInfo::<'a>::realloc`: Use AccountInfo::resize() instead\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: `#[warn(deprecated)]` on by default\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"use of deprecated method `anchor_lang::prelude::AccountInfo::<'a>::realloc`: Use AccountInfo::resize() instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[warn(deprecated)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m: use of deprecated method `anchor_lang::prelude::AccountInfo::<'a>::realloc`: Use AccountInfo::resize() instead\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: `#[warn(deprecated)]` on by default\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this warning originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the function or associated item `deserialize` exists for struct `instruction::ConfidentialDepositCallback`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item cannot be called on `instruction::ConfidentialDepositCallback` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item `deserialize` not found for this struct because it doesn't satisfy `_: AnchorDeserialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1061,"byte_end":1085,"line_start":35,"line_end":35,"column_start":5,"column_end":29,"is_primary":false,"text":[{"text":"    pub struct DepositResult {","highlight_start":5,"highlight_end":29}],"label":"doesn't satisfy `_: AnchorDeserialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"trait bound `encrypted_ixs::circuits::DepositResult: anchor_lang::AnchorDeserialize` was not satisfied","code":null,"level":"note","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"items from traits can only be used if the trait is implemented and in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following traits define an item `deserialize`, perhaps you need to implement one of them:\ncandidate #1: `anchor_lang::AnchorDeserialize`\ncandidate #2: `anchor_spl::token_2022_extensions::spl_token_metadata_interface::borsh::BorshDeserialize`\ncandidate #3: `bincode::config::Options`\ncandidate #4: `serde_bytes::de::Deserialize`\ncandidate #5: `serde_core::de::Deserialize`\ncandidate #6: `serde_core::de::DeserializeSeed`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: the function or associated item `deserialize` exists for struct `instruction::ConfidentialDepositCallback`, but its trait bounds were not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91mfunction or associated item cannot be called on `instruction::ConfidentialDepositCallback` due to unsatisfied trait bounds\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94mfunction or associated item `deserialize` not found for this struct because it doesn't satisfy `_: AnchorDeserialize`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:35:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m35\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct DepositResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m------------------------\u001b[0m \u001b[1m\u001b[94mdoesn't satisfy `_: AnchorDeserialize`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: trait bound `encrypted_ixs::circuits::DepositResult: anchor_lang::AnchorDeserialize` was not satisfied\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: items from traits can only be used if the trait is implemented and in scope\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: the following traits define an item `deserialize`, perhaps you need to implement one of them:\n           candidate #1: `anchor_lang::AnchorDeserialize`\n           candidate #2: `anchor_spl::token_2022_extensions::spl_token_metadata_interface::borsh::BorshDeserialize`\n           candidate #3: `bincode::config::Options`\n           candidate #4: `serde_bytes::de::Deserialize`\n           candidate #5: `serde_core::de::Deserialize`\n           candidate #6: `serde_core::de::DeserializeSeed`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the function or associated item `deserialize` exists for struct `instruction::ConfidentialDepositCallback`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item cannot be called on `instruction::ConfidentialDepositCallback` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item `deserialize` not found for this struct because it doesn't satisfy `_: AnchorDeserialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1061,"byte_end":1085,"line_start":35,"line_end":35,"column_start":5,"column_end":29,"is_primary":false,"text":[{"text":"    pub struct DepositResult {","highlight_start":5,"highlight_end":29}],"label":"doesn't satisfy `_: AnchorDeserialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"trait bound `encrypted_ixs::circuits::DepositResult: anchor_lang::AnchorDeserialize` was not satisfied","code":null,"level":"note","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"items from traits can only be used if the trait is implemented and in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following traits define an item `deserialize`, perhaps you need to implement one of them:\ncandidate #1: `anchor_lang::AnchorDeserialize`\ncandidate #2: `anchor_spl::token_2022_extensions::spl_token_metadata_interface::borsh::BorshDeserialize`\ncandidate #3: `bincode::config::Options`\ncandidate #4: `serde_bytes::de::Deserialize`\ncandidate #5: `serde_core::de::Deserialize`\ncandidate #6: `serde_core::de::DeserializeSeed`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: the function or associated item `deserialize` exists for struct `instruction::ConfidentialDepositCallback`, but its trait bounds were not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91mfunction or associated item cannot be called on `instruction::ConfidentialDepositCallback` due to unsatisfied trait bounds\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94mfunction or associated item `deserialize` not found for this struct because it doesn't satisfy `_: AnchorDeserialize`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:35:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m35\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct DepositResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m------------------------\u001b[0m \u001b[1m\u001b[94mdoesn't satisfy `_: AnchorDeserialize`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: trait bound `encrypted_ixs::circuits::DepositResult: anchor_lang::AnchorDeserialize` was not satisfied\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: items from traits can only be used if the trait is implemented and in scope\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: the following traits define an item `deserialize`, perhaps you need to implement one of them:\n           candidate #1: `anchor_lang::AnchorDeserialize`\n           candidate #2: `anchor_spl::token_2022_extensions::spl_token_metadata_interface::borsh::BorshDeserialize`\n           candidate #3: `bincode::config::Options`\n           candidate #4: `serde_bytes::de::Deserialize`\n           candidate #5: `serde_core::de::Deserialize`\n           candidate #6: `serde_core::de::DeserializeSeed`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the function or associated item `deserialize` exists for struct `instruction::ConfidentialWithdrawCallback`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item cannot be called on `instruction::ConfidentialWithdrawCallback` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item `deserialize` not found for this struct because it doesn't satisfy `_: AnchorDeserialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1262,"byte_end":1287,"line_start":45,"line_end":45,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct WithdrawResult {","highlight_start":5,"highlight_end":30}],"label":"doesn't satisfy `_: AnchorDeserialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"trait bound `encrypted_ixs::circuits::WithdrawResult: anchor_lang::AnchorDeserialize` was not satisfied","code":null,"level":"note","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"items from traits can only be used if the trait is implemented and in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following traits define an item `deserialize`, perhaps you need to implement one of them:\ncandidate #1: `anchor_lang::AnchorDeserialize`\ncandidate #2: `anchor_spl::token_2022_extensions::spl_token_metadata_interface::borsh::BorshDeserialize`\ncandidate #3: `bincode::config::Options`\ncandidate #4: `serde_bytes::de::Deserialize`\ncandidate #5: `serde_core::de::Deserialize`\ncandidate #6: `serde_core::de::DeserializeSeed`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: the function or associated item `deserialize` exists for struct `instruction::ConfidentialWithdrawCallback`, but its trait bounds were not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91mfunction or associated item cannot be called on `instruction::ConfidentialWithdrawCallback` due to unsatisfied trait bounds\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94mfunction or associated item `deserialize` not found for this struct because it doesn't satisfy `_: AnchorDeserialize`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:45:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m45\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct WithdrawResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mdoesn't satisfy `_: AnchorDeserialize`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: trait bound `encrypted_ixs::circuits::WithdrawResult: anchor_lang::AnchorDeserialize` was not satisfied\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: items from traits can only be used if the trait is implemented and in scope\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: the following traits define an item `deserialize`, perhaps you need to implement one of them:\n           candidate #1: `anchor_lang::AnchorDeserialize`\n           candidate #2: `anchor_spl::token_2022_extensions::spl_token_metadata_interface::borsh::BorshDeserialize`\n           candidate #3: `bincode::config::Options`\n           candidate #4: `serde_bytes::de::Deserialize`\n           candidate #5: `serde_core::de::Deserialize`\n           candidate #6: `serde_core::de::DeserializeSeed`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the function or associated item `deserialize` exists for struct `instruction::ConfidentialWithdrawCallback`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item cannot be called on `instruction::ConfidentialWithdrawCallback` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item `deserialize` not found for this struct because it doesn't satisfy `_: AnchorDeserialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1262,"byte_end":1287,"line_start":45,"line_end":45,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct WithdrawResult {","highlight_start":5,"highlight_end":30}],"label":"doesn't satisfy `_: AnchorDeserialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"trait bound `encrypted_ixs::circuits::WithdrawResult: anchor_lang::AnchorDeserialize` was not satisfied","code":null,"level":"note","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"items from traits can only be used if the trait is implemented and in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following traits define an item `deserialize`, perhaps you need to implement one of them:\ncandidate #1: `anchor_lang::AnchorDeserialize`\ncandidate #2: `anchor_spl::token_2022_extensions::spl_token_metadata_interface::borsh::BorshDeserialize`\ncandidate #3: `bincode::config::Options`\ncandidate #4: `serde_bytes::de::Deserialize`\ncandidate #5: `serde_core::de::Deserialize`\ncandidate #6: `serde_core::de::DeserializeSeed`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: the function or associated item `deserialize` exists for struct `instruction::ConfidentialWithdrawCallback`, but its trait bounds were not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91mfunction or associated item cannot be called on `instruction::ConfidentialWithdrawCallback` due to unsatisfied trait bounds\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94mfunction or associated item `deserialize` not found for this struct because it doesn't satisfy `_: AnchorDeserialize`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:45:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m45\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct WithdrawResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mdoesn't satisfy `_: AnchorDeserialize`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: trait bound `encrypted_ixs::circuits::WithdrawResult: anchor_lang::AnchorDeserialize` was not satisfied\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: items from traits can only be used if the trait is implemented and in scope\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: the following traits define an item `deserialize`, perhaps you need to implement one of them:\n           candidate #1: `anchor_lang::AnchorDeserialize`\n           candidate #2: `anchor_spl::token_2022_extensions::spl_token_metadata_interface::borsh::BorshDeserialize`\n           candidate #3: `bincode::config::Options`\n           candidate #4: `serde_bytes::de::Deserialize`\n           candidate #5: `serde_core::de::Deserialize`\n           candidate #6: `serde_core::de::DeserializeSeed`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseToGroup<'_>: Bumps` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":16690,"byte_end":16716,"line_start":477,"line_end":477,"column_start":22,"column_end":48,"is_primary":true,"text":[{"text":"        ctx: Context<ConfidentialReleaseToGroup>,","highlight_start":22,"highlight_end":48}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `Bumps` is not implemented for `ConfidentialReleaseToGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":35413,"byte_end":35457,"line_start":1161,"line_end":1161,"column_start":1,"column_end":45,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseToGroup<'info> {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `Bumps`:\n  ConfidentialDeposit<'info>\n  ConfidentialDepositCallback<'info>\n  ConfidentialTransferCallback<'info>\n  ConfidentialTransferFromPoolCallback<'info>\n  ConfidentialWithdraw<'info>\n  ConfidentialWithdrawCallback<'info>\n  CreateConfidentialGroupPool<'info>\n  CreateGroupPool<'info>\nand 95 others","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseToGroup<'_>: Bumps` is not satisfied\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:477:22\n     \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m477\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx: Context<ConfidentialReleaseToGroup>,\n     \u001b[1m\u001b[94m|\u001b[0m                      \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: the trait `Bumps` is not implemented for `ConfidentialReleaseToGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1161:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1161\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseToGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `Bumps`:\n               ConfidentialDeposit<'info>\n               ConfidentialDepositCallback<'info>\n               ConfidentialTransferCallback<'info>\n               ConfidentialTransferFromPoolCallback<'info>\n               ConfidentialWithdraw<'info>\n               ConfidentialWithdrawCallback<'info>\n               CreateConfidentialGroupPool<'info>\n               CreateGroupPool<'info>\n             and 95 others\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseToGroup<'_>: Bumps` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Bumps` is not implemented for `ConfidentialReleaseToGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":35413,"byte_end":35457,"line_start":1161,"line_end":1161,"column_start":1,"column_end":45,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseToGroup<'info> {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `Bumps`:\n  ConfidentialDeposit<'info>\n  ConfidentialDepositCallback<'info>\n  ConfidentialTransferCallback<'info>\n  ConfidentialTransferFromPoolCallback<'info>\n  ConfidentialWithdraw<'info>\n  ConfidentialWithdrawCallback<'info>\n  CreateConfidentialGroupPool<'info>\n  CreateGroupPool<'info>\nand 95 others","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseToGroup<'_>: Bumps` is not satisfied\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: the trait `Bumps` is not implemented for `ConfidentialReleaseToGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1161:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1161\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseToGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `Bumps`:\n               ConfidentialDeposit<'info>\n               ConfidentialDepositCallback<'info>\n               ConfidentialTransferCallback<'info>\n               ConfidentialTransferFromPoolCallback<'info>\n               ConfidentialWithdraw<'info>\n               ConfidentialWithdrawCallback<'info>\n               CreateConfidentialGroupPool<'info>\n               CreateGroupPool<'info>\n             and 95 others\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseToGroup<'_>: Bumps` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":16690,"byte_end":16716,"line_start":477,"line_end":477,"column_start":22,"column_end":48,"is_primary":true,"text":[{"text":"        ctx: Context<ConfidentialReleaseToGroup>,","highlight_start":22,"highlight_end":48}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `Bumps` is not implemented for `ConfidentialReleaseToGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":35413,"byte_end":35457,"line_start":1161,"line_end":1161,"column_start":1,"column_end":45,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseToGroup<'info> {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `Bumps`:\n  ConfidentialDeposit<'info>\n  ConfidentialDepositCallback<'info>\n  ConfidentialTransferCallback<'info>\n  ConfidentialTransferFromPoolCallback<'info>\n  ConfidentialWithdraw<'info>\n  ConfidentialWithdrawCallback<'info>\n  CreateConfidentialGroupPool<'info>\n  CreateGroupPool<'info>\nand 95 others","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseToGroup<'_>: Bumps` is not satisfied\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:477:22\n     \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m477\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx: Context<ConfidentialReleaseToGroup>,\n     \u001b[1m\u001b[94m|\u001b[0m                      \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: the trait `Bumps` is not implemented for `ConfidentialReleaseToGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1161:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1161\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseToGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `Bumps`:\n               ConfidentialDeposit<'info>\n               ConfidentialDepositCallback<'info>\n               ConfidentialTransferCallback<'info>\n               ConfidentialTransferFromPoolCallback<'info>\n               ConfidentialWithdraw<'info>\n               ConfidentialWithdrawCallback<'info>\n               CreateConfidentialGroupPool<'info>\n               CreateGroupPool<'info>\n             and 95 others\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseToGroup<'_>: Bumps` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Bumps` is not implemented for `ConfidentialReleaseToGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":35413,"byte_end":35457,"line_start":1161,"line_end":1161,"column_start":1,"column_end":45,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseToGroup<'info> {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `Bumps`:\n  ConfidentialDeposit<'info>\n  ConfidentialDepositCallback<'info>\n  ConfidentialTransferCallback<'info>\n  ConfidentialTransferFromPoolCallback<'info>\n  ConfidentialWithdraw<'info>\n  ConfidentialWithdrawCallback<'info>\n  CreateConfidentialGroupPool<'info>\n  CreateGroupPool<'info>\nand 95 others","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseToGroup<'_>: Bumps` is not satisfied\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: the trait `Bumps` is not implemented for `ConfidentialReleaseToGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1161:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1161\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseToGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `Bumps`:\n               ConfidentialDeposit<'info>\n               ConfidentialDepositCallback<'info>\n               ConfidentialTransferCallback<'info>\n               ConfidentialTransferFromPoolCallback<'info>\n               ConfidentialWithdraw<'info>\n               ConfidentialWithdrawCallback<'info>\n               CreateConfidentialGroupPool<'info>\n               CreateGroupPool<'info>\n             and 95 others\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"no function or associated item named `try_accounts` found for struct `ConfidentialReleaseToGroup<'info>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item not found in `ConfidentialReleaseToGroup<'_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":35413,"byte_end":35457,"line_start":1161,"line_end":1161,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"pub struct ConfidentialReleaseToGroup<'info> {","highlight_start":1,"highlight_end":45}],"label":"function or associated item `try_accounts` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is implemented and in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `try_accounts`, perhaps you need to implement it:\ncandidate #1: `anchor_lang::Accounts`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: no function or associated item named `try_accounts` found for struct `ConfidentialReleaseToGroup<'info>` in the current scope\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mfunction or associated item not found in `ConfidentialReleaseToGroup<'_>`\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m1161\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseToGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m--------------------------------------------\u001b[0m \u001b[1m\u001b[94mfunction or associated item `try_accounts` not found for this struct\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: items from traits can only be used if the trait is implemented and in scope\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: the following trait defines an item `try_accounts`, perhaps you need to implement it:\n             candidate #1: `anchor_lang::Accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"no function or associated item named `try_accounts` found for struct `ConfidentialReleaseToGroup<'info>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item not found in `ConfidentialReleaseToGroup<'_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":35413,"byte_end":35457,"line_start":1161,"line_end":1161,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"pub struct ConfidentialReleaseToGroup<'info> {","highlight_start":1,"highlight_end":45}],"label":"function or associated item `try_accounts` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is implemented and in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `try_accounts`, perhaps you need to implement it:\ncandidate #1: `anchor_lang::Accounts`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: no function or associated item named `try_accounts` found for struct `ConfidentialReleaseToGroup<'info>` in the current scope\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mfunction or associated item not found in `ConfidentialReleaseToGroup<'_>`\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m1161\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseToGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m--------------------------------------------\u001b[0m \u001b[1m\u001b[94mfunction or associated item `try_accounts` not found for this struct\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: items from traits can only be used if the trait is implemented and in scope\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: the following trait defines an item `try_accounts`, perhaps you need to implement it:\n             candidate #1: `anchor_lang::Accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseToGroup<'_>: anchor_lang::Accounts<'_, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `anchor_lang::Accounts<'_, _>` is not implemented for `ConfidentialReleaseToGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":35413,"byte_end":35457,"line_start":1161,"line_end":1161,"column_start":1,"column_end":45,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseToGroup<'info> {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `anchor_lang::Accounts<'info, B>`:\n  `AccountLoader<'info, T>` implements `anchor_lang::Accounts<'info, B>`\n  `Box<T>` implements `anchor_lang::Accounts<'info, B>`\n  `ConfidentialDeposit<'info>` implements `anchor_lang::Accounts<'info, ConfidentialDepositBumps>`\n  `ConfidentialDepositCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialDepositCallbackBumps>`\n  `ConfidentialTransferCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialTransferCallbackBumps>`\n  `ConfidentialTransferFromPoolCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialTransferFromPoolCallbackBumps>`\n  `ConfidentialWithdraw<'info>` implements `anchor_lang::Accounts<'info, ConfidentialWithdrawBumps>`\n  `ConfidentialWithdrawCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialWithdrawCallbackBumps>`\nand 108 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `anchor_lang::context::Context::<'a, 'b, 'c, 'info, T>::new`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs","byte_start":1959,"byte_end":1962,"line_start":57,"line_end":57,"column_start":12,"column_end":15,"is_primary":false,"text":[{"text":"    pub fn new(","highlight_start":12,"highlight_end":15}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs","byte_start":1919,"byte_end":1944,"line_start":55,"line_end":55,"column_start":16,"column_end":41,"is_primary":true,"text":[{"text":"    T: Bumps + Accounts<'info, T::Bumps>,","highlight_start":16,"highlight_end":41}],"label":"required by this bound in `Context::<'a, 'b, 'c, 'info, T>::new`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseToGroup<'_>: anchor_lang::Accounts<'_, _>` is not satisfied\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: the trait `anchor_lang::Accounts<'_, _>` is not implemented for `ConfidentialReleaseToGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1161:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1161\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseToGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `anchor_lang::Accounts<'info, B>`:\n               `AccountLoader<'info, T>` implements `anchor_lang::Accounts<'info, B>`\n               `Box<T>` implements `anchor_lang::Accounts<'info, B>`\n               `ConfidentialDeposit<'info>` implements `anchor_lang::Accounts<'info, ConfidentialDepositBumps>`\n               `ConfidentialDepositCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialDepositCallbackBumps>`\n               `ConfidentialTransferCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialTransferCallbackBumps>`\n               `ConfidentialTransferFromPoolCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialTransferFromPoolCallbackBumps>`\n               `ConfidentialWithdraw<'info>` implements `anchor_lang::Accounts<'info, ConfidentialWithdrawBumps>`\n               `ConfidentialWithdrawCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialWithdrawCallbackBumps>`\n             and 108 others\n\u001b[1m\u001b[92mnote\u001b[0m: required by a bound in `anchor_lang::context::Context::<'a, 'b, 'c, 'info, T>::new`\n    \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs:55:16\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m55\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     T: Bumps + Accounts<'info, T::Bumps>,\n     \u001b[1m\u001b[94m|\u001b[0m                \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mrequired by this bound in `Context::<'a, 'b, 'c, 'info, T>::new`\u001b[0m\n  \u001b[1m\u001b[94m56\u001b[0m \u001b[1m\u001b[94m|\u001b[0m {\n  \u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn new(\n     \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[94m---\u001b[0m \u001b[1m\u001b[94mrequired by a bound in this associated function\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseToGroup<'_>: anchor_lang::Accounts<'_, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `anchor_lang::Accounts<'_, _>` is not implemented for `ConfidentialReleaseToGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":35413,"byte_end":35457,"line_start":1161,"line_end":1161,"column_start":1,"column_end":45,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseToGroup<'info> {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `anchor_lang::Accounts<'info, B>`:\n  `AccountLoader<'info, T>` implements `anchor_lang::Accounts<'info, B>`\n  `Box<T>` implements `anchor_lang::Accounts<'info, B>`\n  `ConfidentialDeposit<'info>` implements `anchor_lang::Accounts<'info, ConfidentialDepositBumps>`\n  `ConfidentialDepositCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialDepositCallbackBumps>`\n  `ConfidentialTransferCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialTransferCallbackBumps>`\n  `ConfidentialTransferFromPoolCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialTransferFromPoolCallbackBumps>`\n  `ConfidentialWithdraw<'info>` implements `anchor_lang::Accounts<'info, ConfidentialWithdrawBumps>`\n  `ConfidentialWithdrawCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialWithdrawCallbackBumps>`\nand 108 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `anchor_lang::context::Context::<'a, 'b, 'c, 'info, T>::new`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs","byte_start":1959,"byte_end":1962,"line_start":57,"line_end":57,"column_start":12,"column_end":15,"is_primary":false,"text":[{"text":"    pub fn new(","highlight_start":12,"highlight_end":15}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs","byte_start":1919,"byte_end":1944,"line_start":55,"line_end":55,"column_start":16,"column_end":41,"is_primary":true,"text":[{"text":"    T: Bumps + Accounts<'info, T::Bumps>,","highlight_start":16,"highlight_end":41}],"label":"required by this bound in `Context::<'a, 'b, 'c, 'info, T>::new`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseToGroup<'_>: anchor_lang::Accounts<'_, _>` is not satisfied\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: the trait `anchor_lang::Accounts<'_, _>` is not implemented for `ConfidentialReleaseToGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1161:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1161\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseToGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `anchor_lang::Accounts<'info, B>`:\n               `AccountLoader<'info, T>` implements `anchor_lang::Accounts<'info, B>`\n               `Box<T>` implements `anchor_lang::Accounts<'info, B>`\n               `ConfidentialDeposit<'info>` implements `anchor_lang::Accounts<'info, ConfidentialDepositBumps>`\n               `ConfidentialDepositCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialDepositCallbackBumps>`\n               `ConfidentialTransferCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialTransferCallbackBumps>`\n               `ConfidentialTransferFromPoolCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialTransferFromPoolCallbackBumps>`\n               `ConfidentialWithdraw<'info>` implements `anchor_lang::Accounts<'info, ConfidentialWithdrawBumps>`\n               `ConfidentialWithdrawCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialWithdrawCallbackBumps>`\n             and 108 others\n\u001b[1m\u001b[92mnote\u001b[0m: required by a bound in `anchor_lang::context::Context::<'a, 'b, 'c, 'info, T>::new`\n    \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs:55:16\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m55\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     T: Bumps + Accounts<'info, T::Bumps>,\n     \u001b[1m\u001b[94m|\u001b[0m                \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mrequired by this bound in `Context::<'a, 'b, 'c, 'info, T>::new`\u001b[0m\n  \u001b[1m\u001b[94m56\u001b[0m \u001b[1m\u001b[94m|\u001b[0m {\n  \u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn new(\n     \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[94m---\u001b[0m \u001b[1m\u001b[94mrequired by a bound in this associated function\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the function or associated item `deserialize` exists for struct `ConfidentialTransferToPoolCallback`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item cannot be called on `ConfidentialTransferToPoolCallback` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item `deserialize` not found for this struct because it doesn't satisfy `_: AnchorDeserialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1520,"byte_end":1545,"line_start":57,"line_end":57,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct TransferResult {","highlight_start":5,"highlight_end":30}],"label":"doesn't satisfy `_: AnchorDeserialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorDeserialize` was not satisfied","code":null,"level":"note","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"items from traits can only be used if the trait is implemented and in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following traits define an item `deserialize`, perhaps you need to implement one of them:\ncandidate #1: `anchor_lang::AnchorDeserialize`\ncandidate #2: `anchor_spl::token_2022_extensions::spl_token_metadata_interface::borsh::BorshDeserialize`\ncandidate #3: `bincode::config::Options`\ncandidate #4: `serde_bytes::de::Deserialize`\ncandidate #5: `serde_core::de::Deserialize`\ncandidate #6: `serde_core::de::DeserializeSeed`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: the function or associated item `deserialize` exists for struct `ConfidentialTransferToPoolCallback`, but its trait bounds were not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91mfunction or associated item cannot be called on `ConfidentialTransferToPoolCallback` due to unsatisfied trait bounds\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94mfunction or associated item `deserialize` not found for this struct because it doesn't satisfy `_: AnchorDeserialize`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:57:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct TransferResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mdoesn't satisfy `_: AnchorDeserialize`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorDeserialize` was not satisfied\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: items from traits can only be used if the trait is implemented and in scope\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: the following traits define an item `deserialize`, perhaps you need to implement one of them:\n           candidate #1: `anchor_lang::AnchorDeserialize`\n           candidate #2: `anchor_spl::token_2022_extensions::spl_token_metadata_interface::borsh::BorshDeserialize`\n           candidate #3: `bincode::config::Options`\n           candidate #4: `serde_bytes::de::Deserialize`\n           candidate #5: `serde_core::de::Deserialize`\n           candidate #6: `serde_core::de::DeserializeSeed`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the function or associated item `deserialize` exists for struct `ConfidentialTransferToPoolCallback`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item cannot be called on `ConfidentialTransferToPoolCallback` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item `deserialize` not found for this struct because it doesn't satisfy `_: AnchorDeserialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1520,"byte_end":1545,"line_start":57,"line_end":57,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct TransferResult {","highlight_start":5,"highlight_end":30}],"label":"doesn't satisfy `_: AnchorDeserialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorDeserialize` was not satisfied","code":null,"level":"note","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"items from traits can only be used if the trait is implemented and in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following traits define an item `deserialize`, perhaps you need to implement one of them:\ncandidate #1: `anchor_lang::AnchorDeserialize`\ncandidate #2: `anchor_spl::token_2022_extensions::spl_token_metadata_interface::borsh::BorshDeserialize`\ncandidate #3: `bincode::config::Options`\ncandidate #4: `serde_bytes::de::Deserialize`\ncandidate #5: `serde_core::de::Deserialize`\ncandidate #6: `serde_core::de::DeserializeSeed`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: the function or associated item `deserialize` exists for struct `ConfidentialTransferToPoolCallback`, but its trait bounds were not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91mfunction or associated item cannot be called on `ConfidentialTransferToPoolCallback` due to unsatisfied trait bounds\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94mfunction or associated item `deserialize` not found for this struct because it doesn't satisfy `_: AnchorDeserialize`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:57:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct TransferResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mdoesn't satisfy `_: AnchorDeserialize`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorDeserialize` was not satisfied\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: items from traits can only be used if the trait is implemented and in scope\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: the following traits define an item `deserialize`, perhaps you need to implement one of them:\n           candidate #1: `anchor_lang::AnchorDeserialize`\n           candidate #2: `anchor_spl::token_2022_extensions::spl_token_metadata_interface::borsh::BorshDeserialize`\n           candidate #3: `bincode::config::Options`\n           candidate #4: `serde_bytes::de::Deserialize`\n           candidate #5: `serde_core::de::Deserialize`\n           candidate #6: `serde_core::de::DeserializeSeed`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseFromGroup<'_>: Bumps` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":20140,"byte_end":20168,"line_start":578,"line_end":578,"column_start":22,"column_end":50,"is_primary":true,"text":[{"text":"        ctx: Context<ConfidentialReleaseFromGroup>,","highlight_start":22,"highlight_end":50}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `Bumps` is not implemented for `ConfidentialReleaseFromGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":38002,"byte_end":38048,"line_start":1255,"line_end":1255,"column_start":1,"column_end":47,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseFromGroup<'info> {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `Bumps`:\n  ConfidentialDeposit<'info>\n  ConfidentialDepositCallback<'info>\n  ConfidentialTransferCallback<'info>\n  ConfidentialTransferFromPoolCallback<'info>\n  ConfidentialWithdraw<'info>\n  ConfidentialWithdrawCallback<'info>\n  CreateConfidentialGroupPool<'info>\n  CreateGroupPool<'info>\nand 95 others","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseFromGroup<'_>: Bumps` is not satisfied\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:578:22\n     \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m578\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx: Context<ConfidentialReleaseFromGroup>,\n     \u001b[1m\u001b[94m|\u001b[0m                      \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: the trait `Bumps` is not implemented for `ConfidentialReleaseFromGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1255:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1255\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseFromGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `Bumps`:\n               ConfidentialDeposit<'info>\n               ConfidentialDepositCallback<'info>\n               ConfidentialTransferCallback<'info>\n               ConfidentialTransferFromPoolCallback<'info>\n               ConfidentialWithdraw<'info>\n               ConfidentialWithdrawCallback<'info>\n               CreateConfidentialGroupPool<'info>\n               CreateGroupPool<'info>\n             and 95 others\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseFromGroup<'_>: Bumps` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":20140,"byte_end":20168,"line_start":578,"line_end":578,"column_start":22,"column_end":50,"is_primary":true,"text":[{"text":"        ctx: Context<ConfidentialReleaseFromGroup>,","highlight_start":22,"highlight_end":50}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `Bumps` is not implemented for `ConfidentialReleaseFromGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":38002,"byte_end":38048,"line_start":1255,"line_end":1255,"column_start":1,"column_end":47,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseFromGroup<'info> {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `Bumps`:\n  ConfidentialDeposit<'info>\n  ConfidentialDepositCallback<'info>\n  ConfidentialTransferCallback<'info>\n  ConfidentialTransferFromPoolCallback<'info>\n  ConfidentialWithdraw<'info>\n  ConfidentialWithdrawCallback<'info>\n  CreateConfidentialGroupPool<'info>\n  CreateGroupPool<'info>\nand 95 others","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseFromGroup<'_>: Bumps` is not satisfied\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:578:22\n     \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m578\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx: Context<ConfidentialReleaseFromGroup>,\n     \u001b[1m\u001b[94m|\u001b[0m                      \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: the trait `Bumps` is not implemented for `ConfidentialReleaseFromGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1255:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1255\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseFromGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `Bumps`:\n               ConfidentialDeposit<'info>\n               ConfidentialDepositCallback<'info>\n               ConfidentialTransferCallback<'info>\n               ConfidentialTransferFromPoolCallback<'info>\n               ConfidentialWithdraw<'info>\n               ConfidentialWithdrawCallback<'info>\n               CreateConfidentialGroupPool<'info>\n               CreateGroupPool<'info>\n             and 95 others\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseFromGroup<'_>: Bumps` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Bumps` is not implemented for `ConfidentialReleaseFromGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":38002,"byte_end":38048,"line_start":1255,"line_end":1255,"column_start":1,"column_end":47,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseFromGroup<'info> {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `Bumps`:\n  ConfidentialDeposit<'info>\n  ConfidentialDepositCallback<'info>\n  ConfidentialTransferCallback<'info>\n  ConfidentialTransferFromPoolCallback<'info>\n  ConfidentialWithdraw<'info>\n  ConfidentialWithdrawCallback<'info>\n  CreateConfidentialGroupPool<'info>\n  CreateGroupPool<'info>\nand 95 others","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseFromGroup<'_>: Bumps` is not satisfied\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: the trait `Bumps` is not implemented for `ConfidentialReleaseFromGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1255:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1255\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseFromGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `Bumps`:\n               ConfidentialDeposit<'info>\n               ConfidentialDepositCallback<'info>\n               ConfidentialTransferCallback<'info>\n               ConfidentialTransferFromPoolCallback<'info>\n               ConfidentialWithdraw<'info>\n               ConfidentialWithdrawCallback<'info>\n               CreateConfidentialGroupPool<'info>\n               CreateGroupPool<'info>\n             and 95 others\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseFromGroup<'_>: Bumps` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Bumps` is not implemented for `ConfidentialReleaseFromGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":38002,"byte_end":38048,"line_start":1255,"line_end":1255,"column_start":1,"column_end":47,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseFromGroup<'info> {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `Bumps`:\n  ConfidentialDeposit<'info>\n  ConfidentialDepositCallback<'info>\n  ConfidentialTransferCallback<'info>\n  ConfidentialTransferFromPoolCallback<'info>\n  ConfidentialWithdraw<'info>\n  ConfidentialWithdrawCallback<'info>\n  CreateConfidentialGroupPool<'info>\n  CreateGroupPool<'info>\nand 95 others","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseFromGroup<'_>: Bumps` is not satisfied\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: the trait `Bumps` is not implemented for `ConfidentialReleaseFromGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1255:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1255\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseFromGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `Bumps`:\n               ConfidentialDeposit<'info>\n               ConfidentialDepositCallback<'info>\n               ConfidentialTransferCallback<'info>\n               ConfidentialTransferFromPoolCallback<'info>\n               ConfidentialWithdraw<'info>\n               ConfidentialWithdrawCallback<'info>\n               CreateConfidentialGroupPool<'info>\n               CreateGroupPool<'info>\n             and 95 others\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"no function or associated item named `try_accounts` found for struct `ConfidentialReleaseFromGroup<'info>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item not found in `ConfidentialReleaseFromGroup<'_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":38002,"byte_end":38048,"line_start":1255,"line_end":1255,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"pub struct ConfidentialReleaseFromGroup<'info> {","highlight_start":1,"highlight_end":47}],"label":"function or associated item `try_accounts` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is implemented and in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `try_accounts`, perhaps you need to implement it:\ncandidate #1: `anchor_lang::Accounts`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: no function or associated item named `try_accounts` found for struct `ConfidentialReleaseFromGroup<'info>` in the current scope\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mfunction or associated item not found in `ConfidentialReleaseFromGroup<'_>`\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m1255\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseFromGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m----------------------------------------------\u001b[0m \u001b[1m\u001b[94mfunction or associated item `try_accounts` not found for this struct\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: items from traits can only be used if the trait is implemented and in scope\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: the following trait defines an item `try_accounts`, perhaps you need to implement it:\n             candidate #1: `anchor_lang::Accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"no function or associated item named `try_accounts` found for struct `ConfidentialReleaseFromGroup<'info>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item not found in `ConfidentialReleaseFromGroup<'_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":38002,"byte_end":38048,"line_start":1255,"line_end":1255,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"pub struct ConfidentialReleaseFromGroup<'info> {","highlight_start":1,"highlight_end":47}],"label":"function or associated item `try_accounts` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is implemented and in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `try_accounts`, perhaps you need to implement it:\ncandidate #1: `anchor_lang::Accounts`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: no function or associated item named `try_accounts` found for struct `ConfidentialReleaseFromGroup<'info>` in the current scope\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mfunction or associated item not found in `ConfidentialReleaseFromGroup<'_>`\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m1255\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseFromGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m----------------------------------------------\u001b[0m \u001b[1m\u001b[94mfunction or associated item `try_accounts` not found for this struct\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: items from traits can only be used if the trait is implemented and in scope\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: the following trait defines an item `try_accounts`, perhaps you need to implement it:\n             candidate #1: `anchor_lang::Accounts`\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseFromGroup<'_>: anchor_lang::Accounts<'_, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `anchor_lang::Accounts<'_, _>` is not implemented for `ConfidentialReleaseFromGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":38002,"byte_end":38048,"line_start":1255,"line_end":1255,"column_start":1,"column_end":47,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseFromGroup<'info> {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `anchor_lang::Accounts<'info, B>`:\n  `AccountLoader<'info, T>` implements `anchor_lang::Accounts<'info, B>`\n  `Box<T>` implements `anchor_lang::Accounts<'info, B>`\n  `ConfidentialDeposit<'info>` implements `anchor_lang::Accounts<'info, ConfidentialDepositBumps>`\n  `ConfidentialDepositCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialDepositCallbackBumps>`\n  `ConfidentialTransferCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialTransferCallbackBumps>`\n  `ConfidentialTransferFromPoolCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialTransferFromPoolCallbackBumps>`\n  `ConfidentialWithdraw<'info>` implements `anchor_lang::Accounts<'info, ConfidentialWithdrawBumps>`\n  `ConfidentialWithdrawCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialWithdrawCallbackBumps>`\nand 108 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `anchor_lang::context::Context::<'a, 'b, 'c, 'info, T>::new`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs","byte_start":1959,"byte_end":1962,"line_start":57,"line_end":57,"column_start":12,"column_end":15,"is_primary":false,"text":[{"text":"    pub fn new(","highlight_start":12,"highlight_end":15}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs","byte_start":1919,"byte_end":1944,"line_start":55,"line_end":55,"column_start":16,"column_end":41,"is_primary":true,"text":[{"text":"    T: Bumps + Accounts<'info, T::Bumps>,","highlight_start":16,"highlight_end":41}],"label":"required by this bound in `Context::<'a, 'b, 'c, 'info, T>::new`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseFromGroup<'_>: anchor_lang::Accounts<'_, _>` is not satisfied\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: the trait `anchor_lang::Accounts<'_, _>` is not implemented for `ConfidentialReleaseFromGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1255:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1255\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseFromGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `anchor_lang::Accounts<'info, B>`:\n               `AccountLoader<'info, T>` implements `anchor_lang::Accounts<'info, B>`\n               `Box<T>` implements `anchor_lang::Accounts<'info, B>`\n               `ConfidentialDeposit<'info>` implements `anchor_lang::Accounts<'info, ConfidentialDepositBumps>`\n               `ConfidentialDepositCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialDepositCallbackBumps>`\n               `ConfidentialTransferCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialTransferCallbackBumps>`\n               `ConfidentialTransferFromPoolCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialTransferFromPoolCallbackBumps>`\n               `ConfidentialWithdraw<'info>` implements `anchor_lang::Accounts<'info, ConfidentialWithdrawBumps>`\n               `ConfidentialWithdrawCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialWithdrawCallbackBumps>`\n             and 108 others\n\u001b[1m\u001b[92mnote\u001b[0m: required by a bound in `anchor_lang::context::Context::<'a, 'b, 'c, 'info, T>::new`\n    \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs:55:16\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m55\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     T: Bumps + Accounts<'info, T::Bumps>,\n     \u001b[1m\u001b[94m|\u001b[0m                \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mrequired by this bound in `Context::<'a, 'b, 'c, 'info, T>::new`\u001b[0m\n  \u001b[1m\u001b[94m56\u001b[0m \u001b[1m\u001b[94m|\u001b[0m {\n  \u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn new(\n     \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[94m---\u001b[0m \u001b[1m\u001b[94mrequired by a bound in this associated function\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseFromGroup<'_>: anchor_lang::Accounts<'_, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `anchor_lang::Accounts<'_, _>` is not implemented for `ConfidentialReleaseFromGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":38002,"byte_end":38048,"line_start":1255,"line_end":1255,"column_start":1,"column_end":47,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseFromGroup<'info> {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `anchor_lang::Accounts<'info, B>`:\n  `AccountLoader<'info, T>` implements `anchor_lang::Accounts<'info, B>`\n  `Box<T>` implements `anchor_lang::Accounts<'info, B>`\n  `ConfidentialDeposit<'info>` implements `anchor_lang::Accounts<'info, ConfidentialDepositBumps>`\n  `ConfidentialDepositCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialDepositCallbackBumps>`\n  `ConfidentialTransferCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialTransferCallbackBumps>`\n  `ConfidentialTransferFromPoolCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialTransferFromPoolCallbackBumps>`\n  `ConfidentialWithdraw<'info>` implements `anchor_lang::Accounts<'info, ConfidentialWithdrawBumps>`\n  `ConfidentialWithdrawCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialWithdrawCallbackBumps>`\nand 108 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `anchor_lang::context::Context::<'a, 'b, 'c, 'info, T>::new`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs","byte_start":1959,"byte_end":1962,"line_start":57,"line_end":57,"column_start":12,"column_end":15,"is_primary":false,"text":[{"text":"    pub fn new(","highlight_start":12,"highlight_end":15}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs","byte_start":1919,"byte_end":1944,"line_start":55,"line_end":55,"column_start":16,"column_end":41,"is_primary":true,"text":[{"text":"    T: Bumps + Accounts<'info, T::Bumps>,","highlight_start":16,"highlight_end":41}],"label":"required by this bound in `Context::<'a, 'b, 'c, 'info, T>::new`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseFromGroup<'_>: anchor_lang::Accounts<'_, _>` is not satisfied\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: the trait `anchor_lang::Accounts<'_, _>` is not implemented for `ConfidentialReleaseFromGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1255:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1255\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseFromGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `anchor_lang::Accounts<'info, B>`:\n               `AccountLoader<'info, T>` implements `anchor_lang::Accounts<'info, B>`\n               `Box<T>` implements `anchor_lang::Accounts<'info, B>`\n               `ConfidentialDeposit<'info>` implements `anchor_lang::Accounts<'info, ConfidentialDepositBumps>`\n               `ConfidentialDepositCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialDepositCallbackBumps>`\n               `ConfidentialTransferCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialTransferCallbackBumps>`\n               `ConfidentialTransferFromPoolCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialTransferFromPoolCallbackBumps>`\n               `ConfidentialWithdraw<'info>` implements `anchor_lang::Accounts<'info, ConfidentialWithdrawBumps>`\n               `ConfidentialWithdrawCallback<'info>` implements `anchor_lang::Accounts<'info, ConfidentialWithdrawCallbackBumps>`\n             and 108 others\n\u001b[1m\u001b[92mnote\u001b[0m: required by a bound in `anchor_lang::context::Context::<'a, 'b, 'c, 'info, T>::new`\n    \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs:55:16\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m55\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     T: Bumps + Accounts<'info, T::Bumps>,\n     \u001b[1m\u001b[94m|\u001b[0m                \u001b[1m\u001b[92m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[92mrequired by this bound in `Context::<'a, 'b, 'c, 'info, T>::new`\u001b[0m\n  \u001b[1m\u001b[94m56\u001b[0m \u001b[1m\u001b[94m|\u001b[0m {\n  \u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub fn new(\n     \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[94m---\u001b[0m \u001b[1m\u001b[94mrequired by a bound in this associated function\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the function or associated item `deserialize` exists for struct `instruction::ConfidentialTransferFromPoolCallback`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item cannot be called on `instruction::ConfidentialTransferFromPoolCallback` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item `deserialize` not found for this struct because it doesn't satisfy `_: AnchorDeserialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1520,"byte_end":1545,"line_start":57,"line_end":57,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct TransferResult {","highlight_start":5,"highlight_end":30}],"label":"doesn't satisfy `_: AnchorDeserialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorDeserialize` was not satisfied","code":null,"level":"note","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"items from traits can only be used if the trait is implemented and in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following traits define an item `deserialize`, perhaps you need to implement one of them:\ncandidate #1: `anchor_lang::AnchorDeserialize`\ncandidate #2: `anchor_spl::token_2022_extensions::spl_token_metadata_interface::borsh::BorshDeserialize`\ncandidate #3: `bincode::config::Options`\ncandidate #4: `serde_bytes::de::Deserialize`\ncandidate #5: `serde_core::de::Deserialize`\ncandidate #6: `serde_core::de::DeserializeSeed`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: the function or associated item `deserialize` exists for struct `instruction::ConfidentialTransferFromPoolCallback`, but its trait bounds were not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91mfunction or associated item cannot be called on `instruction::ConfidentialTransferFromPoolCallback` due to unsatisfied trait bounds\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94mfunction or associated item `deserialize` not found for this struct because it doesn't satisfy `_: AnchorDeserialize`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:57:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct TransferResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mdoesn't satisfy `_: AnchorDeserialize`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorDeserialize` was not satisfied\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: items from traits can only be used if the trait is implemented and in scope\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: the following traits define an item `deserialize`, perhaps you need to implement one of them:\n           candidate #1: `anchor_lang::AnchorDeserialize`\n           candidate #2: `anchor_spl::token_2022_extensions::spl_token_metadata_interface::borsh::BorshDeserialize`\n           candidate #3: `bincode::config::Options`\n           candidate #4: `serde_bytes::de::Deserialize`\n           candidate #5: `serde_core::de::Deserialize`\n           candidate #6: `serde_core::de::DeserializeSeed`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the function or associated item `deserialize` exists for struct `instruction::ConfidentialTransferFromPoolCallback`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item cannot be called on `instruction::ConfidentialTransferFromPoolCallback` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":"function or associated item `deserialize` not found for this struct because it doesn't satisfy `_: AnchorDeserialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":848,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"#[arcium_program]","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[program]","def_site_span":{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-attribute-program-0.31.1/src/lib.rs","byte_start":293,"byte_end":409,"line_start":12,"line_end":15,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn program(","highlight_start":1,"highlight_end":16},{"text":"    _args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs","byte_start":1520,"byte_end":1545,"line_start":57,"line_end":57,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub struct TransferResult {","highlight_start":5,"highlight_end":30}],"label":"doesn't satisfy `_: AnchorDeserialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorDeserialize` was not satisfied","code":null,"level":"note","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"items from traits can only be used if the trait is implemented and in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following traits define an item `deserialize`, perhaps you need to implement one of them:\ncandidate #1: `anchor_lang::AnchorDeserialize`\ncandidate #2: `anchor_spl::token_2022_extensions::spl_token_metadata_interface::borsh::BorshDeserialize`\ncandidate #3: `bincode::config::Options`\ncandidate #4: `serde_bytes::de::Deserialize`\ncandidate #5: `serde_core::de::Deserialize`\ncandidate #6: `serde_core::de::DeserializeSeed`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: the function or associated item `deserialize` exists for struct `instruction::ConfidentialTransferFromPoolCallback`, but its trait bounds were not satisfied\u001b[0m\n  \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:26:1\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m26\u001b[0m \u001b[1m\u001b[94m|\u001b[0m #[arcium_program]\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[91mfunction or associated item cannot be called on `instruction::ConfidentialTransferFromPoolCallback` due to unsatisfied trait bounds\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[94mfunction or associated item `deserialize` not found for this struct because it doesn't satisfy `_: AnchorDeserialize`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m::: \u001b[0m/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/encrypted-ixs/src/lib.rs:57:5\n   \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m57\u001b[0m \u001b[1m\u001b[94m|\u001b[0m     pub struct TransferResult {\n   \u001b[1m\u001b[94m|\u001b[0m     \u001b[1m\u001b[94m-------------------------\u001b[0m \u001b[1m\u001b[94mdoesn't satisfy `_: AnchorDeserialize`\u001b[0m\n   \u001b[1m\u001b[94m|\u001b[0m\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: trait bound `encrypted_ixs::circuits::TransferResult: anchor_lang::AnchorDeserialize` was not satisfied\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: items from traits can only be used if the trait is implemented and in scope\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: the following traits define an item `deserialize`, perhaps you need to implement one of them:\n           candidate #1: `anchor_lang::AnchorDeserialize`\n           candidate #2: `anchor_spl::token_2022_extensions::spl_token_metadata_interface::borsh::BorshDeserialize`\n           candidate #3: `bincode::config::Options`\n           candidate #4: `serde_bytes::de::Deserialize`\n           candidate #5: `serde_core::de::Deserialize`\n           candidate #6: `serde_core::de::DeserializeSeed`\n   \u001b[1m\u001b[94m= \u001b[0m\u001b[1mnote\u001b[0m: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"no method named `invoke_mpc` found for struct `anchor_lang::prelude::Account<'_, MpcRequest>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":11524,"byte_end":11549,"line_start":330,"line_end":330,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        ctx.accounts.mpc_request.invoke_mpc(","highlight_start":9,"highlight_end":34}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":11549,"byte_end":11559,"line_start":330,"line_end":330,"column_start":34,"column_end":44,"is_primary":true,"text":[{"text":"        ctx.accounts.mpc_request.invoke_mpc(","highlight_start":34,"highlight_end":44}],"label":"method not found in `anchor_lang::prelude::Account<'_, MpcRequest>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: no method named `invoke_mpc` found for struct `anchor_lang::prelude::Account<'_, MpcRequest>` in the current scope\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:330:34\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m330\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx.accounts.mpc_request.invoke_mpc(\n    \u001b[1m\u001b[94m|\u001b[0m         \u001b[1m\u001b[94m-------------------------\u001b[0m\u001b[1m\u001b[91m^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mmethod not found in `anchor_lang::prelude::Account<'_, MpcRequest>`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"no method named `invoke_mpc` found for struct `anchor_lang::prelude::Account<'_, MpcRequest>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":11524,"byte_end":11549,"line_start":330,"line_end":330,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        ctx.accounts.mpc_request.invoke_mpc(","highlight_start":9,"highlight_end":34}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":11549,"byte_end":11559,"line_start":330,"line_end":330,"column_start":34,"column_end":44,"is_primary":true,"text":[{"text":"        ctx.accounts.mpc_request.invoke_mpc(","highlight_start":34,"highlight_end":44}],"label":"method not found in `anchor_lang::prelude::Account<'_, MpcRequest>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: no method named `invoke_mpc` found for struct `anchor_lang::prelude::Account<'_, MpcRequest>` in the current scope\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:330:34\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m330\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx.accounts.mpc_request.invoke_mpc(\n    \u001b[1m\u001b[94m|\u001b[0m         \u001b[1m\u001b[94m-------------------------\u001b[0m\u001b[1m\u001b[91m^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mmethod not found in `anchor_lang::prelude::Account<'_, MpcRequest>`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"no method named `invoke_mpc` found for struct `anchor_lang::prelude::Account<'_, MpcRequest>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":13721,"byte_end":13746,"line_start":396,"line_end":396,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        ctx.accounts.mpc_request.invoke_mpc(","highlight_start":9,"highlight_end":34}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":13746,"byte_end":13756,"line_start":396,"line_end":396,"column_start":34,"column_end":44,"is_primary":true,"text":[{"text":"        ctx.accounts.mpc_request.invoke_mpc(","highlight_start":34,"highlight_end":44}],"label":"method not found in `anchor_lang::prelude::Account<'_, MpcRequest>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: no method named `invoke_mpc` found for struct `anchor_lang::prelude::Account<'_, MpcRequest>` in the current scope\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:396:34\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m396\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx.accounts.mpc_request.invoke_mpc(\n    \u001b[1m\u001b[94m|\u001b[0m         \u001b[1m\u001b[94m-------------------------\u001b[0m\u001b[1m\u001b[91m^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mmethod not found in `anchor_lang::prelude::Account<'_, MpcRequest>`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"no method named `invoke_mpc` found for struct `anchor_lang::prelude::Account<'_, MpcRequest>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":13721,"byte_end":13746,"line_start":396,"line_end":396,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        ctx.accounts.mpc_request.invoke_mpc(","highlight_start":9,"highlight_end":34}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":13746,"byte_end":13756,"line_start":396,"line_end":396,"column_start":34,"column_end":44,"is_primary":true,"text":[{"text":"        ctx.accounts.mpc_request.invoke_mpc(","highlight_start":34,"highlight_end":44}],"label":"method not found in `anchor_lang::prelude::Account<'_, MpcRequest>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: no method named `invoke_mpc` found for struct `anchor_lang::prelude::Account<'_, MpcRequest>` in the current scope\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:396:34\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m396\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx.accounts.mpc_request.invoke_mpc(\n    \u001b[1m\u001b[94m|\u001b[0m         \u001b[1m\u001b[94m-------------------------\u001b[0m\u001b[1m\u001b[91m^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mmethod not found in `anchor_lang::prelude::Account<'_, MpcRequest>`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseToGroup<'_>: Bumps` is not satisfied in `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseToGroup<'_>>`","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":16682,"byte_end":16717,"line_start":477,"line_end":477,"column_start":14,"column_end":49,"is_primary":true,"text":[{"text":"        ctx: Context<ConfidentialReleaseToGroup>,","highlight_start":14,"highlight_end":49}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"within `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseToGroup<'_>>`, the trait `Bumps` is not implemented for `ConfidentialReleaseToGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":35413,"byte_end":35457,"line_start":1161,"line_end":1161,"column_start":1,"column_end":45,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseToGroup<'info> {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `Bumps`:\n  ConfidentialDeposit<'info>\n  ConfidentialDepositCallback<'info>\n  ConfidentialTransferCallback<'info>\n  ConfidentialTransferFromPoolCallback<'info>\n  ConfidentialWithdraw<'info>\n  ConfidentialWithdrawCallback<'info>\n  CreateConfidentialGroupPool<'info>\n  CreateGroupPool<'info>\nand 95 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required because it appears within the type `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseToGroup<'_>>`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs","byte_start":796,"byte_end":803,"line_start":24,"line_end":24,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"pub struct Context<'a, 'b, 'c, 'info, T: Bumps> {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"unsized fn params are gated as an unstable feature","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"function arguments must have a statically known size, borrowed types always have a known size","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":16682,"byte_end":16682,"line_start":477,"line_end":477,"column_start":14,"column_end":14,"is_primary":true,"text":[{"text":"        ctx: Context<ConfidentialReleaseToGroup>,","highlight_start":14,"highlight_end":14}],"label":null,"suggested_replacement":"&","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseToGroup<'_>: Bumps` is not satisfied in `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseToGroup<'_>>`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:477:14\n     \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m477\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx: Context<ConfidentialReleaseToGroup>,\n     \u001b[1m\u001b[94m|\u001b[0m              \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: within `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseToGroup<'_>>`, the trait `Bumps` is not implemented for `ConfidentialReleaseToGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1161:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1161\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseToGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `Bumps`:\n               ConfidentialDeposit<'info>\n               ConfidentialDepositCallback<'info>\n               ConfidentialTransferCallback<'info>\n               ConfidentialTransferFromPoolCallback<'info>\n               ConfidentialWithdraw<'info>\n               ConfidentialWithdrawCallback<'info>\n               CreateConfidentialGroupPool<'info>\n               CreateGroupPool<'info>\n             and 95 others\n\u001b[1m\u001b[92mnote\u001b[0m: required because it appears within the type `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseToGroup<'_>>`\n    \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs:24:12\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m24\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct Context<'a, 'b, 'c, 'info, T: Bumps> {\n     \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[92m^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: unsized fn params are gated as an unstable feature\n\u001b[1m\u001b[96mhelp\u001b[0m: function arguments must have a statically known size, borrowed types always have a known size\n     \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m477\u001b[0m \u001b[1m\u001b[94m| \u001b[0m        ctx: \u001b[92m&\u001b[0mContext<ConfidentialReleaseToGroup>,\n     \u001b[1m\u001b[94m|\u001b[0m              \u001b[92m+\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseToGroup<'_>: Bumps` is not satisfied in `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseToGroup<'_>>`","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":16682,"byte_end":16717,"line_start":477,"line_end":477,"column_start":14,"column_end":49,"is_primary":true,"text":[{"text":"        ctx: Context<ConfidentialReleaseToGroup>,","highlight_start":14,"highlight_end":49}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"within `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseToGroup<'_>>`, the trait `Bumps` is not implemented for `ConfidentialReleaseToGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":35413,"byte_end":35457,"line_start":1161,"line_end":1161,"column_start":1,"column_end":45,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseToGroup<'info> {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `Bumps`:\n  ConfidentialDeposit<'info>\n  ConfidentialDepositCallback<'info>\n  ConfidentialTransferCallback<'info>\n  ConfidentialTransferFromPoolCallback<'info>\n  ConfidentialWithdraw<'info>\n  ConfidentialWithdrawCallback<'info>\n  CreateConfidentialGroupPool<'info>\n  CreateGroupPool<'info>\nand 95 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required because it appears within the type `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseToGroup<'_>>`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs","byte_start":796,"byte_end":803,"line_start":24,"line_end":24,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"pub struct Context<'a, 'b, 'c, 'info, T: Bumps> {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"unsized fn params are gated as an unstable feature","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"function arguments must have a statically known size, borrowed types always have a known size","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":16682,"byte_end":16682,"line_start":477,"line_end":477,"column_start":14,"column_end":14,"is_primary":true,"text":[{"text":"        ctx: Context<ConfidentialReleaseToGroup>,","highlight_start":14,"highlight_end":14}],"label":null,"suggested_replacement":"&","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseToGroup<'_>: Bumps` is not satisfied in `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseToGroup<'_>>`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:477:14\n     \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m477\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx: Context<ConfidentialReleaseToGroup>,\n     \u001b[1m\u001b[94m|\u001b[0m              \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: within `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseToGroup<'_>>`, the trait `Bumps` is not implemented for `ConfidentialReleaseToGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1161:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1161\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseToGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `Bumps`:\n               ConfidentialDeposit<'info>\n               ConfidentialDepositCallback<'info>\n               ConfidentialTransferCallback<'info>\n               ConfidentialTransferFromPoolCallback<'info>\n               ConfidentialWithdraw<'info>\n               ConfidentialWithdrawCallback<'info>\n               CreateConfidentialGroupPool<'info>\n               CreateGroupPool<'info>\n             and 95 others\n\u001b[1m\u001b[92mnote\u001b[0m: required because it appears within the type `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseToGroup<'_>>`\n    \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs:24:12\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m24\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct Context<'a, 'b, 'c, 'info, T: Bumps> {\n     \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[92m^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: unsized fn params are gated as an unstable feature\n\u001b[1m\u001b[96mhelp\u001b[0m: function arguments must have a statically known size, borrowed types always have a known size\n     \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m477\u001b[0m \u001b[1m\u001b[94m| \u001b[0m        ctx: \u001b[92m&\u001b[0mContext<ConfidentialReleaseToGroup>,\n     \u001b[1m\u001b[94m|\u001b[0m              \u001b[92m+\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"no method named `invoke_mpc` found for struct `anchor_lang::prelude::Account<'_, MpcRequest>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":17817,"byte_end":17842,"line_start":512,"line_end":512,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        ctx.accounts.mpc_request.invoke_mpc(","highlight_start":9,"highlight_end":34}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":17842,"byte_end":17852,"line_start":512,"line_end":512,"column_start":34,"column_end":44,"is_primary":true,"text":[{"text":"        ctx.accounts.mpc_request.invoke_mpc(","highlight_start":34,"highlight_end":44}],"label":"method not found in `anchor_lang::prelude::Account<'_, MpcRequest>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: no method named `invoke_mpc` found for struct `anchor_lang::prelude::Account<'_, MpcRequest>` in the current scope\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:512:34\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m512\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx.accounts.mpc_request.invoke_mpc(\n    \u001b[1m\u001b[94m|\u001b[0m         \u001b[1m\u001b[94m-------------------------\u001b[0m\u001b[1m\u001b[91m^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mmethod not found in `anchor_lang::prelude::Account<'_, MpcRequest>`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"no method named `invoke_mpc` found for struct `anchor_lang::prelude::Account<'_, MpcRequest>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":17817,"byte_end":17842,"line_start":512,"line_end":512,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        ctx.accounts.mpc_request.invoke_mpc(","highlight_start":9,"highlight_end":34}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":17842,"byte_end":17852,"line_start":512,"line_end":512,"column_start":34,"column_end":44,"is_primary":true,"text":[{"text":"        ctx.accounts.mpc_request.invoke_mpc(","highlight_start":34,"highlight_end":44}],"label":"method not found in `anchor_lang::prelude::Account<'_, MpcRequest>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: no method named `invoke_mpc` found for struct `anchor_lang::prelude::Account<'_, MpcRequest>` in the current scope\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:512:34\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m512\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx.accounts.mpc_request.invoke_mpc(\n    \u001b[1m\u001b[94m|\u001b[0m         \u001b[1m\u001b[94m-------------------------\u001b[0m\u001b[1m\u001b[91m^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mmethod not found in `anchor_lang::prelude::Account<'_, MpcRequest>`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseFromGroup<'_>: Bumps` is not satisfied in `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseFromGroup<'_>>`","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":20132,"byte_end":20169,"line_start":578,"line_end":578,"column_start":14,"column_end":51,"is_primary":true,"text":[{"text":"        ctx: Context<ConfidentialReleaseFromGroup>,","highlight_start":14,"highlight_end":51}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"within `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseFromGroup<'_>>`, the trait `Bumps` is not implemented for `ConfidentialReleaseFromGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":38002,"byte_end":38048,"line_start":1255,"line_end":1255,"column_start":1,"column_end":47,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseFromGroup<'info> {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `Bumps`:\n  ConfidentialDeposit<'info>\n  ConfidentialDepositCallback<'info>\n  ConfidentialTransferCallback<'info>\n  ConfidentialTransferFromPoolCallback<'info>\n  ConfidentialWithdraw<'info>\n  ConfidentialWithdrawCallback<'info>\n  CreateConfidentialGroupPool<'info>\n  CreateGroupPool<'info>\nand 95 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required because it appears within the type `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseFromGroup<'_>>`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs","byte_start":796,"byte_end":803,"line_start":24,"line_end":24,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"pub struct Context<'a, 'b, 'c, 'info, T: Bumps> {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"unsized fn params are gated as an unstable feature","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"function arguments must have a statically known size, borrowed types always have a known size","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":20132,"byte_end":20132,"line_start":578,"line_end":578,"column_start":14,"column_end":14,"is_primary":true,"text":[{"text":"        ctx: Context<ConfidentialReleaseFromGroup>,","highlight_start":14,"highlight_end":14}],"label":null,"suggested_replacement":"&","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseFromGroup<'_>: Bumps` is not satisfied in `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseFromGroup<'_>>`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:578:14\n     \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m578\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx: Context<ConfidentialReleaseFromGroup>,\n     \u001b[1m\u001b[94m|\u001b[0m              \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: within `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseFromGroup<'_>>`, the trait `Bumps` is not implemented for `ConfidentialReleaseFromGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1255:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1255\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseFromGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `Bumps`:\n               ConfidentialDeposit<'info>\n               ConfidentialDepositCallback<'info>\n               ConfidentialTransferCallback<'info>\n               ConfidentialTransferFromPoolCallback<'info>\n               ConfidentialWithdraw<'info>\n               ConfidentialWithdrawCallback<'info>\n               CreateConfidentialGroupPool<'info>\n               CreateGroupPool<'info>\n             and 95 others\n\u001b[1m\u001b[92mnote\u001b[0m: required because it appears within the type `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseFromGroup<'_>>`\n    \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs:24:12\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m24\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct Context<'a, 'b, 'c, 'info, T: Bumps> {\n     \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[92m^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: unsized fn params are gated as an unstable feature\n\u001b[1m\u001b[96mhelp\u001b[0m: function arguments must have a statically known size, borrowed types always have a known size\n     \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m578\u001b[0m \u001b[1m\u001b[94m| \u001b[0m        ctx: \u001b[92m&\u001b[0mContext<ConfidentialReleaseFromGroup>,\n     \u001b[1m\u001b[94m|\u001b[0m              \u001b[92m+\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `ConfidentialReleaseFromGroup<'_>: Bumps` is not satisfied in `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseFromGroup<'_>>`","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":20132,"byte_end":20169,"line_start":578,"line_end":578,"column_start":14,"column_end":51,"is_primary":true,"text":[{"text":"        ctx: Context<ConfidentialReleaseFromGroup>,","highlight_start":14,"highlight_end":51}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"within `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseFromGroup<'_>>`, the trait `Bumps` is not implemented for `ConfidentialReleaseFromGroup<'_>`","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":38002,"byte_end":38048,"line_start":1255,"line_end":1255,"column_start":1,"column_end":47,"is_primary":true,"text":[{"text":"pub struct ConfidentialReleaseFromGroup<'info> {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following other types implement trait `Bumps`:\n  ConfidentialDeposit<'info>\n  ConfidentialDepositCallback<'info>\n  ConfidentialTransferCallback<'info>\n  ConfidentialTransferFromPoolCallback<'info>\n  ConfidentialWithdraw<'info>\n  ConfidentialWithdrawCallback<'info>\n  CreateConfidentialGroupPool<'info>\n  CreateGroupPool<'info>\nand 95 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required because it appears within the type `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseFromGroup<'_>>`","code":null,"level":"note","spans":[{"file_name":"/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs","byte_start":796,"byte_end":803,"line_start":24,"line_end":24,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"pub struct Context<'a, 'b, 'c, 'info, T: Bumps> {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"unsized fn params are gated as an unstable feature","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"function arguments must have a statically known size, borrowed types always have a known size","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":20132,"byte_end":20132,"line_start":578,"line_end":578,"column_start":14,"column_end":14,"is_primary":true,"text":[{"text":"        ctx: Context<ConfidentialReleaseFromGroup>,","highlight_start":14,"highlight_end":14}],"label":null,"suggested_replacement":"&","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0277]\u001b[0m\u001b[1m: the trait bound `ConfidentialReleaseFromGroup<'_>: Bumps` is not satisfied in `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseFromGroup<'_>>`\u001b[0m\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:578:14\n     \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m578\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx: Context<ConfidentialReleaseFromGroup>,\n     \u001b[1m\u001b[94m|\u001b[0m              \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91munsatisfied trait bound\u001b[0m\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: within `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseFromGroup<'_>>`, the trait `Bumps` is not implemented for `ConfidentialReleaseFromGroup<'_>`\n    \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:1255:1\n     \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m1255\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct ConfidentialReleaseFromGroup<'info> {\n     \u001b[1m\u001b[94m|\u001b[0m \u001b[1m\u001b[96m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: the following other types implement trait `Bumps`:\n               ConfidentialDeposit<'info>\n               ConfidentialDepositCallback<'info>\n               ConfidentialTransferCallback<'info>\n               ConfidentialTransferFromPoolCallback<'info>\n               ConfidentialWithdraw<'info>\n               ConfidentialWithdrawCallback<'info>\n               CreateConfidentialGroupPool<'info>\n               CreateGroupPool<'info>\n             and 95 others\n\u001b[1m\u001b[92mnote\u001b[0m: required because it appears within the type `anchor_lang::context::Context<'_, '_, '_, '_, ConfidentialReleaseFromGroup<'_>>`\n    \u001b[1m\u001b[94m--> \u001b[0m/Users/engineering_faliure/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-lang-0.31.1/src/context.rs:24:12\n     \u001b[1m\u001b[94m|\u001b[0m\n  \u001b[1m\u001b[94m24\u001b[0m \u001b[1m\u001b[94m|\u001b[0m pub struct Context<'a, 'b, 'c, 'info, T: Bumps> {\n     \u001b[1m\u001b[94m|\u001b[0m            \u001b[1m\u001b[92m^^^^^^^\u001b[0m\n     \u001b[1m\u001b[94m= \u001b[0m\u001b[1mhelp\u001b[0m: unsized fn params are gated as an unstable feature\n\u001b[1m\u001b[96mhelp\u001b[0m: function arguments must have a statically known size, borrowed types always have a known size\n     \u001b[1m\u001b[94m|\u001b[0m\n \u001b[1m\u001b[94m578\u001b[0m \u001b[1m\u001b[94m| \u001b[0m        ctx: \u001b[92m&\u001b[0mContext<ConfidentialReleaseFromGroup>,\n     \u001b[1m\u001b[94m|\u001b[0m              \u001b[92m+\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"no method named `invoke_mpc` found for struct `anchor_lang::prelude::Account<'_, MpcRequest>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":21188,"byte_end":21213,"line_start":612,"line_end":612,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        ctx.accounts.mpc_request.invoke_mpc(","highlight_start":9,"highlight_end":34}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":21213,"byte_end":21223,"line_start":612,"line_end":612,"column_start":34,"column_end":44,"is_primary":true,"text":[{"text":"        ctx.accounts.mpc_request.invoke_mpc(","highlight_start":34,"highlight_end":44}],"label":"method not found in `anchor_lang::prelude::Account<'_, MpcRequest>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: no method named `invoke_mpc` found for struct `anchor_lang::prelude::Account<'_, MpcRequest>` in the current scope\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:612:34\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m612\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx.accounts.mpc_request.invoke_mpc(\n    \u001b[1m\u001b[94m|\u001b[0m         \u001b[1m\u001b[94m-------------------------\u001b[0m\u001b[1m\u001b[91m^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mmethod not found in `anchor_lang::prelude::Account<'_, MpcRequest>`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"no method named `invoke_mpc` found for struct `anchor_lang::prelude::Account<'_, MpcRequest>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":21188,"byte_end":21213,"line_start":612,"line_end":612,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        ctx.accounts.mpc_request.invoke_mpc(","highlight_start":9,"highlight_end":34}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":21213,"byte_end":21223,"line_start":612,"line_end":612,"column_start":34,"column_end":44,"is_primary":true,"text":[{"text":"        ctx.accounts.mpc_request.invoke_mpc(","highlight_start":34,"highlight_end":44}],"label":"method not found in `anchor_lang::prelude::Account<'_, MpcRequest>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[1m\u001b[91merror[E0599]\u001b[0m\u001b[1m: no method named `invoke_mpc` found for struct `anchor_lang::prelude::Account<'_, MpcRequest>` in the current scope\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:612:34\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m612\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ctx.accounts.mpc_request.invoke_mpc(\n    \u001b[1m\u001b[94m|\u001b[0m         \u001b[1m\u001b[94m-------------------------\u001b[0m\u001b[1m\u001b[91m^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mmethod not found in `anchor_lang::prelude::Account<'_, MpcRequest>`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"temporary value dropped while borrowed","code":{"code":"E0716","explanation":"A temporary value is being dropped while a borrow is still in active use.\n\nErroneous code example:\n\n```compile_fail,E0716\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet p = bar(&foo());\n         // ------ creates a temporary\nlet q = *p;\n```\n\nHere, the expression `&foo()` is borrowing the expression `foo()`. As `foo()` is\na call to a function, and not the name of a variable, this creates a\n**temporary** -- that temporary stores the return value from `foo()` so that it\ncan be borrowed. You could imagine that `let p = bar(&foo());` is equivalent to\nthe following, which uses an explicit temporary variable.\n\nErroneous code example:\n\n```compile_fail,E0597\n# fn foo() -> i32 { 22 }\n# fn bar(x: &i32) -> &i32 { x }\nlet p = {\n  let tmp = foo(); // the temporary\n  bar(&tmp) // error: `tmp` does not live long enough\n}; // <-- tmp is freed as we exit this block\nlet q = p;\n```\n\nWhenever a temporary is created, it is automatically dropped (freed) according\nto fixed rules. Ordinarily, the temporary is dropped at the end of the enclosing\nstatement -- in this case, after the `let p`. This is illustrated in the example\nabove by showing that `tmp` would be freed as we exit the block.\n\nTo fix this problem, you need to create a local variable to store the value in\nrather than relying on a temporary. For example, you might change the original\nprogram to the following:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = foo(); // dropped at the end of the enclosing block\nlet p = bar(&value);\nlet q = *p;\n```\n\nBy introducing the explicit `let value`, we allocate storage that will last\nuntil the end of the enclosing block (when `value` goes out of scope). When we\nborrow `&value`, we are borrowing a local variable that already exists, and\nhence no temporary is created.\n\nTemporaries are not always dropped at the end of the enclosing statement. In\nsimple cases where the `&` expression is immediately stored into a variable, the\ncompiler will automatically extend the lifetime of the temporary until the end\nof the enclosing block. Therefore, an alternative way to fix the original\nprogram is to write `let tmp = &foo()` and not `let tmp = foo()`:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = &foo();\nlet p = bar(value);\nlet q = *p;\n```\n\nHere, we are still borrowing `foo()`, but as the borrow is assigned directly\ninto a variable, the temporary will not be dropped until the end of the\nenclosing block. Similar rules apply when temporaries are stored into aggregate\nstructures like a tuple or struct:\n\n```\n// Here, two temporaries are created, but\n// as they are stored directly into `value`,\n// they are not dropped until the end of the\n// enclosing block.\nfn foo() -> i32 { 22 }\nlet value = (&foo(), &foo());\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":4271,"byte_end":4294,"line_start":117,"line_end":117,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"            ctx.accounts.user.key().as_ref(),","highlight_start":13,"highlight_end":36}],"label":"creates a temporary value which is freed while still in use","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":4361,"byte_end":4362,"line_start":119,"line_end":119,"column_start":10,"column_end":11,"is_primary":false,"text":[{"text":"        ];","highlight_start":10,"highlight_end":11}],"label":"temporary value is freed at the end of this statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":4775,"byte_end":4780,"line_start":129,"line_end":129,"column_start":20,"column_end":25,"is_primary":false,"text":[{"text":"                &[&seeds[..]],","highlight_start":20,"highlight_end":25}],"label":"borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a `let` binding to create a longer lived value","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":4217,"byte_end":4217,"line_start":115,"line_end":115,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        let seeds = &[","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"let binding = ctx.accounts.user.key();\n        ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":4271,"byte_end":4294,"line_start":117,"line_end":117,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"            ctx.accounts.user.key().as_ref(),","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":"binding","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0716]\u001b[0m\u001b[1m: temporary value dropped while borrowed\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:117:13\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m117\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             ctx.accounts.user.key().as_ref(),\n    \u001b[1m\u001b[94m|\u001b[0m             \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mcreates a temporary value which is freed while still in use\u001b[0m\n\u001b[1m\u001b[94m118\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             &[ctx.accounts.user_deposit.bump],\n\u001b[1m\u001b[94m119\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ];\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[94m-\u001b[0m \u001b[1m\u001b[94mtemporary value is freed at the end of this statement\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m129\u001b[0m \u001b[1m\u001b[94m|\u001b[0m                 &[&seeds[..]],\n    \u001b[1m\u001b[94m|\u001b[0m                    \u001b[1m\u001b[94m-----\u001b[0m \u001b[1m\u001b[94mborrow later used here\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: consider using a `let` binding to create a longer lived value\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m115\u001b[0m \u001b[92m~ \u001b[0m        \u001b[92mlet binding = ctx.accounts.user.key();\u001b[0m\n\u001b[1m\u001b[94m116\u001b[0m \u001b[92m~         \u001b[0mlet seeds = &[\n\u001b[1m\u001b[94m117\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             b\"user_vault\",\n\u001b[1m\u001b[94m118\u001b[0m \u001b[92m~ \u001b[0m            \u001b[92mbinding\u001b[0m.as_ref(),\n    \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"temporary value dropped while borrowed","code":{"code":"E0716","explanation":"A temporary value is being dropped while a borrow is still in active use.\n\nErroneous code example:\n\n```compile_fail,E0716\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet p = bar(&foo());\n         // ------ creates a temporary\nlet q = *p;\n```\n\nHere, the expression `&foo()` is borrowing the expression `foo()`. As `foo()` is\na call to a function, and not the name of a variable, this creates a\n**temporary** -- that temporary stores the return value from `foo()` so that it\ncan be borrowed. You could imagine that `let p = bar(&foo());` is equivalent to\nthe following, which uses an explicit temporary variable.\n\nErroneous code example:\n\n```compile_fail,E0597\n# fn foo() -> i32 { 22 }\n# fn bar(x: &i32) -> &i32 { x }\nlet p = {\n  let tmp = foo(); // the temporary\n  bar(&tmp) // error: `tmp` does not live long enough\n}; // <-- tmp is freed as we exit this block\nlet q = p;\n```\n\nWhenever a temporary is created, it is automatically dropped (freed) according\nto fixed rules. Ordinarily, the temporary is dropped at the end of the enclosing\nstatement -- in this case, after the `let p`. This is illustrated in the example\nabove by showing that `tmp` would be freed as we exit the block.\n\nTo fix this problem, you need to create a local variable to store the value in\nrather than relying on a temporary. For example, you might change the original\nprogram to the following:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = foo(); // dropped at the end of the enclosing block\nlet p = bar(&value);\nlet q = *p;\n```\n\nBy introducing the explicit `let value`, we allocate storage that will last\nuntil the end of the enclosing block (when `value` goes out of scope). When we\nborrow `&value`, we are borrowing a local variable that already exists, and\nhence no temporary is created.\n\nTemporaries are not always dropped at the end of the enclosing statement. In\nsimple cases where the `&` expression is immediately stored into a variable, the\ncompiler will automatically extend the lifetime of the temporary until the end\nof the enclosing block. Therefore, an alternative way to fix the original\nprogram is to write `let tmp = &foo()` and not `let tmp = foo()`:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = &foo();\nlet p = bar(value);\nlet q = *p;\n```\n\nHere, we are still borrowing `foo()`, but as the borrow is assigned directly\ninto a variable, the temporary will not be dropped until the end of the\nenclosing block. Similar rules apply when temporaries are stored into aggregate\nstructures like a tuple or struct:\n\n```\n// Here, two temporaries are created, but\n// as they are stored directly into `value`,\n// they are not dropped until the end of the\n// enclosing block.\nfn foo() -> i32 { 22 }\nlet value = (&foo(), &foo());\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":4271,"byte_end":4294,"line_start":117,"line_end":117,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"            ctx.accounts.user.key().as_ref(),","highlight_start":13,"highlight_end":36}],"label":"creates a temporary value which is freed while still in use","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":4361,"byte_end":4362,"line_start":119,"line_end":119,"column_start":10,"column_end":11,"is_primary":false,"text":[{"text":"        ];","highlight_start":10,"highlight_end":11}],"label":"temporary value is freed at the end of this statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":4775,"byte_end":4780,"line_start":129,"line_end":129,"column_start":20,"column_end":25,"is_primary":false,"text":[{"text":"                &[&seeds[..]],","highlight_start":20,"highlight_end":25}],"label":"borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a `let` binding to create a longer lived value","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":4217,"byte_end":4217,"line_start":115,"line_end":115,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        let seeds = &[","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"let binding = ctx.accounts.user.key();\n        ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":4271,"byte_end":4294,"line_start":117,"line_end":117,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"            ctx.accounts.user.key().as_ref(),","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":"binding","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0716]\u001b[0m\u001b[1m: temporary value dropped while borrowed\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:117:13\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m117\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             ctx.accounts.user.key().as_ref(),\n    \u001b[1m\u001b[94m|\u001b[0m             \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mcreates a temporary value which is freed while still in use\u001b[0m\n\u001b[1m\u001b[94m118\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             &[ctx.accounts.user_deposit.bump],\n\u001b[1m\u001b[94m119\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ];\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[94m-\u001b[0m \u001b[1m\u001b[94mtemporary value is freed at the end of this statement\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m129\u001b[0m \u001b[1m\u001b[94m|\u001b[0m                 &[&seeds[..]],\n    \u001b[1m\u001b[94m|\u001b[0m                    \u001b[1m\u001b[94m-----\u001b[0m \u001b[1m\u001b[94mborrow later used here\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: consider using a `let` binding to create a longer lived value\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m115\u001b[0m \u001b[92m~ \u001b[0m        \u001b[92mlet binding = ctx.accounts.user.key();\u001b[0m\n\u001b[1m\u001b[94m116\u001b[0m \u001b[92m~         \u001b[0mlet seeds = &[\n\u001b[1m\u001b[94m117\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             b\"user_vault\",\n\u001b[1m\u001b[94m118\u001b[0m \u001b[92m~ \u001b[0m            \u001b[92mbinding\u001b[0m.as_ref(),\n    \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"temporary value dropped while borrowed","code":{"code":"E0716","explanation":"A temporary value is being dropped while a borrow is still in active use.\n\nErroneous code example:\n\n```compile_fail,E0716\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet p = bar(&foo());\n         // ------ creates a temporary\nlet q = *p;\n```\n\nHere, the expression `&foo()` is borrowing the expression `foo()`. As `foo()` is\na call to a function, and not the name of a variable, this creates a\n**temporary** -- that temporary stores the return value from `foo()` so that it\ncan be borrowed. You could imagine that `let p = bar(&foo());` is equivalent to\nthe following, which uses an explicit temporary variable.\n\nErroneous code example:\n\n```compile_fail,E0597\n# fn foo() -> i32 { 22 }\n# fn bar(x: &i32) -> &i32 { x }\nlet p = {\n  let tmp = foo(); // the temporary\n  bar(&tmp) // error: `tmp` does not live long enough\n}; // <-- tmp is freed as we exit this block\nlet q = p;\n```\n\nWhenever a temporary is created, it is automatically dropped (freed) according\nto fixed rules. Ordinarily, the temporary is dropped at the end of the enclosing\nstatement -- in this case, after the `let p`. This is illustrated in the example\nabove by showing that `tmp` would be freed as we exit the block.\n\nTo fix this problem, you need to create a local variable to store the value in\nrather than relying on a temporary. For example, you might change the original\nprogram to the following:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = foo(); // dropped at the end of the enclosing block\nlet p = bar(&value);\nlet q = *p;\n```\n\nBy introducing the explicit `let value`, we allocate storage that will last\nuntil the end of the enclosing block (when `value` goes out of scope). When we\nborrow `&value`, we are borrowing a local variable that already exists, and\nhence no temporary is created.\n\nTemporaries are not always dropped at the end of the enclosing statement. In\nsimple cases where the `&` expression is immediately stored into a variable, the\ncompiler will automatically extend the lifetime of the temporary until the end\nof the enclosing block. Therefore, an alternative way to fix the original\nprogram is to write `let tmp = &foo()` and not `let tmp = foo()`:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = &foo();\nlet p = bar(value);\nlet q = *p;\n```\n\nHere, we are still borrowing `foo()`, but as the borrow is assigned directly\ninto a variable, the temporary will not be dropped until the end of the\nenclosing block. Similar rules apply when temporaries are stored into aggregate\nstructures like a tuple or struct:\n\n```\n// Here, two temporaries are created, but\n// as they are stored directly into `value`,\n// they are not dropped until the end of the\n// enclosing block.\nfn foo() -> i32 { 22 }\nlet value = (&foo(), &foo());\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":6583,"byte_end":6606,"line_start":186,"line_end":186,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"            ctx.accounts.user.key().as_ref(),","highlight_start":13,"highlight_end":36}],"label":"creates a temporary value which is freed while still in use","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":6673,"byte_end":6674,"line_start":188,"line_end":188,"column_start":10,"column_end":11,"is_primary":false,"text":[{"text":"        ];","highlight_start":10,"highlight_end":11}],"label":"temporary value is freed at the end of this statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":7080,"byte_end":7085,"line_start":198,"line_end":198,"column_start":20,"column_end":25,"is_primary":false,"text":[{"text":"                &[&seeds[..]],","highlight_start":20,"highlight_end":25}],"label":"borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a `let` binding to create a longer lived value","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":6529,"byte_end":6529,"line_start":184,"line_end":184,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        let seeds = &[","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"let binding = ctx.accounts.user.key();\n        ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":6583,"byte_end":6606,"line_start":186,"line_end":186,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"            ctx.accounts.user.key().as_ref(),","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":"binding","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0716]\u001b[0m\u001b[1m: temporary value dropped while borrowed\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:186:13\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m186\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             ctx.accounts.user.key().as_ref(),\n    \u001b[1m\u001b[94m|\u001b[0m             \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mcreates a temporary value which is freed while still in use\u001b[0m\n\u001b[1m\u001b[94m187\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             &[ctx.accounts.user_deposit.bump],\n\u001b[1m\u001b[94m188\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ];\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[94m-\u001b[0m \u001b[1m\u001b[94mtemporary value is freed at the end of this statement\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m198\u001b[0m \u001b[1m\u001b[94m|\u001b[0m                 &[&seeds[..]],\n    \u001b[1m\u001b[94m|\u001b[0m                    \u001b[1m\u001b[94m-----\u001b[0m \u001b[1m\u001b[94mborrow later used here\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: consider using a `let` binding to create a longer lived value\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m184\u001b[0m \u001b[92m~ \u001b[0m        \u001b[92mlet binding = ctx.accounts.user.key();\u001b[0m\n\u001b[1m\u001b[94m185\u001b[0m \u001b[92m~         \u001b[0mlet seeds = &[\n\u001b[1m\u001b[94m186\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             b\"user_vault\",\n\u001b[1m\u001b[94m187\u001b[0m \u001b[92m~ \u001b[0m            \u001b[92mbinding\u001b[0m.as_ref(),\n    \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"temporary value dropped while borrowed","code":{"code":"E0716","explanation":"A temporary value is being dropped while a borrow is still in active use.\n\nErroneous code example:\n\n```compile_fail,E0716\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet p = bar(&foo());\n         // ------ creates a temporary\nlet q = *p;\n```\n\nHere, the expression `&foo()` is borrowing the expression `foo()`. As `foo()` is\na call to a function, and not the name of a variable, this creates a\n**temporary** -- that temporary stores the return value from `foo()` so that it\ncan be borrowed. You could imagine that `let p = bar(&foo());` is equivalent to\nthe following, which uses an explicit temporary variable.\n\nErroneous code example:\n\n```compile_fail,E0597\n# fn foo() -> i32 { 22 }\n# fn bar(x: &i32) -> &i32 { x }\nlet p = {\n  let tmp = foo(); // the temporary\n  bar(&tmp) // error: `tmp` does not live long enough\n}; // <-- tmp is freed as we exit this block\nlet q = p;\n```\n\nWhenever a temporary is created, it is automatically dropped (freed) according\nto fixed rules. Ordinarily, the temporary is dropped at the end of the enclosing\nstatement -- in this case, after the `let p`. This is illustrated in the example\nabove by showing that `tmp` would be freed as we exit the block.\n\nTo fix this problem, you need to create a local variable to store the value in\nrather than relying on a temporary. For example, you might change the original\nprogram to the following:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = foo(); // dropped at the end of the enclosing block\nlet p = bar(&value);\nlet q = *p;\n```\n\nBy introducing the explicit `let value`, we allocate storage that will last\nuntil the end of the enclosing block (when `value` goes out of scope). When we\nborrow `&value`, we are borrowing a local variable that already exists, and\nhence no temporary is created.\n\nTemporaries are not always dropped at the end of the enclosing statement. In\nsimple cases where the `&` expression is immediately stored into a variable, the\ncompiler will automatically extend the lifetime of the temporary until the end\nof the enclosing block. Therefore, an alternative way to fix the original\nprogram is to write `let tmp = &foo()` and not `let tmp = foo()`:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = &foo();\nlet p = bar(value);\nlet q = *p;\n```\n\nHere, we are still borrowing `foo()`, but as the borrow is assigned directly\ninto a variable, the temporary will not be dropped until the end of the\nenclosing block. Similar rules apply when temporaries are stored into aggregate\nstructures like a tuple or struct:\n\n```\n// Here, two temporaries are created, but\n// as they are stored directly into `value`,\n// they are not dropped until the end of the\n// enclosing block.\nfn foo() -> i32 { 22 }\nlet value = (&foo(), &foo());\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":6583,"byte_end":6606,"line_start":186,"line_end":186,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"            ctx.accounts.user.key().as_ref(),","highlight_start":13,"highlight_end":36}],"label":"creates a temporary value which is freed while still in use","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":6673,"byte_end":6674,"line_start":188,"line_end":188,"column_start":10,"column_end":11,"is_primary":false,"text":[{"text":"        ];","highlight_start":10,"highlight_end":11}],"label":"temporary value is freed at the end of this statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":7080,"byte_end":7085,"line_start":198,"line_end":198,"column_start":20,"column_end":25,"is_primary":false,"text":[{"text":"                &[&seeds[..]],","highlight_start":20,"highlight_end":25}],"label":"borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a `let` binding to create a longer lived value","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":6529,"byte_end":6529,"line_start":184,"line_end":184,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        let seeds = &[","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"let binding = ctx.accounts.user.key();\n        ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":6583,"byte_end":6606,"line_start":186,"line_end":186,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"            ctx.accounts.user.key().as_ref(),","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":"binding","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0716]\u001b[0m\u001b[1m: temporary value dropped while borrowed\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:186:13\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m186\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             ctx.accounts.user.key().as_ref(),\n    \u001b[1m\u001b[94m|\u001b[0m             \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mcreates a temporary value which is freed while still in use\u001b[0m\n\u001b[1m\u001b[94m187\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             &[ctx.accounts.user_deposit.bump],\n\u001b[1m\u001b[94m188\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ];\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[94m-\u001b[0m \u001b[1m\u001b[94mtemporary value is freed at the end of this statement\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m198\u001b[0m \u001b[1m\u001b[94m|\u001b[0m                 &[&seeds[..]],\n    \u001b[1m\u001b[94m|\u001b[0m                    \u001b[1m\u001b[94m-----\u001b[0m \u001b[1m\u001b[94mborrow later used here\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: consider using a `let` binding to create a longer lived value\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m184\u001b[0m \u001b[92m~ \u001b[0m        \u001b[92mlet binding = ctx.accounts.user.key();\u001b[0m\n\u001b[1m\u001b[94m185\u001b[0m \u001b[92m~         \u001b[0mlet seeds = &[\n\u001b[1m\u001b[94m186\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             b\"user_vault\",\n\u001b[1m\u001b[94m187\u001b[0m \u001b[92m~ \u001b[0m            \u001b[92mbinding\u001b[0m.as_ref(),\n    \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"temporary value dropped while borrowed","code":{"code":"E0716","explanation":"A temporary value is being dropped while a borrow is still in active use.\n\nErroneous code example:\n\n```compile_fail,E0716\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet p = bar(&foo());\n         // ------ creates a temporary\nlet q = *p;\n```\n\nHere, the expression `&foo()` is borrowing the expression `foo()`. As `foo()` is\na call to a function, and not the name of a variable, this creates a\n**temporary** -- that temporary stores the return value from `foo()` so that it\ncan be borrowed. You could imagine that `let p = bar(&foo());` is equivalent to\nthe following, which uses an explicit temporary variable.\n\nErroneous code example:\n\n```compile_fail,E0597\n# fn foo() -> i32 { 22 }\n# fn bar(x: &i32) -> &i32 { x }\nlet p = {\n  let tmp = foo(); // the temporary\n  bar(&tmp) // error: `tmp` does not live long enough\n}; // <-- tmp is freed as we exit this block\nlet q = p;\n```\n\nWhenever a temporary is created, it is automatically dropped (freed) according\nto fixed rules. Ordinarily, the temporary is dropped at the end of the enclosing\nstatement -- in this case, after the `let p`. This is illustrated in the example\nabove by showing that `tmp` would be freed as we exit the block.\n\nTo fix this problem, you need to create a local variable to store the value in\nrather than relying on a temporary. For example, you might change the original\nprogram to the following:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = foo(); // dropped at the end of the enclosing block\nlet p = bar(&value);\nlet q = *p;\n```\n\nBy introducing the explicit `let value`, we allocate storage that will last\nuntil the end of the enclosing block (when `value` goes out of scope). When we\nborrow `&value`, we are borrowing a local variable that already exists, and\nhence no temporary is created.\n\nTemporaries are not always dropped at the end of the enclosing statement. In\nsimple cases where the `&` expression is immediately stored into a variable, the\ncompiler will automatically extend the lifetime of the temporary until the end\nof the enclosing block. Therefore, an alternative way to fix the original\nprogram is to write `let tmp = &foo()` and not `let tmp = foo()`:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = &foo();\nlet p = bar(value);\nlet q = *p;\n```\n\nHere, we are still borrowing `foo()`, but as the borrow is assigned directly\ninto a variable, the temporary will not be dropped until the end of the\nenclosing block. Similar rules apply when temporaries are stored into aggregate\nstructures like a tuple or struct:\n\n```\n// Here, two temporaries are created, but\n// as they are stored directly into `value`,\n// they are not dropped until the end of the\n// enclosing block.\nfn foo() -> i32 { 22 }\nlet value = (&foo(), &foo());\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":15070,"byte_end":15093,"line_start":432,"line_end":432,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"            ctx.accounts.user.key().as_ref(),","highlight_start":13,"highlight_end":36}],"label":"creates a temporary value which is freed while still in use","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":15168,"byte_end":15169,"line_start":434,"line_end":434,"column_start":10,"column_end":11,"is_primary":false,"text":[{"text":"        ];","highlight_start":10,"highlight_end":11}],"label":"temporary value is freed at the end of this statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":15582,"byte_end":15587,"line_start":444,"line_end":444,"column_start":20,"column_end":25,"is_primary":false,"text":[{"text":"                &[&seeds[..]],","highlight_start":20,"highlight_end":25}],"label":"borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a `let` binding to create a longer lived value","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":15008,"byte_end":15008,"line_start":430,"line_end":430,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        let seeds = &[","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"let binding = ctx.accounts.user.key();\n        ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":15070,"byte_end":15093,"line_start":432,"line_end":432,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"            ctx.accounts.user.key().as_ref(),","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":"binding","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0716]\u001b[0m\u001b[1m: temporary value dropped while borrowed\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:432:13\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m432\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             ctx.accounts.user.key().as_ref(),\n    \u001b[1m\u001b[94m|\u001b[0m             \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mcreates a temporary value which is freed while still in use\u001b[0m\n\u001b[1m\u001b[94m433\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             &[ctx.accounts.confidential_deposit.bump],\n\u001b[1m\u001b[94m434\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ];\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[94m-\u001b[0m \u001b[1m\u001b[94mtemporary value is freed at the end of this statement\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m444\u001b[0m \u001b[1m\u001b[94m|\u001b[0m                 &[&seeds[..]],\n    \u001b[1m\u001b[94m|\u001b[0m                    \u001b[1m\u001b[94m-----\u001b[0m \u001b[1m\u001b[94mborrow later used here\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: consider using a `let` binding to create a longer lived value\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m430\u001b[0m \u001b[92m~ \u001b[0m        \u001b[92mlet binding = ctx.accounts.user.key();\u001b[0m\n\u001b[1m\u001b[94m431\u001b[0m \u001b[92m~         \u001b[0mlet seeds = &[\n\u001b[1m\u001b[94m432\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             b\"confidential_vault\",\n\u001b[1m\u001b[94m433\u001b[0m \u001b[92m~ \u001b[0m            \u001b[92mbinding\u001b[0m.as_ref(),\n    \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"temporary value dropped while borrowed","code":{"code":"E0716","explanation":"A temporary value is being dropped while a borrow is still in active use.\n\nErroneous code example:\n\n```compile_fail,E0716\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet p = bar(&foo());\n         // ------ creates a temporary\nlet q = *p;\n```\n\nHere, the expression `&foo()` is borrowing the expression `foo()`. As `foo()` is\na call to a function, and not the name of a variable, this creates a\n**temporary** -- that temporary stores the return value from `foo()` so that it\ncan be borrowed. You could imagine that `let p = bar(&foo());` is equivalent to\nthe following, which uses an explicit temporary variable.\n\nErroneous code example:\n\n```compile_fail,E0597\n# fn foo() -> i32 { 22 }\n# fn bar(x: &i32) -> &i32 { x }\nlet p = {\n  let tmp = foo(); // the temporary\n  bar(&tmp) // error: `tmp` does not live long enough\n}; // <-- tmp is freed as we exit this block\nlet q = p;\n```\n\nWhenever a temporary is created, it is automatically dropped (freed) according\nto fixed rules. Ordinarily, the temporary is dropped at the end of the enclosing\nstatement -- in this case, after the `let p`. This is illustrated in the example\nabove by showing that `tmp` would be freed as we exit the block.\n\nTo fix this problem, you need to create a local variable to store the value in\nrather than relying on a temporary. For example, you might change the original\nprogram to the following:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = foo(); // dropped at the end of the enclosing block\nlet p = bar(&value);\nlet q = *p;\n```\n\nBy introducing the explicit `let value`, we allocate storage that will last\nuntil the end of the enclosing block (when `value` goes out of scope). When we\nborrow `&value`, we are borrowing a local variable that already exists, and\nhence no temporary is created.\n\nTemporaries are not always dropped at the end of the enclosing statement. In\nsimple cases where the `&` expression is immediately stored into a variable, the\ncompiler will automatically extend the lifetime of the temporary until the end\nof the enclosing block. Therefore, an alternative way to fix the original\nprogram is to write `let tmp = &foo()` and not `let tmp = foo()`:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = &foo();\nlet p = bar(value);\nlet q = *p;\n```\n\nHere, we are still borrowing `foo()`, but as the borrow is assigned directly\ninto a variable, the temporary will not be dropped until the end of the\nenclosing block. Similar rules apply when temporaries are stored into aggregate\nstructures like a tuple or struct:\n\n```\n// Here, two temporaries are created, but\n// as they are stored directly into `value`,\n// they are not dropped until the end of the\n// enclosing block.\nfn foo() -> i32 { 22 }\nlet value = (&foo(), &foo());\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":15070,"byte_end":15093,"line_start":432,"line_end":432,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"            ctx.accounts.user.key().as_ref(),","highlight_start":13,"highlight_end":36}],"label":"creates a temporary value which is freed while still in use","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":15168,"byte_end":15169,"line_start":434,"line_end":434,"column_start":10,"column_end":11,"is_primary":false,"text":[{"text":"        ];","highlight_start":10,"highlight_end":11}],"label":"temporary value is freed at the end of this statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":15582,"byte_end":15587,"line_start":444,"line_end":444,"column_start":20,"column_end":25,"is_primary":false,"text":[{"text":"                &[&seeds[..]],","highlight_start":20,"highlight_end":25}],"label":"borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a `let` binding to create a longer lived value","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":15008,"byte_end":15008,"line_start":430,"line_end":430,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        let seeds = &[","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"let binding = ctx.accounts.user.key();\n        ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":15070,"byte_end":15093,"line_start":432,"line_end":432,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"            ctx.accounts.user.key().as_ref(),","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":"binding","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0716]\u001b[0m\u001b[1m: temporary value dropped while borrowed\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:432:13\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m432\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             ctx.accounts.user.key().as_ref(),\n    \u001b[1m\u001b[94m|\u001b[0m             \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mcreates a temporary value which is freed while still in use\u001b[0m\n\u001b[1m\u001b[94m433\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             &[ctx.accounts.confidential_deposit.bump],\n\u001b[1m\u001b[94m434\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ];\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[94m-\u001b[0m \u001b[1m\u001b[94mtemporary value is freed at the end of this statement\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m444\u001b[0m \u001b[1m\u001b[94m|\u001b[0m                 &[&seeds[..]],\n    \u001b[1m\u001b[94m|\u001b[0m                    \u001b[1m\u001b[94m-----\u001b[0m \u001b[1m\u001b[94mborrow later used here\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: consider using a `let` binding to create a longer lived value\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m430\u001b[0m \u001b[92m~ \u001b[0m        \u001b[92mlet binding = ctx.accounts.user.key();\u001b[0m\n\u001b[1m\u001b[94m431\u001b[0m \u001b[92m~         \u001b[0mlet seeds = &[\n\u001b[1m\u001b[94m432\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             b\"confidential_vault\",\n\u001b[1m\u001b[94m433\u001b[0m \u001b[92m~ \u001b[0m            \u001b[92mbinding\u001b[0m.as_ref(),\n    \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"temporary value dropped while borrowed","code":{"code":"E0716","explanation":"A temporary value is being dropped while a borrow is still in active use.\n\nErroneous code example:\n\n```compile_fail,E0716\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet p = bar(&foo());\n         // ------ creates a temporary\nlet q = *p;\n```\n\nHere, the expression `&foo()` is borrowing the expression `foo()`. As `foo()` is\na call to a function, and not the name of a variable, this creates a\n**temporary** -- that temporary stores the return value from `foo()` so that it\ncan be borrowed. You could imagine that `let p = bar(&foo());` is equivalent to\nthe following, which uses an explicit temporary variable.\n\nErroneous code example:\n\n```compile_fail,E0597\n# fn foo() -> i32 { 22 }\n# fn bar(x: &i32) -> &i32 { x }\nlet p = {\n  let tmp = foo(); // the temporary\n  bar(&tmp) // error: `tmp` does not live long enough\n}; // <-- tmp is freed as we exit this block\nlet q = p;\n```\n\nWhenever a temporary is created, it is automatically dropped (freed) according\nto fixed rules. Ordinarily, the temporary is dropped at the end of the enclosing\nstatement -- in this case, after the `let p`. This is illustrated in the example\nabove by showing that `tmp` would be freed as we exit the block.\n\nTo fix this problem, you need to create a local variable to store the value in\nrather than relying on a temporary. For example, you might change the original\nprogram to the following:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = foo(); // dropped at the end of the enclosing block\nlet p = bar(&value);\nlet q = *p;\n```\n\nBy introducing the explicit `let value`, we allocate storage that will last\nuntil the end of the enclosing block (when `value` goes out of scope). When we\nborrow `&value`, we are borrowing a local variable that already exists, and\nhence no temporary is created.\n\nTemporaries are not always dropped at the end of the enclosing statement. In\nsimple cases where the `&` expression is immediately stored into a variable, the\ncompiler will automatically extend the lifetime of the temporary until the end\nof the enclosing block. Therefore, an alternative way to fix the original\nprogram is to write `let tmp = &foo()` and not `let tmp = foo()`:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = &foo();\nlet p = bar(value);\nlet q = *p;\n```\n\nHere, we are still borrowing `foo()`, but as the borrow is assigned directly\ninto a variable, the temporary will not be dropped until the end of the\nenclosing block. Similar rules apply when temporaries are stored into aggregate\nstructures like a tuple or struct:\n\n```\n// Here, two temporaries are created, but\n// as they are stored directly into `value`,\n// they are not dropped until the end of the\n// enclosing block.\nfn foo() -> i32 { 22 }\nlet value = (&foo(), &foo());\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":19078,"byte_end":19101,"line_start":550,"line_end":550,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"            ctx.accounts.user.key().as_ref(),","highlight_start":13,"highlight_end":36}],"label":"creates a temporary value which is freed while still in use","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":19176,"byte_end":19177,"line_start":552,"line_end":552,"column_start":10,"column_end":11,"is_primary":false,"text":[{"text":"        ];","highlight_start":10,"highlight_end":11}],"label":"temporary value is freed at the end of this statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":19702,"byte_end":19707,"line_start":565,"line_end":565,"column_start":20,"column_end":25,"is_primary":false,"text":[{"text":"                &[&seeds[..]],","highlight_start":20,"highlight_end":25}],"label":"borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a `let` binding to create a longer lived value","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":19016,"byte_end":19016,"line_start":548,"line_end":548,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        let seeds = &[","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"let binding = ctx.accounts.user.key();\n        ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":19078,"byte_end":19101,"line_start":550,"line_end":550,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"            ctx.accounts.user.key().as_ref(),","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":"binding","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0716]\u001b[0m\u001b[1m: temporary value dropped while borrowed\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:550:13\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m550\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             ctx.accounts.user.key().as_ref(),\n    \u001b[1m\u001b[94m|\u001b[0m             \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mcreates a temporary value which is freed while still in use\u001b[0m\n\u001b[1m\u001b[94m551\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             &[ctx.accounts.confidential_deposit.bump],\n\u001b[1m\u001b[94m552\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ];\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[94m-\u001b[0m \u001b[1m\u001b[94mtemporary value is freed at the end of this statement\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m565\u001b[0m \u001b[1m\u001b[94m|\u001b[0m                 &[&seeds[..]],\n    \u001b[1m\u001b[94m|\u001b[0m                    \u001b[1m\u001b[94m-----\u001b[0m \u001b[1m\u001b[94mborrow later used here\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: consider using a `let` binding to create a longer lived value\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m548\u001b[0m \u001b[92m~ \u001b[0m        \u001b[92mlet binding = ctx.accounts.user.key();\u001b[0m\n\u001b[1m\u001b[94m549\u001b[0m \u001b[92m~         \u001b[0mlet seeds = &[\n\u001b[1m\u001b[94m550\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             b\"confidential_vault\",\n\u001b[1m\u001b[94m551\u001b[0m \u001b[92m~ \u001b[0m            \u001b[92mbinding\u001b[0m.as_ref(),\n    \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"temporary value dropped while borrowed","code":{"code":"E0716","explanation":"A temporary value is being dropped while a borrow is still in active use.\n\nErroneous code example:\n\n```compile_fail,E0716\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet p = bar(&foo());\n         // ------ creates a temporary\nlet q = *p;\n```\n\nHere, the expression `&foo()` is borrowing the expression `foo()`. As `foo()` is\na call to a function, and not the name of a variable, this creates a\n**temporary** -- that temporary stores the return value from `foo()` so that it\ncan be borrowed. You could imagine that `let p = bar(&foo());` is equivalent to\nthe following, which uses an explicit temporary variable.\n\nErroneous code example:\n\n```compile_fail,E0597\n# fn foo() -> i32 { 22 }\n# fn bar(x: &i32) -> &i32 { x }\nlet p = {\n  let tmp = foo(); // the temporary\n  bar(&tmp) // error: `tmp` does not live long enough\n}; // <-- tmp is freed as we exit this block\nlet q = p;\n```\n\nWhenever a temporary is created, it is automatically dropped (freed) according\nto fixed rules. Ordinarily, the temporary is dropped at the end of the enclosing\nstatement -- in this case, after the `let p`. This is illustrated in the example\nabove by showing that `tmp` would be freed as we exit the block.\n\nTo fix this problem, you need to create a local variable to store the value in\nrather than relying on a temporary. For example, you might change the original\nprogram to the following:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = foo(); // dropped at the end of the enclosing block\nlet p = bar(&value);\nlet q = *p;\n```\n\nBy introducing the explicit `let value`, we allocate storage that will last\nuntil the end of the enclosing block (when `value` goes out of scope). When we\nborrow `&value`, we are borrowing a local variable that already exists, and\nhence no temporary is created.\n\nTemporaries are not always dropped at the end of the enclosing statement. In\nsimple cases where the `&` expression is immediately stored into a variable, the\ncompiler will automatically extend the lifetime of the temporary until the end\nof the enclosing block. Therefore, an alternative way to fix the original\nprogram is to write `let tmp = &foo()` and not `let tmp = foo()`:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = &foo();\nlet p = bar(value);\nlet q = *p;\n```\n\nHere, we are still borrowing `foo()`, but as the borrow is assigned directly\ninto a variable, the temporary will not be dropped until the end of the\nenclosing block. Similar rules apply when temporaries are stored into aggregate\nstructures like a tuple or struct:\n\n```\n// Here, two temporaries are created, but\n// as they are stored directly into `value`,\n// they are not dropped until the end of the\n// enclosing block.\nfn foo() -> i32 { 22 }\nlet value = (&foo(), &foo());\n```\n"},"level":"error","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":19078,"byte_end":19101,"line_start":550,"line_end":550,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"            ctx.accounts.user.key().as_ref(),","highlight_start":13,"highlight_end":36}],"label":"creates a temporary value which is freed while still in use","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":19176,"byte_end":19177,"line_start":552,"line_end":552,"column_start":10,"column_end":11,"is_primary":false,"text":[{"text":"        ];","highlight_start":10,"highlight_end":11}],"label":"temporary value is freed at the end of this statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":19702,"byte_end":19707,"line_start":565,"line_end":565,"column_start":20,"column_end":25,"is_primary":false,"text":[{"text":"                &[&seeds[..]],","highlight_start":20,"highlight_end":25}],"label":"borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a `let` binding to create a longer lived value","code":null,"level":"help","spans":[{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":19016,"byte_end":19016,"line_start":548,"line_end":548,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        let seeds = &[","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"let binding = ctx.accounts.user.key();\n        ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"programs/solcircle_arcium/src/lib.rs","byte_start":19078,"byte_end":19101,"line_start":550,"line_end":550,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"            ctx.accounts.user.key().as_ref(),","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":"binding","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[91merror[E0716]\u001b[0m\u001b[1m: temporary value dropped while borrowed\u001b[0m\n   \u001b[1m\u001b[94m--> \u001b[0mprograms/solcircle_arcium/src/lib.rs:550:13\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m550\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             ctx.accounts.user.key().as_ref(),\n    \u001b[1m\u001b[94m|\u001b[0m             \u001b[1m\u001b[91m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[1m\u001b[91mcreates a temporary value which is freed while still in use\u001b[0m\n\u001b[1m\u001b[94m551\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             &[ctx.accounts.confidential_deposit.bump],\n\u001b[1m\u001b[94m552\u001b[0m \u001b[1m\u001b[94m|\u001b[0m         ];\n    \u001b[1m\u001b[94m|\u001b[0m          \u001b[1m\u001b[94m-\u001b[0m \u001b[1m\u001b[94mtemporary value is freed at the end of this statement\u001b[0m\n\u001b[1m\u001b[94m...\u001b[0m\n\u001b[1m\u001b[94m565\u001b[0m \u001b[1m\u001b[94m|\u001b[0m                 &[&seeds[..]],\n    \u001b[1m\u001b[94m|\u001b[0m                    \u001b[1m\u001b[94m-----\u001b[0m \u001b[1m\u001b[94mborrow later used here\u001b[0m\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[96mhelp\u001b[0m: consider using a `let` binding to create a longer lived value\n    \u001b[1m\u001b[94m|\u001b[0m\n\u001b[1m\u001b[94m548\u001b[0m \u001b[92m~ \u001b[0m        \u001b[92mlet binding = ctx.accounts.user.key();\u001b[0m\n\u001b[1m\u001b[94m549\u001b[0m \u001b[92m~         \u001b[0mlet seeds = &[\n\u001b[1m\u001b[94m550\u001b[0m \u001b[1m\u001b[94m|\u001b[0m             b\"confidential_vault\",\n\u001b[1m\u001b[94m551\u001b[0m \u001b[92m~ \u001b[0m            \u001b[92mbinding\u001b[0m.as_ref(),\n    \u001b[1m\u001b[94m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0277, E0432, E0433, E0599, E0716.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[1mSome errors have detailed explanations: E0277, E0432, E0433, E0599, E0716.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0277, E0432, E0433, E0599, E0716.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[1mSome errors have detailed explanations: E0277, E0432, E0433, E0599, E0716.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium#0.1.0","manifest_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/Cargo.toml","target":{"kind":["cdylib","lib"],"crate_types":["cdylib","lib"],"name":"solcircle_arcium","src_path":"/Users/engineering_faliure/Desktop/Projects/mono_solana/solcircle/contract/programs/solcircle_arcium/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}}
{"reason":"build-finished","success":false}
